{"ast":null,"code":"import _defineProperty from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/src/pages/tables/Bootstrap.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TableHeaderColumn from \"react-bootstrap-table-next\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Container, CustomInput, Form, FormGroup, FormText, Input, InputGroup, InputGroupAddon, Label, Row, Table } from \"reactstrap\";\nimport { Edit2, Trash } from \"react-feather\";\nimport avatar1 from \"../../assets/img/avatars/avatar.jpg\";\nimport avatar2 from \"../../assets/img/avatars/avatar-2.jpg\";\nimport avatar3 from \"../../assets/img/avatars/avatar-3.jpg\";\nimport avatar4 from \"../../assets/img/avatars/avatar-4.jpg\";\n\nvar PersonList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PersonList, _React$Component);\n\n  function PersonList(props) {\n    var _this;\n\n    _classCallCheck(this, PersonList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PersonList).call(this, props));\n\n    _this.refreshList = function () {\n      axios.get(\"http://localhost:8000/api/todos/\").then(function (res) {\n        return _this.setState({\n          todolist: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleSubmit = function () {\n      console.log(_this.state.activeItem);\n      var itemToBeSubmitted = {\n        title: _this.state.activeItem.title,\n        description: _this.state.activeItem.description,\n        completed: _this.state.activeItem.completed\n      };\n\n      if (itemToBeSubmitted.id) {\n        axios.put(\"http://localhost:8000/api/todos/\".concat(itemToBeSubmitted.id, \"/\"), itemToBeSubmitted).then(function (res) {\n          return _this.refreshList();\n        });\n        return;\n      }\n\n      axios.post(\"http://localhost:8000/api/todos/\", itemToBeSubmitted).then(function (res) {\n        return _this.refreshList();\n      });\n    };\n\n    _this.handleChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      if (e.target.type === \"checkbox\") {\n        value = e.target.checked;\n      }\n\n      var activeItem = _objectSpread({}, _this.state.activeItem, _defineProperty({}, name, value));\n\n      _this.setState({\n        activeItem: activeItem\n      });\n    };\n\n    _this.handleDelete = function (item) {\n      console.log(item);\n      axios.delete(\"http://localhost:8000/api/todos/\".concat(item)).then(function (res) {\n        return _this.refreshList();\n      });\n    };\n\n    _this.editItem = function (item) {\n      console.log(item);\n\n      _this.setState({\n        activeItem: item\n      });\n    };\n\n    _this.BasicForm = function () {\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Basic form\"), React.createElement(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Default Bootstrap form layout.\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: _this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Title\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"title\",\n        value: _this.state.activeItem.title,\n        onChange: _this.handleChange,\n        placeholder: \"Enter Todo Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"description\",\n        value: _this.state.activeItem.description,\n        onChange: _this.handleChange,\n        placeholder: \"Enter Todo description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"completed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"completed\",\n        checked: _this.state.activeItem.completed,\n        onChange: _this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), \"Completed\")), React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Submit\"))));\n    };\n\n    _this.tableColumns = [{\n      dataField: \"title\",\n      text: \"title\",\n      sort: true\n    }, {\n      dataField: \"description\",\n      text: \"description\",\n      sort: true\n    }, {\n      dataField: 'df1',\n      isDummyField: true,\n      text: 'Action 1',\n      formatter: function formatter(cellContent, row) {\n        console.log('FORMATTER');\n        return React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(Trash, {\n          className: \"align-middle\",\n          type: \"submit\",\n          onClick: function onClick() {\n            return _this.handleDelete(row.id);\n          },\n          size: 18,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }));\n      }\n    }];\n    _this.cellEdit = cellEditFactory({\n      mode: 'click',\n      afterSaveCell: function afterSaveCell(oldValue, newValue, row, column) {\n        _this.editItem(row.id, newValue);\n      }\n    });\n\n    _this.PaginationTable = function () {\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Pagination\"), React.createElement(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Pagination by react-bootstrap-table2\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        keyField: \"id\",\n        data: _this.state.todolist,\n        columns: _this.tableColumns,\n        deleteRow: true,\n        bootstrap4: true,\n        cellEdit: _this.cellEdit,\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })));\n    };\n\n    _this.Tables = function () {\n      return React.createElement(Container, {\n        fluid: true,\n        className: \"p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"h3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Tables\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, _this.BasicForm())), _this.PaginationTable());\n    };\n\n    _this.state = {\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      todolist: []\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PersonList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8000/api/todos/\").then(function (res) {\n        var todolist = res.data;\n\n        _this2.setState({\n          todolist: todolist\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, this.Tables());\n    }\n  }]);\n\n  return PersonList;\n}(React.Component);\n\nexport default PersonList;","map":{"version":3,"sources":["/Users/yanrudall/Development/100_Projects/Django/todo/frontend/src/pages/tables/Bootstrap.js"],"names":["React","axios","BootstrapTable","TableHeaderColumn","ToolkitProvider","paginationFactory","cellEditFactory","Button","Card","CardBody","CardHeader","CardTitle","Col","Container","CustomInput","Form","FormGroup","FormText","Input","InputGroup","InputGroupAddon","Label","Row","Table","Edit2","Trash","avatar1","avatar2","avatar3","avatar4","PersonList","props","refreshList","get","then","res","setState","todolist","data","catch","err","console","log","handleSubmit","state","activeItem","itemToBeSubmitted","title","description","completed","id","put","post","handleChange","e","target","name","value","type","checked","handleDelete","item","delete","editItem","BasicForm","tableColumns","dataField","text","sort","isDummyField","formatter","cellContent","row","cellEdit","mode","afterSaveCell","oldValue","newValue","column","PaginationTable","Tables","bind","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport TableHeaderColumn from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\r\n\r\n\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Col,\r\n  Container,\r\n  CustomInput,\r\n  Form,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Label,\r\n  Row,\r\n  Table\r\n} from \"reactstrap\";\r\n\r\nimport { Edit2, Trash } from \"react-feather\";\r\n\r\nimport avatar1 from \"../../assets/img/avatars/avatar.jpg\";\r\nimport avatar2 from \"../../assets/img/avatars/avatar-2.jpg\";\r\nimport avatar3 from \"../../assets/img/avatars/avatar-3.jpg\";\r\nimport avatar4 from \"../../assets/img/avatars/avatar-4.jpg\";\r\n\r\n\r\nclass PersonList extends React.Component {\r\n  constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeItem: {\r\n                title: \"\",\r\n                description: \"\",\r\n                completed: false\r\n            },\r\n\r\n            todolist: []\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    refreshList = () => {\r\n        axios\r\n          .get(\"http://localhost:8000/api/todos/\")\r\n          .then(res => this.setState({ todolist: res.data }))\r\n          .catch(err => console.log(err));\r\n    };\r\n\r\n      componentDidMount() {\r\n        axios.get(\"http://localhost:8000/api/todos/\")\r\n          .then(res => {\r\n            const todolist = res.data;\r\n            this.setState({ todolist });\r\n          })\r\n      }\r\n\r\n\r\n        handleSubmit = () => {\r\n\r\n            console.log(this.state.activeItem)\r\n\r\n            const itemToBeSubmitted = {\r\n                title: this.state.activeItem.title,\r\n                description: this.state.activeItem.description,\r\n                completed: this.state.activeItem.completed\r\n            };\r\n\r\n\r\n            if (itemToBeSubmitted.id) {\r\n              axios\r\n                .put(`http://localhost:8000/api/todos/${itemToBeSubmitted.id}/`, itemToBeSubmitted)\r\n                .then(res => this.refreshList());\r\n              return;\r\n            }\r\n            axios\r\n              .post(\"http://localhost:8000/api/todos/\", itemToBeSubmitted)\r\n              .then(res => this.refreshList());\r\n        };\r\n\r\n        handleChange = e => {\r\n            let { name, value } = e.target;\r\n\r\n            if (e.target.type === \"checkbox\") {\r\n                value = e.target.checked;\r\n            }\r\n\r\n            const activeItem = { ...this.state.activeItem, [name]: value };\r\n\r\n            this.setState({activeItem });\r\n        };\r\n\r\n        handleDelete = item => {\r\n\r\n            console.log(item)\r\n\r\n            axios\r\n              .delete(`http://localhost:8000/api/todos/${item}`)\r\n              .then(res => this.refreshList());\r\n        };\r\n\r\n        editItem = item => {\r\n            console.log(item)\r\n            this.setState({ activeItem: item});\r\n        };\r\n\r\n\r\n\r\nBasicForm = () => (\r\n\r\n    <Card>\r\n        <CardHeader>\r\n            <CardTitle tag=\"h5\">Basic form</CardTitle>\r\n            <h6 className=\"card-subtitle text-muted\">\r\n            Default Bootstrap form layout.\r\n            </h6>\r\n        </CardHeader>\r\n        <CardBody>\r\n            <Form onSubmit={this.handleSubmit}>\r\n\r\n                <FormGroup>\r\n                  <Label for=\"title\">Title</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={this.state.activeItem.title}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Enter Todo Title\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"description\">Description</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    value={this.state.activeItem.description}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Enter Todo description\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                  <Label for=\"completed\">\r\n                    <Input\r\n                      type=\"checkbox\"\r\n                      name=\"completed\"\r\n                      checked={this.state.activeItem.completed}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    Completed\r\n                  </Label>\r\n                </FormGroup>\r\n\r\n                <Button color=\"primary\" type=\"submit\">Submit</Button>\r\n            </Form>\r\n        </CardBody>\r\n    </Card>\r\n);\r\n\r\n\r\ntableColumns = [\r\n  {\r\n    dataField: \"title\",\r\n    text: \"title\",\r\n    sort: true,\r\n  },\r\n  {\r\n    dataField: \"description\",\r\n    text: \"description\",\r\n    sort: true,\r\n  },\r\n  {\r\n    dataField: 'df1',\r\n    isDummyField: true,\r\n    text: 'Action 1',\r\n    formatter: (cellContent, row) => {\r\n\r\n      console.log('FORMATTER')\r\n\r\n      return (\r\n          <h5>\r\n            <Trash className=\"align-middle\" type=\"submit\" onClick={() => this.handleDelete(row.id)} size={18}  />\r\n          </h5>\r\n        );\r\n      }\r\n  }\r\n];\r\n\r\ncellEdit = cellEditFactory({\r\n\r\n    mode: 'click',\r\n    afterSaveCell: (oldValue, newValue, row, column) => {\r\n        this.editItem(row.id, newValue)\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\nPaginationTable = () => (\r\n\r\n\r\n\r\n\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Pagination</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Pagination by react-bootstrap-table2\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <BootstrapTable\r\n          keyField=\"id\"\r\n          data={this.state.todolist}\r\n          columns={this.tableColumns}\r\n          deleteRow={ true }\r\n          bootstrap4\r\n          cellEdit={ this.cellEdit }\r\n          bordered={false}>\r\n        </BootstrapTable>\r\n\r\n      </CardBody>\r\n    </Card>\r\n);\r\n\r\nTables = () => (\r\n\r\n    <Container fluid className=\"p-0\">\r\n        <h1 className=\"h3 mb-3\">Tables</h1>\r\n\r\n        <Row>\r\n            <Col lg=\"6\">\r\n            {this.BasicForm()}\r\n            </Col>\r\n        </Row>\r\n\r\n        {this.PaginationTable()}\r\n    </Container>\r\n\r\n);\r\n\r\nrender() {\r\n    return (\r\n        <div>\r\n            {this.Tables()}\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PersonList;"]},"metadata":{},"sourceType":"module"}