{"ast":null,"code":"import _defineProperty from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/src/pages/ui-elements/Modals.js\";\nimport React from \"react\";\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Container, Modal, ModalBody, ModalFooter, ModalHeader, Row } from \"reactstrap\";\nvar colors = [{\n  name: \"Primary\",\n  value: \"primary\"\n}, {\n  name: \"Success\",\n  value: \"success\"\n}, {\n  name: \"Danger\",\n  value: \"danger\"\n}, {\n  name: \"Warning\",\n  value: \"warning\"\n}];\nvar sizes = [{\n  name: \"Small\",\n  value: \"sm\"\n}, {\n  name: \"Medium\",\n  value: \"md\"\n}, {\n  name: \"Large\",\n  value: \"lg\"\n}];\n\nvar DefaultModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DefaultModal, _React$Component);\n\n  function DefaultModal(props) {\n    var _this;\n\n    _classCallCheck(this, DefaultModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DefaultModal).call(this, props));\n\n    _this.toggle = function (index) {\n      _this.setState(function (state) {\n        return _defineProperty({}, index, !state[index]);\n      });\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(DefaultModal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      colors.forEach(function (color, index) {\n        _this2.setState(function () {\n          return _defineProperty({}, index, false);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Default modal\"), React.createElement(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Default Bootstrap modal.\")), React.createElement(CardBody, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"), colors.map(function (color, index) {\n        return React.createElement(React.Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: color.value,\n          onClick: function onClick() {\n            return _this3.toggle(index);\n          },\n          className: \"mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, color.name), React.createElement(Modal, {\n          isOpen: _this3.state[index],\n          toggle: function toggle() {\n            return _this3.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(ModalHeader, {\n          toggle: function toggle() {\n            return _this3.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Default modal\"), React.createElement(ModalBody, {\n          className: \"text-center m-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"mb-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\")), React.createElement(ModalFooter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"secondary\",\n          onClick: function onClick() {\n            return _this3.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Close\"), \" \", React.createElement(Button, {\n          color: color.value,\n          onClick: function onClick() {\n            return _this3.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"Save changes\"))));\n      })));\n    }\n  }]);\n\n  return DefaultModal;\n}(React.Component);\n\nvar ColoredModal =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(ColoredModal, _React$Component2);\n\n  function ColoredModal(props) {\n    var _this4;\n\n    _classCallCheck(this, ColoredModal);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(ColoredModal).call(this, props));\n\n    _this4.toggle = function (index) {\n      _this4.setState(function (state) {\n        return _defineProperty({}, index, !state[index]);\n      });\n    };\n\n    _this4.state = {};\n    return _this4;\n  }\n\n  _createClass(ColoredModal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this5 = this;\n\n      colors.forEach(function (color, index) {\n        _this5.setState(function () {\n          return _defineProperty({}, index, false);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Colored modal\"), React.createElement(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Colored Bootstrap modal.\")), React.createElement(CardBody, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"), colors.map(function (color, index) {\n        return React.createElement(React.Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: color.value,\n          onClick: function onClick() {\n            return _this6.toggle(index);\n          },\n          className: \"mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, color.name), React.createElement(Modal, {\n          isOpen: _this6.state[index],\n          toggle: function toggle() {\n            return _this6.toggle(index);\n          },\n          className: \"modal-colored modal-\" + color.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(ModalHeader, {\n          toggle: function toggle() {\n            return _this6.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, \"Colored modal\"), React.createElement(ModalBody, {\n          className: \"text-center m-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"mb-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\")), React.createElement(ModalFooter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"light\",\n          onClick: function onClick() {\n            return _this6.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, \"Close\"), \" \", React.createElement(Button, {\n          color: \"light\",\n          onClick: function onClick() {\n            return _this6.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \"Save changes\"))));\n      })));\n    }\n  }]);\n\n  return ColoredModal;\n}(React.Component);\n\nvar CenteredModal =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(CenteredModal, _React$Component3);\n\n  function CenteredModal(props) {\n    var _this7;\n\n    _classCallCheck(this, CenteredModal);\n\n    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(CenteredModal).call(this, props));\n\n    _this7.toggle = function (index) {\n      _this7.setState(function (state) {\n        return _defineProperty({}, index, !state[index]);\n      });\n    };\n\n    _this7.state = {};\n    return _this7;\n  }\n\n  _createClass(CenteredModal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this8 = this;\n\n      colors.forEach(function (color, index) {\n        _this8.setState(function () {\n          return _defineProperty({}, index, false);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Centered modal\"), React.createElement(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Vertically centered modal.\")), React.createElement(CardBody, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"), colors.map(function (color, index) {\n        return React.createElement(React.Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: color.value,\n          onClick: function onClick() {\n            return _this9.toggle(index);\n          },\n          className: \"mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, color.name), React.createElement(Modal, {\n          isOpen: _this9.state[index],\n          toggle: function toggle() {\n            return _this9.toggle(index);\n          },\n          centered: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, React.createElement(ModalHeader, {\n          toggle: function toggle() {\n            return _this9.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, \"Centered modal\"), React.createElement(ModalBody, {\n          className: \"text-center m-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"mb-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\")), React.createElement(ModalFooter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"secondary\",\n          onClick: function onClick() {\n            return _this9.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }, \"Close\"), \" \", React.createElement(Button, {\n          color: color.value,\n          onClick: function onClick() {\n            return _this9.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, \"Save changes\"))));\n      })));\n    }\n  }]);\n\n  return CenteredModal;\n}(React.Component);\n\nvar ModalSizes =\n/*#__PURE__*/\nfunction (_React$Component4) {\n  _inherits(ModalSizes, _React$Component4);\n\n  function ModalSizes(props) {\n    var _this10;\n\n    _classCallCheck(this, ModalSizes);\n\n    _this10 = _possibleConstructorReturn(this, _getPrototypeOf(ModalSizes).call(this, props));\n\n    _this10.toggle = function (index) {\n      _this10.setState(function (state) {\n        return _defineProperty({}, index, !state[index]);\n      });\n    };\n\n    _this10.state = {};\n    return _this10;\n  }\n\n  _createClass(ModalSizes, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this11 = this;\n\n      colors.forEach(function (color, index) {\n        _this11.setState(function () {\n          return _defineProperty({}, index, false);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this12 = this;\n\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Modal sizes\"), React.createElement(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"These sizes kick in at certain breakpoints to avoid scrollbars on smaller viewports.\")), React.createElement(CardBody, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\"), sizes.map(function (size, index) {\n        return React.createElement(React.Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          onClick: function onClick() {\n            return _this12.toggle(index);\n          },\n          className: \"mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, size.name), React.createElement(Modal, {\n          isOpen: _this12.state[index],\n          toggle: function toggle() {\n            return _this12.toggle(index);\n          },\n          size: size.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        }, React.createElement(ModalHeader, {\n          toggle: function toggle() {\n            return _this12.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, size.name, \" modal\"), React.createElement(ModalBody, {\n          className: \"text-center m-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"mb-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }, \"Use Bootstrap\\u2019s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.\")), React.createElement(ModalFooter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"secondary\",\n          onClick: function onClick() {\n            return _this12.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, \"Close\"), \" \", React.createElement(Button, {\n          color: \"primary\",\n          onClick: function onClick() {\n            return _this12.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        }, \"Save changes\"))));\n      })));\n    }\n  }]);\n\n  return ModalSizes;\n}(React.Component);\n\nvar Modals = function Modals() {\n  return React.createElement(Container, {\n    fluid: true,\n    className: \"p-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"h3 mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, \"Modals\"), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, React.createElement(Col, {\n    lg: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, React.createElement(DefaultModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  })), React.createElement(Col, {\n    lg: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, React.createElement(ColoredModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  })), React.createElement(Col, {\n    lg: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, React.createElement(CenteredModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373\n    },\n    __self: this\n  })), React.createElement(Col, {\n    lg: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, React.createElement(ModalSizes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }))));\n};\n\nexport default Modals;","map":{"version":3,"sources":["/Users/yanrudall/Development/100_Projects/Django/todo/frontend/src/pages/ui-elements/Modals.js"],"names":["React","Button","Card","CardBody","CardHeader","CardTitle","Col","Container","Modal","ModalBody","ModalFooter","ModalHeader","Row","colors","name","value","sizes","DefaultModal","props","toggle","index","setState","state","forEach","color","map","Component","ColoredModal","CenteredModal","ModalSizes","size","Modals"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardTitle,\r\n  Col,\r\n  Container,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row\r\n} from \"reactstrap\";\r\n\r\nconst colors = [\r\n  {\r\n    name: \"Primary\",\r\n    value: \"primary\"\r\n  },\r\n  {\r\n    name: \"Success\",\r\n    value: \"success\"\r\n  },\r\n  {\r\n    name: \"Danger\",\r\n    value: \"danger\"\r\n  },\r\n  {\r\n    name: \"Warning\",\r\n    value: \"warning\"\r\n  }\r\n];\r\n\r\nconst sizes = [\r\n  {\r\n    name: \"Small\",\r\n    value: \"sm\"\r\n  },\r\n  {\r\n    name: \"Medium\",\r\n    value: \"md\"\r\n  },\r\n  {\r\n    name: \"Large\",\r\n    value: \"lg\"\r\n  }\r\n];\r\n\r\nclass DefaultModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  toggle = index => {\r\n    this.setState(state => ({\r\n      [index]: !state[index]\r\n    }));\r\n  };\r\n\r\n  componentWillMount() {\r\n    colors.forEach((color, index) => {\r\n      this.setState(() => ({\r\n        [index]: false\r\n      }));\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h5\">Default modal</CardTitle>\r\n          <h6 className=\"card-subtitle text-muted\">Default Bootstrap modal.</h6>\r\n        </CardHeader>\r\n        <CardBody className=\"text-center\">\r\n          <p>\r\n            Use Bootstrap’s JavaScript modal plugin to add dialogs to your site\r\n            for lightboxes, user notifications, or completely custom content.\r\n          </p>\r\n\r\n          {colors.map((color, index) => (\r\n            <React.Fragment key={index}>\r\n              <Button\r\n                color={color.value}\r\n                onClick={() => this.toggle(index)}\r\n                className=\"mr-1\"\r\n              >\r\n                {color.name}\r\n              </Button>\r\n              <Modal\r\n                isOpen={this.state[index]}\r\n                toggle={() => this.toggle(index)}\r\n              >\r\n                <ModalHeader toggle={() => this.toggle(index)}>\r\n                  Default modal\r\n                </ModalHeader>\r\n                <ModalBody className=\"text-center m-3\">\r\n                  <p className=\"mb-0\">\r\n                    Use Bootstrap’s JavaScript modal plugin to add dialogs to\r\n                    your site for lightboxes, user notifications, or completely\r\n                    custom content.\r\n                  </p>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                  <Button color=\"secondary\" onClick={() => this.toggle(index)}>\r\n                    Close\r\n                  </Button>{\" \"}\r\n                  <Button\r\n                    color={color.value}\r\n                    onClick={() => this.toggle(index)}\r\n                  >\r\n                    Save changes\r\n                  </Button>\r\n                </ModalFooter>\r\n              </Modal>\r\n            </React.Fragment>\r\n          ))}\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass ColoredModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  toggle = index => {\r\n    this.setState(state => ({\r\n      [index]: !state[index]\r\n    }));\r\n  };\r\n\r\n  componentWillMount() {\r\n    colors.forEach((color, index) => {\r\n      this.setState(() => ({\r\n        [index]: false\r\n      }));\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h5\">Colored modal</CardTitle>\r\n          <h6 className=\"card-subtitle text-muted\">Colored Bootstrap modal.</h6>\r\n        </CardHeader>\r\n        <CardBody className=\"text-center\">\r\n          <p>\r\n            Use Bootstrap’s JavaScript modal plugin to add dialogs to your site\r\n            for lightboxes, user notifications, or completely custom content.\r\n          </p>\r\n\r\n          {colors.map((color, index) => (\r\n            <React.Fragment key={index}>\r\n              <Button\r\n                color={color.value}\r\n                onClick={() => this.toggle(index)}\r\n                className=\"mr-1\"\r\n              >\r\n                {color.name}\r\n              </Button>\r\n              <Modal\r\n                isOpen={this.state[index]}\r\n                toggle={() => this.toggle(index)}\r\n                className={\"modal-colored modal-\" + color.value}\r\n              >\r\n                <ModalHeader toggle={() => this.toggle(index)}>\r\n                  Colored modal\r\n                </ModalHeader>\r\n                <ModalBody className=\"text-center m-3\">\r\n                  <p className=\"mb-0\">\r\n                    Use Bootstrap’s JavaScript modal plugin to add dialogs to\r\n                    your site for lightboxes, user notifications, or completely\r\n                    custom content.\r\n                  </p>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                  <Button color=\"light\" onClick={() => this.toggle(index)}>\r\n                    Close\r\n                  </Button>{\" \"}\r\n                  <Button color=\"light\" onClick={() => this.toggle(index)}>\r\n                    Save changes\r\n                  </Button>\r\n                </ModalFooter>\r\n              </Modal>\r\n            </React.Fragment>\r\n          ))}\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass CenteredModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  toggle = index => {\r\n    this.setState(state => ({\r\n      [index]: !state[index]\r\n    }));\r\n  };\r\n\r\n  componentWillMount() {\r\n    colors.forEach((color, index) => {\r\n      this.setState(() => ({\r\n        [index]: false\r\n      }));\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h5\">Centered modal</CardTitle>\r\n          <h6 className=\"card-subtitle text-muted\">\r\n            Vertically centered modal.\r\n          </h6>\r\n        </CardHeader>\r\n        <CardBody className=\"text-center\">\r\n          <p>\r\n            Use Bootstrap’s JavaScript modal plugin to add dialogs to your site\r\n            for lightboxes, user notifications, or completely custom content.\r\n          </p>\r\n\r\n          {colors.map((color, index) => (\r\n            <React.Fragment key={index}>\r\n              <Button\r\n                color={color.value}\r\n                onClick={() => this.toggle(index)}\r\n                className=\"mr-1\"\r\n              >\r\n                {color.name}\r\n              </Button>\r\n              <Modal\r\n                isOpen={this.state[index]}\r\n                toggle={() => this.toggle(index)}\r\n                centered\r\n              >\r\n                <ModalHeader toggle={() => this.toggle(index)}>\r\n                  Centered modal\r\n                </ModalHeader>\r\n                <ModalBody className=\"text-center m-3\">\r\n                  <p className=\"mb-0\">\r\n                    Use Bootstrap’s JavaScript modal plugin to add dialogs to\r\n                    your site for lightboxes, user notifications, or completely\r\n                    custom content.\r\n                  </p>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                  <Button color=\"secondary\" onClick={() => this.toggle(index)}>\r\n                    Close\r\n                  </Button>{\" \"}\r\n                  <Button\r\n                    color={color.value}\r\n                    onClick={() => this.toggle(index)}\r\n                  >\r\n                    Save changes\r\n                  </Button>\r\n                </ModalFooter>\r\n              </Modal>\r\n            </React.Fragment>\r\n          ))}\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nclass ModalSizes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  toggle = index => {\r\n    this.setState(state => ({\r\n      [index]: !state[index]\r\n    }));\r\n  };\r\n\r\n  componentWillMount() {\r\n    colors.forEach((color, index) => {\r\n      this.setState(() => ({\r\n        [index]: false\r\n      }));\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag=\"h5\">Modal sizes</CardTitle>\r\n          <h6 className=\"card-subtitle text-muted\">\r\n            These sizes kick in at certain breakpoints to avoid scrollbars on\r\n            smaller viewports.\r\n          </h6>\r\n        </CardHeader>\r\n        <CardBody className=\"text-center\">\r\n          <p>\r\n            Use Bootstrap’s JavaScript modal plugin to add dialogs to your site\r\n            for lightboxes, user notifications, or completely custom content.\r\n          </p>\r\n\r\n          {sizes.map((size, index) => (\r\n            <React.Fragment key={index}>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={() => this.toggle(index)}\r\n                className=\"mr-1\"\r\n              >\r\n                {size.name}\r\n              </Button>\r\n              <Modal\r\n                isOpen={this.state[index]}\r\n                toggle={() => this.toggle(index)}\r\n                size={size.value}\r\n              >\r\n                <ModalHeader toggle={() => this.toggle(index)}>\r\n                  {size.name} modal\r\n                </ModalHeader>\r\n                <ModalBody className=\"text-center m-3\">\r\n                  <p className=\"mb-0\">\r\n                    Use Bootstrap’s JavaScript modal plugin to add dialogs to\r\n                    your site for lightboxes, user notifications, or completely\r\n                    custom content.\r\n                  </p>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                  <Button color=\"secondary\" onClick={() => this.toggle(index)}>\r\n                    Close\r\n                  </Button>{\" \"}\r\n                  <Button color=\"primary\" onClick={() => this.toggle(index)}>\r\n                    Save changes\r\n                  </Button>\r\n                </ModalFooter>\r\n              </Modal>\r\n            </React.Fragment>\r\n          ))}\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst Modals = () => (\r\n  <Container fluid className=\"p-0\">\r\n    <h1 className=\"h3 mb-3\">Modals</h1>\r\n\r\n    <Row>\r\n      <Col lg=\"6\">\r\n        <DefaultModal />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <ColoredModal />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <CenteredModal />\r\n      </Col>\r\n      <Col lg=\"6\">\r\n        <ModalSizes />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default Modals;\r\n"]},"metadata":{},"sourceType":"module"}