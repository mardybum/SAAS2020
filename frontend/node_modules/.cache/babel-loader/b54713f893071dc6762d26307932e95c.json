{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/src/pages/tables/Bootstrap.js\";\n\nimport React from \"react\";\nimport { Card, CardBody, CardHeader, CardTitle, Container } from \"reactstrap\";\nimport axios from \"axios\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { MinusCircle, PlusCircle } from \"react-feather\";\n\nvar refreshList = function refreshList() {\n  axios.get(\"http://localhost:8000/api/todos/\").then(function (res) {\n    return _this.setState({\n      todolist: res.data\n    });\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nvar activeItem = [{\n  title: \"\",\n  description: \"\",\n  completed: false\n}];\nvar todolist = [{}];\nvar tableData = [{\n  name: \"Tiger Nixon\",\n  position: \"System Architect\",\n  office: \"Edinburgh\",\n  age: 61,\n  startDate: \"2011/04/25\",\n  salary: \"$320,800\"\n}, {\n  name: \"Garrett Winters\",\n  position: \"Accountant\",\n  office: \"Tokyo\",\n  age: 63,\n  startDate: \"2011/07/25\",\n  salary: \"$170,750\"\n}, {\n  name: \"Ashton Cox\",\n  position: \"Junior Technical Author\",\n  office: \"San Francisco\",\n  age: 66,\n  startDate: \"2009/01/12\",\n  salary: \"$86,000\"\n}];\nvar tableColumns = [{\n  dataField: \"name\",\n  text: \"Name\",\n  sort: true\n}, {\n  dataField: \"position\",\n  text: \"Position\",\n  sort: true\n}, {\n  dataField: \"office\",\n  text: \"Office\",\n  sort: true\n}, {\n  dataField: \"age\",\n  text: \"Age\",\n  sort: true\n}, {\n  dataField: \"startDate\",\n  text: \"Start Date\",\n  sort: true\n}, {\n  dataField: \"salary\",\n  text: \"Salary\",\n  sort: true\n}];\n\nvar PaginationTable = function PaginationTable() {\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    tag: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Pagination\"), React.createElement(\"h6\", {\n    className: \"card-subtitle text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Pagination by react-bootstrap-table2\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(BootstrapTable, {\n    keyField: \"name\",\n    data: tableData,\n    columns: tableColumns,\n    bootstrap4: true,\n    bordered: false,\n    pagination: paginationFactory({\n      sizePerPage: 5,\n      sizePerPageList: [5, 10, 25, 50]\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })));\n};\n\nvar RowSelectionTable = function RowSelectionTable() {\n  var selectRow = {\n    mode: \"checkbox\",\n    clickToSelect: true,\n    bgColor: \"#f8f9fa\"\n  };\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    tag: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Row Selection\"), React.createElement(\"h6\", {\n    className: \"card-subtitle text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Row selection by react-bootstrap-table2\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(BootstrapTable, {\n    bootstrap4: true,\n    bordered: false,\n    keyField: \"name\",\n    data: tableData,\n    columns: tableColumns,\n    selectRow: selectRow,\n    pagination: paginationFactory({\n      sizePerPage: 5,\n      sizePerPageList: [5, 10, 25, 50]\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })));\n};\n\nvar ExpandableRowsTable = function ExpandableRowsTable() {\n  var expandRow = {\n    renderer: function renderer(row) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"This Expand row is belong to \\\"\".concat(row.name, \"\\\"\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"You can render anything here, also you can add additional data on every row object.\"));\n    },\n    showExpandColumn: true,\n    expandHeaderColumnRenderer: function expandHeaderColumnRenderer(_ref) {\n      var isAnyExpands = _ref.isAnyExpands;\n      return isAnyExpands ? React.createElement(MinusCircle, {\n        width: 16,\n        height: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }) : React.createElement(PlusCircle, {\n        width: 16,\n        height: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      });\n    },\n    expandColumnRenderer: function expandColumnRenderer(_ref2) {\n      var expanded = _ref2.expanded;\n      return expanded ? React.createElement(MinusCircle, {\n        width: 16,\n        height: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }) : React.createElement(PlusCircle, {\n        width: 16,\n        height: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      });\n    }\n  };\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    tag: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Expandable Rows\"), React.createElement(\"h6\", {\n    className: \"card-subtitle text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Expandable rows by react-bootstrap-table2\")), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(BootstrapTable, {\n    bootstrap4: true,\n    bordered: false,\n    keyField: \"name\",\n    data: tableData,\n    columns: tableColumns,\n    expandRow: expandRow,\n    pagination: paginationFactory({\n      sizePerPage: 5,\n      sizePerPageList: [5, 10, 25, 50]\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  })));\n};\n\nvar ExportCSVTable = function ExportCSVTable() {\n  var MyExportCSV = function MyExportCSV(props) {\n    var handleClick = function handleClick() {\n      props.onExport();\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-secondary mt-2\",\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Export\"));\n  };\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(ToolkitProvider, {\n    keyField: \"name\",\n    data: tableData,\n    columns: tableColumns,\n    exportCSV: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, function (props) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-right pull-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(MyExportCSV, Object.assign({}, props.csvProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }))), React.createElement(CardTitle, {\n      tag: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Export CSV\"), React.createElement(\"h6\", {\n      className: \"card-subtitle text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Exportable CSV by react-bootstrap-table2\")), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n      bootstrap4: true,\n      bordered: false,\n      pagination: paginationFactory({\n        sizePerPage: 5,\n        sizePerPageList: [5, 10, 25, 50]\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }))));\n  }));\n};\n\nvar Tables = function Tables() {\n  return React.createElement(Container, {\n    fluid: true,\n    className: \"p-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"h3 mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"Advanced Tables\"), React.createElement(PaginationTable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }), React.createElement(RowSelectionTable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }), React.createElement(ExpandableRowsTable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }), React.createElement(ExportCSVTable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }));\n};\n\nexport default Tables;","map":{"version":3,"sources":["/Users/yanrudall/Development/100_Projects/Django/todo/frontend/src/pages/tables/Bootstrap.js"],"names":["React","Card","CardBody","CardHeader","CardTitle","Container","axios","BootstrapTable","ToolkitProvider","paginationFactory","MinusCircle","PlusCircle","refreshList","get","then","res","setState","todolist","data","catch","err","console","log","activeItem","title","description","completed","tableData","name","position","office","age","startDate","salary","tableColumns","dataField","text","sort","PaginationTable","sizePerPage","sizePerPageList","RowSelectionTable","selectRow","mode","clickToSelect","bgColor","ExpandableRowsTable","expandRow","renderer","row","showExpandColumn","expandHeaderColumnRenderer","isAnyExpands","expandColumnRenderer","expanded","ExportCSVTable","MyExportCSV","props","handleClick","onExport","csvProps","baseProps","Tables"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, CardHeader, CardTitle, Container } from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nimport { MinusCircle, PlusCircle } from \"react-feather\";\r\n\r\nconst refreshList = () => {\r\n    axios\r\n        .get(\"http://localhost:8000/api/todos/\")\r\n        .then(res => this.setState({ todolist: res.data }))\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\nconst activeItem = [\r\n            {\r\n                title: \"\",\r\n                description: \"\",\r\n                completed: false\r\n            }\r\n          ];\r\n\r\nconst todolist = [{}];\r\n\r\nconst tableData = [\r\n  {\r\n    name: \"Tiger Nixon\",\r\n    position: \"System Architect\",\r\n    office: \"Edinburgh\",\r\n    age: 61,\r\n    startDate: \"2011/04/25\",\r\n    salary: \"$320,800\"\r\n  },\r\n  {\r\n    name: \"Garrett Winters\",\r\n    position: \"Accountant\",\r\n    office: \"Tokyo\",\r\n    age: 63,\r\n    startDate: \"2011/07/25\",\r\n    salary: \"$170,750\"\r\n  },\r\n  {\r\n    name: \"Ashton Cox\",\r\n    position: \"Junior Technical Author\",\r\n    office: \"San Francisco\",\r\n    age: 66,\r\n    startDate: \"2009/01/12\",\r\n    salary: \"$86,000\"\r\n  }\r\n];\r\n\r\nconst tableColumns = [\r\n  {\r\n    dataField: \"name\",\r\n    text: \"Name\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"position\",\r\n    text: \"Position\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"office\",\r\n    text: \"Office\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"age\",\r\n    text: \"Age\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"startDate\",\r\n    text: \"Start Date\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"salary\",\r\n    text: \"Salary\",\r\n    sort: true\r\n  }\r\n];\r\n\r\nconst PaginationTable = () => {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Pagination</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Pagination by react-bootstrap-table2\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <BootstrapTable\r\n          keyField=\"name\"\r\n          data={tableData}\r\n          columns={tableColumns}\r\n          bootstrap4\r\n          bordered={false}\r\n          pagination={paginationFactory({\r\n            sizePerPage: 5,\r\n            sizePerPageList: [5, 10, 25, 50]\r\n          })}\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst RowSelectionTable = () => {\r\n  const selectRow = {\r\n    mode: \"checkbox\",\r\n    clickToSelect: true,\r\n    bgColor: \"#f8f9fa\"\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Row Selection</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Row selection by react-bootstrap-table2\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <BootstrapTable\r\n          bootstrap4\r\n          bordered={false}\r\n          keyField=\"name\"\r\n          data={tableData}\r\n          columns={tableColumns}\r\n          selectRow={selectRow}\r\n          pagination={paginationFactory({\r\n            sizePerPage: 5,\r\n            sizePerPageList: [5, 10, 25, 50]\r\n          })}\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst ExpandableRowsTable = () => {\r\n  const expandRow = {\r\n    renderer: row => (\r\n      <div>\r\n        <p>{`This Expand row is belong to \"${row.name}\"`}</p>\r\n        <p>\r\n          You can render anything here, also you can add additional data on every row object.\r\n        </p>\r\n      </div>\r\n    ),\r\n    showExpandColumn: true,\r\n    expandHeaderColumnRenderer: ({ isAnyExpands }) =>\r\n      isAnyExpands ? (\r\n        <MinusCircle width={16} height={16} />\r\n      ) : (\r\n        <PlusCircle width={16} height={16} />\r\n      ),\r\n    expandColumnRenderer: ({ expanded }) =>\r\n      expanded ? (\r\n        <MinusCircle width={16} height={16} />\r\n      ) : (\r\n        <PlusCircle width={16} height={16} />\r\n      )\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h5\">Expandable Rows</CardTitle>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Expandable rows by react-bootstrap-table2\r\n        </h6>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <BootstrapTable\r\n          bootstrap4\r\n          bordered={false}\r\n          keyField=\"name\"\r\n          data={tableData}\r\n          columns={tableColumns}\r\n          expandRow={expandRow}\r\n          pagination={paginationFactory({\r\n            sizePerPage: 5,\r\n            sizePerPageList: [5, 10, 25, 50]\r\n          })}\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst ExportCSVTable = () => {\r\n  const MyExportCSV = props => {\r\n    const handleClick = () => {\r\n      props.onExport();\r\n    };\r\n    return (\r\n      <div>\r\n        <button className=\"btn btn-secondary mt-2\" onClick={handleClick}>\r\n          Export\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <ToolkitProvider\r\n        keyField=\"name\"\r\n        data={tableData}\r\n        columns={tableColumns}\r\n        exportCSV\r\n      >\r\n        {props => (\r\n          <div>\r\n            <CardHeader>\r\n              <div className=\"float-right pull-right\">\r\n                <MyExportCSV {...props.csvProps} />\r\n              </div>\r\n              <CardTitle tag=\"h5\">Export CSV</CardTitle>\r\n              <h6 className=\"card-subtitle text-muted\">\r\n                Exportable CSV by react-bootstrap-table2\r\n              </h6>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <BootstrapTable\r\n                {...props.baseProps}\r\n                bootstrap4\r\n                bordered={false}\r\n                pagination={paginationFactory({\r\n                  sizePerPage: 5,\r\n                  sizePerPageList: [5, 10, 25, 50]\r\n                })}\r\n              />\r\n            </CardBody>\r\n          </div>\r\n        )}\r\n      </ToolkitProvider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Tables = () => (\r\n  <Container fluid className=\"p-0\">\r\n    <h1 className=\"h3 mb-3\">Advanced Tables</h1>\r\n\r\n    <PaginationTable />\r\n    <RowSelectionTable />\r\n    <ExpandableRowsTable />\r\n    <ExportCSVTable />\r\n  </Container>\r\n);\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}