{"ast":null,"code":"import _defineProperty from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/src/pages/saas/main.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TableHeaderColumn from \"react-bootstrap-table-next\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\nimport zone from './zone';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Container, CustomInput, Form, FormGroup, FormText, Input, InputGroup, InputGroupAddon, Label, Modal, ModalBody, ModalFooter, ModalHeader, Row, Table } from \"reactstrap\";\nimport { Edit2, Trash, MinusCircle, PlusCircle } from \"react-feather\";\nimport avatar1 from \"../../assets/img/avatars/avatar.jpg\";\nimport avatar2 from \"../../assets/img/avatars/avatar-2.jpg\";\nimport avatar3 from \"../../assets/img/avatars/avatar-3.jpg\";\nimport avatar4 from \"../../assets/img/avatars/avatar-4.jpg\";\nvar colors = [{\n  name: \"Add Zone\",\n  value: \"success\"\n}];\n\nvar ZoneList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ZoneList, _React$Component);\n\n  function ZoneList(props) {\n    var _this;\n\n    _classCallCheck(this, ZoneList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ZoneList).call(this, props));\n\n    _this.refreshList = function () {\n      axios.get(\"http://localhost:8000/api/zone/\").then(function (res) {\n        return _this.setState({\n          zones: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      //stop refreshing the site\n      e.preventDefault();\n      var itemToBeSubmitted = {\n        name: _this.state.activeItem.name,\n        description: _this.state.activeItem.description,\n        SLT: _this.state.activeItem.completed,\n        threats: _this.state.activeItem.threats\n      };\n\n      if (itemToBeSubmitted.id) {\n        axios.put(\"http://localhost:8000/api/zone/\".concat(itemToBeSubmitted.id, \"/\"), itemToBeSubmitted).then(function (res) {\n          return _this.refreshList();\n        });\n        return;\n      }\n\n      axios.post(\"http://localhost:8000/api/zone/\", itemToBeSubmitted).then(function (res) {\n        return _this.refreshList();\n      });\n    };\n\n    _this.handleSubmitModal = function (item) {\n      console.log(item);\n\n      if (item.id) {\n        axios.put(\"http://localhost:8000/api/zone/\".concat(item.id, \"/\"), item).then(function (res) {\n          return _this.refreshList();\n        });\n        return;\n      }\n\n      axios.post(\"http://localhost:8000/api/zone/\", item).then(function (res) {\n        return _this.refreshList();\n      });\n    };\n\n    _this.handleChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      if (e.target.type === \"checkbox\") {\n        value = e.target.checked;\n      }\n\n      var activeItem = _objectSpread({}, _this.state.activeItem, _defineProperty({}, name, value));\n\n      _this.setState({\n        activeItem: activeItem\n      });\n    };\n\n    _this.handleDelete = function (item) {\n      axios.delete(\"http://localhost:8000/api/zone/\".concat(item)).then(function (res) {\n        return _this.refreshList();\n      });\n    };\n\n    _this.getItem = function () {\n      return _this.state.activeItem;\n    };\n\n    _this.toggle = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.openZone = function (item) {\n      console.log(_this.state.zones.find(function (element) {\n        return element.id === item.id;\n      }));\n      return React.createElement(\"zone\", {\n        activeItem: _this.state.activeItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }); //console.log('openZone')\n      // console.log(this.state.zones.find(element => element.id === item.id));\n    };\n\n    _this.editItem = function (item) {\n      //Check if the user operates on the last row; This is in order to add requirements directly in the last row\n      //of the table\n      if (_this.state.zones[_this.state.zones.length - 1].id === item.id) {\n        console.log(item);\n        console.log(_this.state.zones[_this.state.zones.length - 1].id);\n        axios.put(\"http://localhost:8000/api/zone/\".concat(item.id, \"/\"), item).then(function (res) {\n          return _this.refreshList();\n        });\n        var itemToBeSubmitted = {\n          title: \" \",\n          description: \" \",\n          completed: false\n        };\n        axios.post(\"http://localhost:8000/api/zone/\", itemToBeSubmitted).then(function (res) {\n          return _this.refreshList();\n        });\n      }\n    };\n\n    _this.expandRow = {\n      renderer: function renderer(row) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"\".concat(row.description)));\n      },\n      showExpandColumn: true,\n      expandHeaderColumnRenderer: function expandHeaderColumnRenderer(_ref) {\n        var isAnyExpands = _ref.isAnyExpands;\n        return isAnyExpands ? React.createElement(MinusCircle, {\n          width: 16,\n          height: 16,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }) : React.createElement(PlusCircle, {\n          width: 16,\n          height: 16,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        });\n      },\n      expandColumnRenderer: function expandColumnRenderer(_ref2) {\n        var expanded = _ref2.expanded;\n        return expanded ? React.createElement(MinusCircle, {\n          width: 16,\n          height: 16,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }) : React.createElement(PlusCircle, {\n          width: 16,\n          height: 16,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        });\n      }\n    };\n    _this.tableColumns = [{\n      dataField: \"zoneId\",\n      text: \"Zone ID\",\n      headerStyle: function headerStyle(colum, colIndex) {\n        return {\n          width: '120px'\n        };\n      },\n      sort: true\n    }, {\n      dataField: \"name\",\n      text: \"Zone Name\",\n      type: 'textarea',\n      headerStyle: function headerStyle(colum, colIndex) {\n        return {\n          width: '550px'\n        };\n      },\n      sort: false\n    }, {\n      dataField: \"SLT\",\n      text: \"SL-T\",\n      type: 'textarea',\n      sort: false\n    }, {\n      dataField: \"threats\",\n      text: \"Threats\",\n      type: 'textarea',\n      sort: false\n    }, {\n      dataField: 'details',\n      isDummyField: true,\n      text: 'Details',\n      editable: false,\n      formatter: function formatter(cellContent, row) {\n        return React.createElement(Link, {\n          to: {\n            pathname: '/saas/zone',\n            state: {\n              foo: row.id\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"outline-dark\",\n          onClick: function onClick() {\n            return _this.openZone(row);\n          },\n          className: \"mr-1 mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, \"Details\"));\n      }\n    }];\n    _this.cellEdit = cellEditFactory({\n      mode: 'click',\n      blurToSave: true,\n      afterSaveCell: function afterSaveCell(oldValue, newValue, row, column) {\n        _this.editItem(row);\n      }\n    });\n\n    _this.PaginationTable = function () {\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(CenteredModal, {\n        activeItem: _this.state.activeItem,\n        toggle: _this.toggle,\n        onSave: _this.handleSubmitModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        keyField: \"id\",\n        data: _this.state.zones,\n        columns: _this.tableColumns,\n        bootstrap4: true,\n        bordered: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      })));\n    };\n\n    _this.Renderer = function () {\n      return React.createElement(Container, {\n        fluid: true,\n        className: \"p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, _this.PaginationTable());\n    };\n\n    _this.state = {\n      activeItem: {\n        id: \"\",\n        zone_id: \"\",\n        name: \"\",\n        SLT: \"\",\n        description: \"\",\n        threats: \"\"\n      },\n      zones: []\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ZoneList, [{\n    key: \"componentDidMount\",\n    //Allways called when component initializes\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8000/api/zone/\").then(function (res) {\n        var zones = res.data;\n        console.log(zones);\n\n        _this2.setState({\n          zones: zones\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, this.Renderer());\n    }\n  }]);\n\n  return ZoneList;\n}(React.Component);\n\nvar CenteredModal =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(CenteredModal, _React$Component2);\n\n  function CenteredModal(props) {\n    var _this3;\n\n    _classCallCheck(this, CenteredModal);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(CenteredModal).call(this, props));\n\n    _this3.toggle = function (index) {\n      _this3.setState(function (state) {\n        return _defineProperty({}, index, !state[index]);\n      });\n    };\n\n    _this3.handleChange = function (e) {\n      var _e$target2 = e.target,\n          name = _e$target2.name,\n          value = _e$target2.value;\n\n      if (e.target.type === \"checkbox\") {\n        value = e.target.checked;\n      }\n\n      var activeItem = _objectSpread({}, _this3.state.activeItem, _defineProperty({}, name, value));\n\n      _this3.setState({\n        activeItem: activeItem\n      });\n    };\n\n    _this3.state = {\n      activeItem: _this3.props.activeItem\n    };\n    return _this3;\n  }\n\n  _createClass(CenteredModal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this4 = this;\n\n      colors.forEach(function (color, index) {\n        _this4.setState(function () {\n          return _defineProperty({}, index, false);\n        });\n      });\n    }\n  }, {\n    key: \"resetValues\",\n    value: function resetValues() {\n      this.state.activeItem = {\n        id: \"\",\n        zone_id: \"\",\n        name: \"\",\n        SLT: \"\",\n        description: \"\",\n        threats: \"\"\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$props = this.props,\n          toggle = _this$props.toggle,\n          onSave = _this$props.onSave;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, colors.map(function (color, index) {\n        return React.createElement(React.Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: color.value,\n          onClick: function onClick() {\n            return _this5.toggle(index);\n          },\n          className: \"mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391\n          },\n          __self: this\n        }, color.name), React.createElement(Modal, {\n          isOpen: _this5.state[index],\n          toggle: function toggle() {\n            return _this5.toggle(index);\n          },\n          centered: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398\n          },\n          __self: this\n        }, React.createElement(ModalHeader, {\n          toggle: function toggle() {\n            return _this5.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403\n          },\n          __self: this\n        }, \"Zone Creation\"), React.createElement(ModalBody, {\n          className: \"text-center m-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406\n          },\n          __self: this\n        }, React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          row: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409\n          },\n          __self: this\n        }, React.createElement(Label, {\n          sm: 2,\n          className: \"text-sm-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410\n          },\n          __self: this\n        }, \"Zone Title\"), React.createElement(Col, {\n          sm: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"email\",\n          name: \"name\",\n          value: _this5.state.activeItem.name,\n          onChange: _this5.handleChange,\n          placeholder: \"Zone Title..\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414\n          },\n          __self: this\n        }))), React.createElement(FormGroup, {\n          row: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420\n          },\n          __self: this\n        }, React.createElement(Label, {\n          sm: 2,\n          className: \"text-sm-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421\n          },\n          __self: this\n        }, \"Description\"), React.createElement(Col, {\n          sm: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"textarea\",\n          name: \"description\",\n          value: _this5.state.activeItem.description,\n          onChange: _this5.handleChange,\n          placeholder: \"Zone Description..\",\n          rows: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425\n          },\n          __self: this\n        }))))), React.createElement(ModalFooter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"outline-dark\",\n          onClick: function onClick() {\n            return _this5.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440\n          },\n          __self: this\n        }, \"Close\"), \" \", React.createElement(Button, {\n          color: color.value,\n          onClick: function onClick(event) {\n            onSave(_this5.state.activeItem);\n\n            _this5.toggle(index);\n\n            _this5.resetValues();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443\n          },\n          __self: this\n        }, \"Save changes\"))));\n      }));\n    }\n  }]);\n\n  return CenteredModal;\n}(React.Component);\n\nexport default ZoneList;","map":{"version":3,"sources":["/Users/yanrudall/Development/100_Projects/Django/todo/frontend/src/pages/saas/main.js"],"names":["React","axios","BootstrapTable","TableHeaderColumn","ToolkitProvider","paginationFactory","cellEditFactory","zone","Switch","Route","Link","Button","Card","CardBody","CardHeader","CardTitle","Col","Container","CustomInput","Form","FormGroup","FormText","Input","InputGroup","InputGroupAddon","Label","Modal","ModalBody","ModalFooter","ModalHeader","Row","Table","Edit2","Trash","MinusCircle","PlusCircle","avatar1","avatar2","avatar3","avatar4","colors","name","value","ZoneList","props","refreshList","get","then","res","setState","zones","data","catch","err","console","log","handleSubmit","e","preventDefault","itemToBeSubmitted","state","activeItem","description","SLT","completed","threats","id","put","post","handleSubmitModal","item","handleChange","target","type","checked","handleDelete","delete","getItem","toggle","modal","openZone","find","element","editItem","length","title","expandRow","renderer","row","showExpandColumn","expandHeaderColumnRenderer","isAnyExpands","expandColumnRenderer","expanded","tableColumns","dataField","text","headerStyle","colum","colIndex","width","sort","isDummyField","editable","formatter","cellContent","pathname","foo","cellEdit","mode","blurToSave","afterSaveCell","oldValue","newValue","column","PaginationTable","Renderer","zone_id","bind","Component","CenteredModal","index","forEach","color","onSave","map","event","resetValues"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TableHeaderColumn from \"react-bootstrap-table-next\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\nimport zone from './zone'\nimport { Switch, Route, Link } from 'react-router-dom'\n\n\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Col,\n  Container,\n  CustomInput,\n  Form,\n  FormGroup,\n  FormText,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Row,\n  Table\n} from \"reactstrap\";\n\nimport { Edit2, Trash, MinusCircle, PlusCircle  } from \"react-feather\";\n\n\nimport avatar1 from \"../../assets/img/avatars/avatar.jpg\";\nimport avatar2 from \"../../assets/img/avatars/avatar-2.jpg\";\nimport avatar3 from \"../../assets/img/avatars/avatar-3.jpg\";\nimport avatar4 from \"../../assets/img/avatars/avatar-4.jpg\";\n\nconst colors = [\n\n  {\n    name: \"Add Zone\",\n    value: \"success\"\n  }\n];\n\n\nclass ZoneList extends React.Component {\n  constructor(props) {\n        super(props);\n\n        this.state = {\n            activeItem: {\n                id: \"\",\n                zone_id: \"\",\n                name: \"\",\n                SLT: \"\",\n                description: \"\",\n                threats: \"\"\n            },\n\n            zones: []\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    refreshList = () => {\n        axios\n          .get(\"http://localhost:8000/api/zone/\")\n          .then(res => this.setState({ zones: res.data }))\n          .catch(err => console.log(err));\n\n\n    };\n\n\n    //Allways called when component initializes\n    componentDidMount() {\n        axios.get(\"http://localhost:8000/api/zone/\")\n          .then(res => {\n            const zones = res.data;\n            console.log(zones);\n            this.setState({ zones });\n          })\n\n\n    }\n\n\n    handleSubmit = e => {\n\n\n        //stop refreshing the site\n        e.preventDefault();\n\n        const itemToBeSubmitted = {\n            name: this.state.activeItem.name,\n            description: this.state.activeItem.description,\n            SLT: this.state.activeItem.completed,\n            threats: this.state.activeItem.threats\n        };\n\n        if (itemToBeSubmitted.id) {\n          axios\n            .put(`http://localhost:8000/api/zone/${itemToBeSubmitted.id}/`, itemToBeSubmitted)\n            .then(res => this.refreshList());\n          return;\n        }\n\n        axios\n          .post(\"http://localhost:8000/api/zone/\", itemToBeSubmitted)\n          .then(res => this.refreshList());\n    };\n\n\n    handleSubmitModal = item => {\n\n        console.log(item)\n\n\n        if (item.id) {\n          axios\n            .put(`http://localhost:8000/api/zone/${item.id}/`, item)\n            .then(res => this.refreshList());\n          return;\n        }\n        axios\n          .post(\"http://localhost:8000/api/zone/\", item)\n          .then(res => this.refreshList());\n    };\n\n    //used to update the form\n    handleChange = e => {\n        let { name, value } = e.target;\n\n        if (e.target.type === \"checkbox\") {\n            value = e.target.checked;\n        }\n\n        const activeItem = { ...this.state.activeItem, [name]: value };\n\n        this.setState({activeItem });\n    };\n\n    handleDelete = item => {\n        axios\n          .delete(`http://localhost:8000/api/zone/${item}`)\n          .then(res => this.refreshList());\n    };\n\n    getItem = () => {\n\n\n        return this.state.activeItem;\n    };\n\n\n    toggle = () => {\n        this.setState({ modal: !this.state.modal });\n    };\n\n    openZone = item => {\n\n        console.log(this.state.zones.find(element => element.id === item.id));\n\n        return <zone\n                 activeItem = {this.state.activeItem}\n                />\n\n        //console.log('openZone')\n       // console.log(this.state.zones.find(element => element.id === item.id));\n    };\n\n    editItem = item => {\n\n        //Check if the user operates on the last row; This is in order to add requirements directly in the last row\n        //of the table\n        if(this.state.zones[this.state.zones.length - 1].id === item.id)\n        {\n\n            console.log(item)\n            console.log(this.state.zones[this.state.zones.length - 1].id)\n\n            axios\n                .put(`http://localhost:8000/api/zone/${item.id}/`, item)\n                .then(res => this.refreshList());\n\n\n            const itemToBeSubmitted = {\n                    title: \" \",\n                    description: \" \",\n                    completed: false\n             };\n\n            axios\n              .post(\"http://localhost:8000/api/zone/\", itemToBeSubmitted)\n              .then(res => this.refreshList());\n        }\n    };\n\n    expandRow = {\n\n        renderer: row => (\n           <div>\n             <p>{`${row.description}`}</p>\n            </div>\n        ),\n        showExpandColumn: true,\n        expandHeaderColumnRenderer: ({ isAnyExpands }) =>\n          isAnyExpands ? (\n            <MinusCircle width={16} height={16} />\n          ) : (\n            <PlusCircle width={16} height={16} />\n          ),\n        expandColumnRenderer: ({ expanded }) =>\n          expanded ? (\n            <MinusCircle width={16} height={16} />\n          ) : (\n            <PlusCircle width={16} height={16} />\n          )\n    };\n\n    tableColumns = [\n      {\n        dataField: \"zoneId\",\n        text: \"Zone ID\",\n        headerStyle: (colum, colIndex) => {\n          return { width: '120px'};\n        },\n        sort: true,\n      },\n      {\n        dataField: \"name\",\n        text: \"Zone Name\",\n        type: 'textarea' ,\n        headerStyle: (colum, colIndex) => {\n          return { width: '550px'};\n        },\n        sort: false,\n      },\n      {\n        dataField: \"SLT\",\n        text: \"SL-T\",\n        type: 'textarea' ,\n        sort: false,\n      },\n      {\n        dataField: \"threats\",\n        text: \"Threats\",\n        type: 'textarea' ,\n        sort: false,\n      },\n      {\n        dataField: 'details',\n        isDummyField: true,\n        text: 'Details',\n        editable: false,\n        formatter: (cellContent, row) => {\n\n          return (\n\n\n            <Link to={{ pathname: '/saas/zone', state: { foo: row.id} }}>\n                <Button color=\"outline-dark\" onClick={() => this.openZone(row)} className=\"mr-1 mb-1\" >\n                    {\"Details\"}\n                </Button>\n            </Link>\n\n          );\n        }\n      }\n    ];\n\n\n\n    cellEdit = cellEditFactory({\n\n        mode: 'click',\n        blurToSave: true,\n        afterSaveCell: (oldValue, newValue, row, column) => {\n            this.editItem(row)\n        }\n    });\n\n    PaginationTable = () => (\n\n        <Card>\n          <CardHeader>\n            <h6 className=\"card-subtitle text-muted\">\n              <CenteredModal\n                activeItem={this.state.activeItem}\n                toggle={this.toggle}\n                onSave={this.handleSubmitModal}\n                />\n            </h6>\n          </CardHeader>\n          <CardBody>\n            <BootstrapTable\n              keyField=\"id\"\n              data={this.state.zones}\n              columns={this.tableColumns}\n              bootstrap4\n              bordered={false}>\n            </BootstrapTable>\n\n          </CardBody>\n        </Card>\n    );\n\n\n    Renderer = () => (\n\n        <Container fluid className=\"p-0\">\n\n            {this.PaginationTable()}\n        </Container>\n\n    );\n\n    render() {\n        return (\n            <div>\n                {this.Renderer()}\n            </div>\n        )\n      }\n}\n\nclass CenteredModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        activeItem: this.props.activeItem\n    };\n\n  }\n\n  toggle = index => {\n    this.setState(state => ({\n      [index]: !state[index]\n    }));\n  };\n\n  componentWillMount() {\n    colors.forEach((color, index) => {\n      this.setState(() => ({\n        [index]: false\n      }));\n    });\n  }\n\n  resetValues () {\n\n    this.state.activeItem = {\n                id: \"\",\n                zone_id: \"\",\n                name: \"\",\n                SLT: \"\",\n                description: \"\",\n                threats: \"\"\n            }\n  };\n\n  handleChange = e => {\n        let { name, value } = e.target;\n\n        if (e.target.type === \"checkbox\") {\n            value = e.target.checked;\n        }\n\n        const activeItem = { ...this.state.activeItem, [name]: value };\n\n        this.setState({activeItem });\n    };\n\n  render() {\n    const { toggle, onSave } = this.props;\n    return (\n      <div>\n\n          {colors.map((color, index) => (\n            <React.Fragment key={index}>\n              <Button\n                color={color.value}\n                onClick={() => this.toggle(index)}\n                className=\"mr-1\"\n              >\n                {color.name}\n              </Button>\n              <Modal\n                isOpen={this.state[index]}\n                toggle={() => this.toggle(index)}\n                centered\n              >\n                <ModalHeader toggle={() => this.toggle(index)}>\n                  Zone Creation\n                </ModalHeader>\n                <ModalBody className=\"text-center m-3\">\n\n                  <Form>\n                        <FormGroup row>\n                          <Label sm={2} className=\"text-sm-right\">\n                            Zone Title\n                          </Label>\n                          <Col sm={10}>\n                            <Input type=\"email\" name=\"name\" value={this.state.activeItem.name}\n                            onChange={this.handleChange}\n                            placeholder=\"Zone Title..\" />\n                          </Col>\n                        </FormGroup>\n\n                        <FormGroup row>\n                          <Label sm={2} className=\"text-sm-right\">\n                            Description\n                          </Label>\n                          <Col sm={10}>\n                            <Input\n                              type=\"textarea\"\n                              name=\"description\"\n                              value={this.state.activeItem.description}\n                              onChange={this.handleChange}\n                              placeholder=\"Zone Description..\"\n                              rows=\"3\"\n                            />\n                          </Col>\n                        </FormGroup>\n                  </Form>\n\n\n                </ModalBody>\n                <ModalFooter>\n                  <Button color=\"outline-dark\" onClick={() => this.toggle(index)}>\n                    Close\n                  </Button>{\" \"}\n                  <Button\n                    color={color.value}\n                    onClick={(event) => { onSave(this.state.activeItem); this.toggle(index); this.resetValues()}}\n\n                  >\n                    Save changes\n                  </Button>\n                </ModalFooter>\n              </Modal>\n            </React.Fragment>\n          ))}\n        </div>\n    );\n  }\n}\n\nexport default ZoneList;"]},"metadata":{},"sourceType":"module"}