{"ast":null,"code":"import _objectSpread from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/src/pages/saas/zone.js\";\nimport ZoneList from './main';\nimport React from \"react\";\nimport axios from \"axios\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TableHeaderColumn from \"react-bootstrap-table-next\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\nimport './style.css';\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Container, CustomInput, Form, FormGroup, FormText, Input, InputGroup, InputGroupAddon, Label, Modal, ModalBody, ModalFooter, ModalHeader, Row, Table } from \"reactstrap\";\nimport { Edit2, Trash, MinusCircle, PlusCircle } from \"react-feather\";\nvar colors = [{\n  name: \"Add Zone\",\n  value: \"success\"\n}];\n\nvar Zone =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Zone, _React$Component);\n\n  function Zone(props) {\n    var _this;\n\n    _classCallCheck(this, Zone);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Zone).call(this, props));\n\n    _this.refreshList = function () {\n      axios.get(\"http://localhost:8000/api/zone/\").then(function (res) {\n        return _this.setState({\n          zones: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      axios.get(\"http://localhost:8000/api/component/\").then(function (res) {\n        return _this.setState({\n          components: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleDelete = function (item) {\n      axios.delete(\"http://localhost:8000/api/component/\".concat(item)).then(function (res) {\n        return _this.refreshList();\n      }); //console.log(this.state.components.filter(compElement => compElement.zone === this.props.location.state.id))\n    };\n\n    _this.editItem = function (item) {\n      axios.put(\"http://localhost:8000/api/component/\".concat(item.id, \"/\"), item); //Check if the user operates on the last row; This is in order to add requirements directly in the last row\n      //of the table\n\n      if (_this.state.zones[_this.state.zones.length - 1].id === item.id) {\n        console.log(item);\n        console.log(_this.state.zones[_this.state.zones.length - 1].id);\n        axios.put(\"http://localhost:8000/api/component/\".concat(item.id, \"/\"), item).then(function (res) {\n          return _this.refreshList();\n        });\n        var itemToBeSubmitted = {\n          title: \" \",\n          description: \" \",\n          completed: false\n        };\n        axios.post(\"http://localhost:8000/api/component/\", itemToBeSubmitted).then(function (res) {\n          return _this.refreshList();\n        });\n      }\n    };\n\n    _this.toggle = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.handleSubmitModal = function (item) {\n      if (item.id) {\n        axios.put(\"http://localhost:8000/api/component/\".concat(item.id, \"/\"), item).then(function (res) {\n          return _this.refreshList();\n        });\n        return;\n      }\n\n      axios.post(\"http://localhost:8000/api/component/\", item).then(function (res) {\n        return _this.refreshList();\n      });\n    };\n\n    _this.cellEdit = cellEditFactory({\n      mode: 'click',\n      blurToSave: true,\n      afterSaveCell: function afterSaveCell(oldValue, newValue, row, column) {\n        _this.editItem(row);\n      }\n    });\n    _this.componentTableColumns = [{\n      dataField: \"id\",\n      text: \"ID\",\n      editable: false,\n      headerStyle: function headerStyle(colum, colIndex) {\n        return {\n          width: '120px'\n        };\n      },\n      sort: true\n    }, {\n      dataField: \"componentName\",\n      text: \"Component\",\n      type: 'textarea',\n      headerStyle: function headerStyle(colum, colIndex) {\n        return {\n          width: '350px'\n        };\n      },\n      sort: false\n    }, {\n      dataField: \"componentDescription\",\n      text: \"Component\",\n      type: 'textarea',\n      headerStyle: function headerStyle(colum, colIndex) {\n        return {\n          width: '450px'\n        };\n      },\n      sort: false\n    }, {\n      dataField: 'df1',\n      isDummyField: true,\n      text: 'Action',\n      editable: false,\n      formatter: function formatter(cellContent, row) {\n        return React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(Trash, {\n          className: \"align-middle\",\n          type: \"submit\",\n          onClick: function onClick() {\n            return _this.handleDelete(row.id);\n          },\n          size: 18,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }));\n      }\n    }];\n\n    _this.componentTable = function () {\n      return (//Find the foreign key in the list of the components; The foreign key is passed from the main.js\n        //The foreign key is searched in the \"zone\" element of the components and the foreign key comes from\n        //selected zone\n        React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          tag: \"h5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, \"Components\"), React.createElement(\"h6\", {\n          className: \"card-subtitle text-muted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"createcomponentmodal\", {\n          activeItem: _this.state.activeItem,\n          toggle: _this.toggle,\n          onSave: _this.handleSubmitModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }))), React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, React.createElement(BootstrapTable, {\n          keyField: \"id\",\n          data: _this.state.components.filter(function (compElement) {\n            return compElement.zone === _this.props.location.state.id;\n          }),\n          columns: _this.componentTableColumns,\n          deleteRow: true,\n          bootstrap4: true //striped\n          ,\n          hover: true,\n          maxHeight: 5,\n          cellEdit: _this.cellEdit,\n          bordered: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        })))\n      );\n    };\n\n    _this.Tables = function () {\n      return React.createElement(Container, {\n        fluid: true,\n        className: \"p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, _this.componentTable());\n    };\n\n    _this.state = {\n      activeItem: \"\",\n      zones: [],\n      components: [],\n      activeComponent: []\n    };\n    return _this;\n  }\n\n  _createClass(Zone, [{\n    key: \"componentDidMount\",\n    //Allways called when component initializes\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8000/api/zone/\").then(function (res) {\n        var zones = res.data;\n\n        _this2.setState({\n          zones: zones\n        }); //Find the passed property in the zone array and set it to the active item\n\n\n        _this2.state.activeItem = _this2.state.zones.find(function (element) {\n          return element.id === _this2.props.location.state.id;\n        });\n      });\n      axios.get(\"http://localhost:8000/api/component/\").then(function (res) {\n        var component = res.data;\n\n        _this2.setState({\n          components: component\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, this.Tables());\n    }\n  }]);\n\n  return Zone;\n}(React.Component);\n\nvar createcomponentmodal =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(createcomponentmodal, _React$Component2);\n\n  function createcomponentmodal(props) {\n    var _this3;\n\n    _classCallCheck(this, createcomponentmodal);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(createcomponentmodal).call(this, props));\n\n    _this3.toggle = function (index) {\n      _this3.setState(function (state) {\n        return _defineProperty({}, index, !state[index]);\n      });\n    };\n\n    _this3.handleChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      if (e.target.type === \"checkbox\") {\n        value = e.target.checked;\n      }\n\n      var activeItem = _objectSpread({}, _this3.state.activeItem, _defineProperty({}, name, value));\n\n      _this3.setState({\n        activeItem: activeItem\n      });\n    };\n\n    _this3.state = {\n      activeItem: _this3.props.activeItem\n    };\n    return _this3;\n  }\n\n  _createClass(createcomponentmodal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this4 = this;\n\n      colors.forEach(function (color, index) {\n        _this4.setState(function () {\n          return _defineProperty({}, index, false);\n        });\n      });\n    }\n  }, {\n    key: \"resetValues\",\n    value: function resetValues() {\n      this.state.activeItem = \"\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$props = this.props,\n          toggle = _this$props.toggle,\n          onSave = _this$props.onSave;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, colors.map(function (color, index) {\n        return React.createElement(React.Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: color.value,\n          onClick: function onClick() {\n            return _this5.toggle(index);\n          },\n          className: \"mr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, color.name), React.createElement(Modal, {\n          isOpen: _this5.state[index],\n          toggle: function toggle() {\n            return _this5.toggle(index);\n          },\n          centered: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, React.createElement(ModalHeader, {\n          toggle: function toggle() {\n            return _this5.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }, \"Zone Creation\"), React.createElement(ModalBody, {\n          className: \"text-center m-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }, React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          row: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          },\n          __self: this\n        }, React.createElement(Label, {\n          sm: 2,\n          className: \"text-sm-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }, \"Zone Title\"), React.createElement(Col, {\n          sm: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"email\",\n          name: \"name\",\n          value: _this5.state.activeItem.name,\n          onChange: _this5.handleChange,\n          placeholder: \"Zone Title..\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        }))), React.createElement(FormGroup, {\n          row: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352\n          },\n          __self: this\n        }, React.createElement(Label, {\n          sm: 2,\n          className: \"text-sm-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }, \"Description\"), React.createElement(Col, {\n          sm: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"textarea\",\n          name: \"description\",\n          value: _this5.state.activeItem.description,\n          onChange: _this5.handleChange,\n          placeholder: \"Zone Description..\",\n          rows: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }))))), React.createElement(ModalFooter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"outline-dark\",\n          onClick: function onClick() {\n            return _this5.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          },\n          __self: this\n        }, \"Close\"), \" \", React.createElement(Button, {\n          color: color.value,\n          onClick: function onClick(event) {\n            onSave(_this5.state.activeItem);\n\n            _this5.toggle(index);\n\n            _this5.resetValues();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }, \"Save changes\"))));\n      }));\n    }\n  }]);\n\n  return createcomponentmodal;\n}(React.Component);\n\nexport default Zone;","map":{"version":3,"sources":["/Users/yanrudall/Development/100_Projects/Django/todo/frontend/src/pages/saas/zone.js"],"names":["ZoneList","React","axios","BootstrapTable","TableHeaderColumn","ToolkitProvider","paginationFactory","cellEditFactory","Button","Card","CardBody","CardHeader","CardTitle","Col","Container","CustomInput","Form","FormGroup","FormText","Input","InputGroup","InputGroupAddon","Label","Modal","ModalBody","ModalFooter","ModalHeader","Row","Table","Edit2","Trash","MinusCircle","PlusCircle","colors","name","value","Zone","props","refreshList","get","then","res","setState","zones","data","catch","err","console","log","components","handleDelete","item","delete","editItem","put","id","state","length","itemToBeSubmitted","title","description","completed","post","toggle","modal","handleSubmitModal","cellEdit","mode","blurToSave","afterSaveCell","oldValue","newValue","row","column","componentTableColumns","dataField","text","editable","headerStyle","colum","colIndex","width","sort","type","isDummyField","formatter","cellContent","componentTable","activeItem","filter","compElement","zone","location","Tables","activeComponent","find","element","component","Component","createcomponentmodal","index","handleChange","e","target","checked","forEach","color","onSave","map","event","resetValues"],"mappings":"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","sourcesContent":["import ZoneList from './main'\nimport React from \"react\";\nimport axios from \"axios\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport TableHeaderColumn from \"react-bootstrap-table-next\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\nimport './style.css';\n\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Col,\n  Container,\n  CustomInput,\n  Form,\n  FormGroup,\n  FormText,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Row,\n  Table\n} from \"reactstrap\";\n\n\nimport { Edit2, Trash, MinusCircle, PlusCircle  } from \"react-feather\";\n\n\nconst colors = [\n\n  {\n    name: \"Add Zone\",\n    value: \"success\"\n  }\n];\n\n\n\nclass Zone extends React.Component {\n  constructor(props) {\n        super(props);\n\n        this.state = {\n            activeItem: \"\",\n            zones: [],\n            components: [],\n            activeComponent: []\n        };\n    }\n\n    refreshList = () => {\n        axios\n          .get(\"http://localhost:8000/api/zone/\")\n          .then(res => this.setState({ zones: res.data }))\n          .catch(err => console.log(err));\n\n        axios\n          .get(\"http://localhost:8000/api/component/\")\n          .then(res => this.setState({ components: res.data }))\n          .catch(err => console.log(err));\n    };\n\n//Allways called when component initializes\n    componentDidMount() {\n\n        axios.get(\"http://localhost:8000/api/zone/\")\n          .then(res => {\n            const zones = res.data;\n            this.setState({zones: zones });\n\n            //Find the passed property in the zone array and set it to the active item\n            this.state.activeItem = this.state.zones.find(element => element.id === this.props.location.state.id)\n          })\n\n          axios.get(\"http://localhost:8000/api/component/\")\n          .then(res => {\n            const component = res.data;\n            this.setState({components: component });\n\n          })\n    }\n\n   handleDelete = item => {\n        axios\n          .delete(`http://localhost:8000/api/component/${item}`)\n          .then(res => this.refreshList());\n\n        //console.log(this.state.components.filter(compElement => compElement.zone === this.props.location.state.id))\n    };\n\n\n    //Edit the last item of a table\n    editItem = item => {\n\n        axios\n            .put(`http://localhost:8000/api/component/${item.id}/`, item)\n\n\n\n        //Check if the user operates on the last row; This is in order to add requirements directly in the last row\n        //of the table\n        if(this.state.zones[this.state.zones.length - 1].id === item.id)\n        {\n\n            console.log(item)\n            console.log(this.state.zones[this.state.zones.length - 1].id)\n\n            axios\n                .put(`http://localhost:8000/api/component/${item.id}/`, item)\n                .then(res => this.refreshList());\n\n\n            const itemToBeSubmitted = {\n                    title: \" \",\n                    description: \" \",\n                    completed: false\n             };\n\n            axios\n              .post(\"http://localhost:8000/api/component/\", itemToBeSubmitted)\n              .then(res => this.refreshList());\n        }\n    };\n\n       //Toggle the state of the modal (shall it be displayed or not?)\n    toggle = () => {\n        this.setState({ modal: !this.state.modal });\n    };\n\n    handleSubmitModal = item => {\n\n        if (item.id) {\n          axios\n            .put(`http://localhost:8000/api/component/${item.id}/`, item)\n            .then(res => this.refreshList());\n          return;\n        }\n        axios\n          .post(\"http://localhost:8000/api/component/\", item)\n          .then(res => this.refreshList());\n    };\n\n\n    //Call the edit item function in order to edit a cell of a table (in this case the last element\n    cellEdit = cellEditFactory({\n\n        mode: 'click',\n        blurToSave: true,\n        afterSaveCell: (oldValue, newValue, row, column) => {\n            this.editItem(row)\n        }\n    });\n\n    componentTableColumns = [\n        {\n            dataField: \"id\",\n            text: \"ID\",\n            editable: false,\n            headerStyle: (colum, colIndex) => {\n              return { width: '120px'};\n            },\n            sort: true,\n        },\n        {\n            dataField: \"componentName\",\n            text: \"Component\",\n            type: 'textarea' ,\n            headerStyle: (colum, colIndex) => {\n              return { width: '350px'};\n            },\n            sort: false,\n        },\n        {\n            dataField: \"componentDescription\",\n            text: \"Component\",\n            type: 'textarea' ,\n            headerStyle: (colum, colIndex) => {\n              return { width: '450px'};\n            },\n            sort: false,\n        },\n        {\n            dataField: 'df1',\n            isDummyField: true,\n            text: 'Action',\n            editable: false,\n            formatter: (cellContent, row) => {\n\n\n              return (\n                  <h5>\n                    <Trash className=\"align-middle\" type=\"submit\" onClick={() => this.handleDelete(row.id)} size={18}  />\n                  </h5>\n                );\n              }\n        }\n    ];\n\n\n    componentTable = () => (\n\n        //Find the foreign key in the list of the components; The foreign key is passed from the main.js\n        //The foreign key is searched in the \"zone\" element of the components and the foreign key comes from\n        //selected zone\n\n        <Card>\n          <CardHeader>\n            <CardTitle tag=\"h5\">Components</CardTitle>\n            <h6 className=\"card-subtitle text-muted\">\n            <createcomponentmodal\n                activeItem={this.state.activeItem}\n                toggle={this.toggle}\n                onSave={this.handleSubmitModal}\n                />\n            </h6>\n          </CardHeader>\n          <CardBody>\n            <BootstrapTable\n              keyField=\"id\"\n              data={this.state.components.filter(compElement => compElement.zone === this.props.location.state.id)}\n              columns={this.componentTableColumns}\n              deleteRow={ true }\n              bootstrap4\n              //striped\n              hover\n              maxHeight={5}\n              cellEdit={ this.cellEdit }\n              bordered={false}>\n            </BootstrapTable>\n\n\n\n\n\n          </CardBody>\n\n\n\n        </Card>\n    );\n\n\n    Tables = () => (\n\n        <Container fluid className=\"p-0\">\n\n                {this.componentTable()}\n\n        </Container>\n\n    );\n\n    render() {\n        return (\n            <div>\n                {this.Tables()}\n            </div>\n        )\n      }\n}\n\n\n\nclass createcomponentmodal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        activeItem: this.props.activeItem\n    };\n\n  }\n\n  toggle = index => {\n    this.setState(state => ({\n      [index]: !state[index]\n    }));\n  };\n\n  componentWillMount() {\n    colors.forEach((color, index) => {\n      this.setState(() => ({\n        [index]: false\n      }));\n    });\n  }\n\n  resetValues () {\n\n    this.state.activeItem = \"\"\n  };\n\n  handleChange = e => {\n        let { name, value } = e.target;\n\n        if (e.target.type === \"checkbox\") {\n            value = e.target.checked;\n        }\n\n        const activeItem = { ...this.state.activeItem, [name]: value };\n\n        this.setState({activeItem });\n    };\n\n  render() {\n    const { toggle, onSave } = this.props;\n    return (\n      <div>\n\n          {colors.map((color, index) => (\n            <React.Fragment key={index}>\n              <Button\n                color={color.value}\n                onClick={() => this.toggle(index)}\n                className=\"mr-1\"\n              >\n                {color.name}\n              </Button>\n              <Modal\n                isOpen={this.state[index]}\n                toggle={() => this.toggle(index)}\n                centered\n              >\n                <ModalHeader toggle={() => this.toggle(index)}>\n                  Zone Creation\n                </ModalHeader>\n                <ModalBody className=\"text-center m-3\">\n\n                  <Form>\n                        <FormGroup row>\n                          <Label sm={2} className=\"text-sm-right\">\n                            Zone Title\n                          </Label>\n                          <Col sm={10}>\n                            <Input type=\"email\" name=\"name\" value={this.state.activeItem.name}\n                            onChange={this.handleChange}\n                            placeholder=\"Zone Title..\" />\n                          </Col>\n                        </FormGroup>\n\n                        <FormGroup row>\n                          <Label sm={2} className=\"text-sm-right\">\n                            Description\n                          </Label>\n                          <Col sm={10}>\n                            <Input\n                              type=\"textarea\"\n                              name=\"description\"\n                              value={this.state.activeItem.description}\n                              onChange={this.handleChange}\n                              placeholder=\"Zone Description..\"\n                              rows=\"3\"\n                            />\n                          </Col>\n                        </FormGroup>\n                  </Form>\n\n\n                </ModalBody>\n                <ModalFooter>\n                  <Button color=\"outline-dark\" onClick={() => this.toggle(index)}>\n                    Close\n                  </Button>{\" \"}\n                  <Button\n                    color={color.value}\n                    onClick={(event) => { onSave(this.state.activeItem); this.toggle(index); this.resetValues()}}\n\n                  >\n                    Save changes\n                  </Button>\n                </ModalFooter>\n              </Modal>\n            </React.Fragment>\n          ))}\n        </div>\n    );\n  }\n}\n\nexport default Zone;"]},"metadata":{},"sourceType":"module"}