{"ast":null,"code":"import _defineProperty from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yanrudall/Development/100_Projects/Django/todo/frontend/src/components/Sidebar.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { Badge, Collapse } from \"reactstrap\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { Box } from \"react-feather\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport routes from \"../routes/index\";\nimport avatar from \"../assets/img/avatars/avatar.jpg\";\n\nvar SidebarCategory = function SidebarCategory(_ref) {\n  var name = _ref.name,\n      badgeColor = _ref.badgeColor,\n      badgeText = _ref.badgeText,\n      Icon = _ref.icon,\n      isOpen = _ref.isOpen,\n      children = _ref.children,\n      onClick = _ref.onClick;\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"data-toggle\": \"collapse\",\n    className: \"sidebar-link \" + (!isOpen ? \"collapsed\" : \"\"),\n    onClick: onClick,\n    \"aria-expanded\": isOpen ? \"true\" : \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    size: 18,\n    className: \"align-middle mr-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"align-middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, name), badgeColor && badgeText ? React.createElement(Badge, {\n    color: badgeColor,\n    size: 18,\n    className: \"sidebar-badge\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, badgeText) : null), React.createElement(Collapse, {\n    isOpen: isOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    id: \"item\",\n    className: \"sidebar-dropdown list-unstyled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, children)));\n};\n\nvar SidebarItem = withRouter(function (_ref2) {\n  var name = _ref2.name,\n      badgeColor = _ref2.badgeColor,\n      badgeText = _ref2.badgeText,\n      Icon = _ref2.icon,\n      location = _ref2.location,\n      to = _ref2.to;\n\n  var getSidebarItemClass = function getSidebarItemClass(path) {\n    return location.pathname === path ? \"active\" : \"\";\n  };\n\n  return React.createElement(\"li\", {\n    className: \"sidebar-item \" + getSidebarItemClass(to),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: to,\n    className: \"sidebar-link\",\n    activeClassName: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, Icon ? React.createElement(Icon, {\n    size: 18,\n    className: \"align-middle mr-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }) : null, name, badgeColor && badgeText ? React.createElement(Badge, {\n    color: badgeColor,\n    size: 18,\n    className: \"sidebar-badge\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, badgeText) : null));\n});\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Sidebar, _React$Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sidebar).call(this, props));\n\n    _this.toggle = function (index) {\n      _this.setState(function (state) {\n        return _defineProperty({}, index, !state[index]);\n      });\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Sidebar, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      /* Open collapse element that matches current url */\n      var pathName = this.props.location.pathname;\n      routes.forEach(function (route, index) {\n        var isActive = pathName.indexOf(route.path) === 0;\n        var isOpen = route.open;\n        var isHome = route.containsHome && pathName === \"/\" ? true : false;\n\n        _this2.setState(function () {\n          return _defineProperty({}, index, isActive || isOpen || isHome);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          sidebar = _this$props.sidebar,\n          layout = _this$props.layout;\n      return React.createElement(\"nav\", {\n        className: \"sidebar\" + (!sidebar.isOpen ? \" toggled\" : \"\") + (sidebar.isSticky ? \" sidebar-sticky\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidebar-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(PerfectScrollbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"sidebar-brand\",\n        href: \"index.html\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Box, {\n        className: \"align-middle text-primary mr-2\",\n        size: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"align-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"AppStack\")), React.createElement(\"ul\", {\n        className: \"sidebar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, routes.map(function (category, index) {\n        return React.createElement(React.Fragment, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, category.header ? React.createElement(\"li\", {\n          className: \"sidebar-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, category.header) : null, category.children ? React.createElement(SidebarCategory, {\n          name: category.name,\n          badgeColor: category.badgeColor,\n          badgeText: category.badgeText,\n          icon: category.icon,\n          isOpen: _this3.state[index],\n          onClick: function onClick() {\n            return _this3.toggle(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, category.children.map(function (route, index) {\n          return React.createElement(SidebarItem, {\n            key: index,\n            name: route.name,\n            to: route.path,\n            badgeColor: route.badgeColor,\n            badgeText: route.badgeText,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          });\n        })) : React.createElement(SidebarItem, {\n          name: category.name,\n          to: category.path,\n          icon: category.icon,\n          badgeColor: category.badgeColor,\n          badgeText: category.badgeText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }));\n      })), !layout.isBoxed && !sidebar.isSticky ? React.createElement(\"div\", {\n        className: \"sidebar-bottom d-none d-lg-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"media\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"rounded-circle mr-3\",\n        src: avatar,\n        alt: \"Chris Wood\",\n        width: \"40\",\n        height: \"40\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"media-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"mb-1 text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Chris Wood\"), React.createElement(\"div\", {\n        className: \"text-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faCircle,\n        className: \"text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), \" \", \"Online\")))) : null)));\n    }\n  }]);\n\n  return Sidebar;\n}(React.Component);\n\nexport default withRouter(connect(function (store) {\n  return {\n    sidebar: store.sidebar,\n    layout: store.layout\n  };\n})(Sidebar));","map":{"version":3,"sources":["/Users/yanrudall/Development/100_Projects/Django/todo/frontend/src/components/Sidebar.js"],"names":["React","connect","NavLink","withRouter","Badge","Collapse","PerfectScrollbar","Box","FontAwesomeIcon","faCircle","routes","avatar","SidebarCategory","name","badgeColor","badgeText","Icon","icon","isOpen","children","onClick","SidebarItem","location","to","getSidebarItemClass","path","pathname","Sidebar","props","toggle","index","setState","state","pathName","forEach","route","isActive","indexOf","open","isHome","containsHome","sidebar","layout","isSticky","map","category","header","isBoxed","Component","store"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nimport { Badge, Collapse } from \"reactstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nimport { Box } from \"react-feather\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport routes from \"../routes/index\";\r\nimport avatar from \"../assets/img/avatars/avatar.jpg\";\r\n\r\nconst SidebarCategory = ({\r\n  name,\r\n  badgeColor,\r\n  badgeText,\r\n  icon: Icon,\r\n  isOpen,\r\n  children,\r\n  onClick\r\n}) => {\r\n  return (\r\n    <li>\r\n      <span\r\n        data-toggle=\"collapse\"\r\n        className={\"sidebar-link \" + (!isOpen ? \"collapsed\" : \"\")}\r\n        onClick={onClick}\r\n        aria-expanded={isOpen ? \"true\" : \"false\"}\r\n      >\r\n        <Icon size={18} className=\"align-middle mr-3\" />\r\n        <span className=\"align-middle\">{name}</span>\r\n        {badgeColor && badgeText ? (\r\n          <Badge color={badgeColor} size={18} className=\"sidebar-badge\">\r\n            {badgeText}\r\n          </Badge>\r\n        ) : null}\r\n      </span>\r\n      <Collapse isOpen={isOpen}>\r\n        <ul id=\"item\" className={\"sidebar-dropdown list-unstyled\"}>\r\n          {children}\r\n        </ul>\r\n      </Collapse>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst SidebarItem = withRouter(\r\n  ({ name, badgeColor, badgeText, icon: Icon, location, to }) => {\r\n    const getSidebarItemClass = path => {\r\n      return location.pathname === path ? \"active\" : \"\";\r\n    };\r\n\r\n    return (\r\n      <li className={\"sidebar-item \" + getSidebarItemClass(to)}>\r\n        <NavLink to={to} className=\"sidebar-link\" activeClassName=\"active\">\r\n          {Icon ? <Icon size={18} className=\"align-middle mr-3\" /> : null}\r\n          {name}\r\n          {badgeColor && badgeText ? (\r\n            <Badge color={badgeColor} size={18} className=\"sidebar-badge\">\r\n              {badgeText}\r\n            </Badge>\r\n          ) : null}\r\n        </NavLink>\r\n      </li>\r\n    );\r\n  }\r\n);\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  toggle = index => {\r\n    this.setState(state => ({\r\n      [index]: !state[index]\r\n    }));\r\n  };\r\n\r\n  componentWillMount() {\r\n    /* Open collapse element that matches current url */\r\n    const pathName = this.props.location.pathname;\r\n\r\n    routes.forEach((route, index) => {\r\n      const isActive = pathName.indexOf(route.path) === 0;\r\n      const isOpen = route.open;\r\n      const isHome = route.containsHome && pathName === \"/\" ? true : false;\r\n\r\n      this.setState(() => ({\r\n        [index]: isActive || isOpen || isHome\r\n      }));\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { sidebar, layout } = this.props;\r\n\r\n    return (\r\n      <nav\r\n        className={\r\n          \"sidebar\" +\r\n          (!sidebar.isOpen ? \" toggled\" : \"\") +\r\n          (sidebar.isSticky ? \" sidebar-sticky\" : \"\")\r\n        }\r\n      >\r\n        <div className=\"sidebar-content\">\r\n          <PerfectScrollbar>\r\n            <a className=\"sidebar-brand\" href=\"index.html\">\r\n              <Box className=\"align-middle text-primary mr-2\" size={24} />\r\n              <span className=\"align-middle\">AppStack</span>\r\n            </a>\r\n\r\n            <ul className=\"sidebar-nav\">\r\n              {routes.map((category, index) => {\r\n                return (\r\n                  <React.Fragment key={index}>\r\n                    {category.header ? (\r\n                      <li className=\"sidebar-header\">{category.header}</li>\r\n                    ) : null}\r\n\r\n                    {category.children ? (\r\n                      <SidebarCategory\r\n                        name={category.name}\r\n                        badgeColor={category.badgeColor}\r\n                        badgeText={category.badgeText}\r\n                        icon={category.icon}\r\n                        isOpen={this.state[index]}\r\n                        onClick={() => this.toggle(index)}\r\n                      >\r\n                        {category.children.map((route, index) => (\r\n                          <SidebarItem\r\n                            key={index}\r\n                            name={route.name}\r\n                            to={route.path}\r\n                            badgeColor={route.badgeColor}\r\n                            badgeText={route.badgeText}\r\n                          />\r\n                        ))}\r\n                      </SidebarCategory>\r\n                    ) : (\r\n                      <SidebarItem\r\n                        name={category.name}\r\n                        to={category.path}\r\n                        icon={category.icon}\r\n                        badgeColor={category.badgeColor}\r\n                        badgeText={category.badgeText}\r\n                      />\r\n                    )}\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </ul>\r\n\r\n            {!layout.isBoxed && !sidebar.isSticky ? (\r\n              <div className=\"sidebar-bottom d-none d-lg-block\">\r\n                <div className=\"media\">\r\n                  <img\r\n                    className=\"rounded-circle mr-3\"\r\n                    src={avatar}\r\n                    alt=\"Chris Wood\"\r\n                    width=\"40\"\r\n                    height=\"40\"\r\n                  />\r\n                  <div className=\"media-body\">\r\n                    <h5 className=\"mb-1 text-white\">Chris Wood</h5>\r\n                    <div className=\"text-light\">\r\n                      <FontAwesomeIcon\r\n                        icon={faCircle}\r\n                        className=\"text-success\"\r\n                      />{\" \"}\r\n                      Online\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n          </PerfectScrollbar>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(store => ({\r\n    sidebar: store.sidebar,\r\n    layout: store.layout\r\n  }))(Sidebar)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}