(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["ReactBootstrapTable2Paginator"] = factory(require("react"));
	else
		root["ReactBootstrapTable2Paginator"] = factory(root["React"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 14);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

if (false) {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(15)();
}


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  PAGINATION_SIZE: 5,
  PAGE_START_INDEX: 1,
  With_FIRST_AND_LAST: true,
  SHOW_ALL_PAGE_BTNS: false,
  SHOW_TOTAL: false,
  PAGINATION_TOTAL: null,
  FIRST_PAGE_TEXT: '<<',
  PRE_PAGE_TEXT: '<',
  NEXT_PAGE_TEXT: '>',
  LAST_PAGE_TEXT: '>>',
  NEXT_PAGE_TITLE: 'next page',
  LAST_PAGE_TITLE: 'last page',
  PRE_PAGE_TITLE: 'previous page',
  FIRST_PAGE_TITLE: 'first page',
  SIZE_PER_PAGE_LIST: [10, 25, 30, 50],
  HIDE_SIZE_PER_PAGE: false,
  HIDE_PAGE_LIST_ONLY_ONE_PAGE: false
};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-mixed-operators: 0 */


exports.default = function (ExtendBase) {
  return function (_ExtendBase) {
    _inherits(PageResolver, _ExtendBase);

    function PageResolver() {
      _classCallCheck(this, PageResolver);

      return _possibleConstructorReturn(this, (PageResolver.__proto__ || Object.getPrototypeOf(PageResolver)).apply(this, arguments));
    }

    _createClass(PageResolver, [{
      key: 'backToPrevPage',
      value: function backToPrevPage() {
        var _props = this.props,
            currPage = _props.currPage,
            pageStartIndex = _props.pageStartIndex;

        return currPage - 1 < pageStartIndex ? pageStartIndex : currPage - 1;
      }
    }, {
      key: 'initialState',
      value: function initialState() {
        var totalPages = this.calculateTotalPage();
        var lastPage = this.calculateLastPage(totalPages);
        return { totalPages: totalPages, lastPage: lastPage };
      }
    }, {
      key: 'calculateTotalPage',
      value: function calculateTotalPage() {
        var sizePerPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.currSizePerPage;
        var dataSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props.dataSize;

        return Math.ceil(dataSize / sizePerPage);
      }
    }, {
      key: 'calculateLastPage',
      value: function calculateLastPage(totalPages) {
        var pageStartIndex = this.props.pageStartIndex;

        return pageStartIndex + totalPages - 1;
      }
    }, {
      key: 'calculateFromTo',
      value: function calculateFromTo() {
        var _props2 = this.props,
            dataSize = _props2.dataSize,
            currPage = _props2.currPage,
            currSizePerPage = _props2.currSizePerPage,
            pageStartIndex = _props2.pageStartIndex;

        var offset = Math.abs(_const2.default.PAGE_START_INDEX - pageStartIndex);

        var from = (currPage - pageStartIndex) * currSizePerPage;
        from = dataSize === 0 ? 0 : from + 1;
        var to = Math.min(currSizePerPage * (currPage + offset), dataSize);
        if (to > dataSize) to = dataSize;

        return [from, to];
      }
    }, {
      key: 'calculatePages',
      value: function calculatePages(totalPages, lastPage) {
        var _props3 = this.props,
            currPage = _props3.currPage,
            paginationSize = _props3.paginationSize,
            pageStartIndex = _props3.pageStartIndex,
            withFirstAndLast = _props3.withFirstAndLast,
            firstPageText = _props3.firstPageText,
            prePageText = _props3.prePageText,
            nextPageText = _props3.nextPageText,
            lastPageText = _props3.lastPageText,
            alwaysShowAllBtns = _props3.alwaysShowAllBtns;


        var pages = void 0;
        var endPage = totalPages;
        if (endPage <= 0) return [];

        var startPage = Math.max(currPage - Math.floor(paginationSize / 2), pageStartIndex);
        endPage = startPage + paginationSize - 1;

        if (endPage > lastPage) {
          endPage = lastPage;
          startPage = endPage - paginationSize + 1;
        }

        if (startPage !== pageStartIndex && totalPages > paginationSize && withFirstAndLast) {
          pages = [firstPageText, prePageText];
        } else if (totalPages > 1 || alwaysShowAllBtns) {
          pages = [prePageText];
        } else {
          pages = [];
        }

        for (var i = startPage; i <= endPage; i += 1) {
          if (i >= pageStartIndex) pages.push(i);
        }

        if (endPage <= lastPage && pages.length > 1) {
          pages.push(nextPageText);
        }
        if (endPage !== lastPage && withFirstAndLast) {
          pages.push(lastPageText);
        }
        return pages;
      }
    }, {
      key: 'calculatePageStatus',
      value: function calculatePageStatus() {
        var _this2 = this;

        var pages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var lastPage = arguments[1];
        var _props4 = this.props,
            currPage = _props4.currPage,
            pageStartIndex = _props4.pageStartIndex,
            firstPageText = _props4.firstPageText,
            prePageText = _props4.prePageText,
            nextPageText = _props4.nextPageText,
            lastPageText = _props4.lastPageText,
            alwaysShowAllBtns = _props4.alwaysShowAllBtns;

        var isStart = function isStart(page) {
          return currPage === pageStartIndex && (page === firstPageText || page === prePageText);
        };
        var isEnd = function isEnd(page) {
          return currPage === lastPage && (page === nextPageText || page === lastPageText);
        };

        return pages.filter(function (page) {
          if (alwaysShowAllBtns) {
            return true;
          }
          return !(isStart(page) || isEnd(page));
        }).map(function (page) {
          var title = void 0;
          var active = page === currPage;
          var disabled = isStart(page) || isEnd(page);

          if (page === nextPageText) {
            title = _this2.props.nextPageTitle;
          } else if (page === prePageText) {
            title = _this2.props.prePageTitle;
          } else if (page === firstPageText) {
            title = _this2.props.firstPageTitle;
          } else if (page === lastPageText) {
            title = _this2.props.lastPageTitle;
          } else {
            title = '' + page;
          }

          return { page: page, active: active, disabled: disabled, title: title };
        });
      }
    }, {
      key: 'calculateSizePerPageStatus',
      value: function calculateSizePerPageStatus() {
        var sizePerPageList = this.props.sizePerPageList;

        return sizePerPageList.map(function (_sizePerPage) {
          var pageText = typeof _sizePerPage.text !== 'undefined' ? _sizePerPage.text : _sizePerPage;
          var pageNumber = typeof _sizePerPage.value !== 'undefined' ? _sizePerPage.value : _sizePerPage;
          return {
            text: '' + pageText,
            page: pageNumber
          };
        });
      }
    }]);

    return PageResolver;
  }(ExtendBase);
};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				classes.push(classNames.apply(null, arg));
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
			return classNames;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _pageResolver2 = __webpack_require__(3);

var _pageResolver3 = _interopRequireDefault(_pageResolver2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */


exports.default = function (WrappedComponent) {
  return function (_pageResolver) {
    _inherits(PaginationHandler, _pageResolver);

    function PaginationHandler(props) {
      _classCallCheck(this, PaginationHandler);

      var _this = _possibleConstructorReturn(this, (PaginationHandler.__proto__ || Object.getPrototypeOf(PaginationHandler)).call(this, props));

      _this.handleChangePage = _this.handleChangePage.bind(_this);
      _this.handleChangeSizePerPage = _this.handleChangeSizePerPage.bind(_this);
      _this.state = _this.initialState();
      return _this;
    }

    _createClass(PaginationHandler, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        var dataSize = nextProps.dataSize,
            currSizePerPage = nextProps.currSizePerPage;

        if (currSizePerPage !== this.props.currSizePerPage || dataSize !== this.props.dataSize) {
          var totalPages = this.calculateTotalPage(currSizePerPage, dataSize);
          var lastPage = this.calculateLastPage(totalPages);
          this.setState({ totalPages: totalPages, lastPage: lastPage });
        }
      }
    }, {
      key: 'handleChangeSizePerPage',
      value: function handleChangeSizePerPage(sizePerPage) {
        var _props = this.props,
            currSizePerPage = _props.currSizePerPage,
            onSizePerPageChange = _props.onSizePerPageChange;

        var selectedSize = typeof sizePerPage === 'string' ? parseInt(sizePerPage, 10) : sizePerPage;
        var currPage = this.props.currPage;

        if (selectedSize !== currSizePerPage) {
          var newTotalPages = this.calculateTotalPage(selectedSize);
          var newLastPage = this.calculateLastPage(newTotalPages);
          if (currPage > newLastPage) currPage = newLastPage;
          onSizePerPageChange(selectedSize, currPage);
        }
      }
    }, {
      key: 'handleChangePage',
      value: function handleChangePage(newPage) {
        var page = void 0;
        var _props2 = this.props,
            currPage = _props2.currPage,
            pageStartIndex = _props2.pageStartIndex,
            prePageText = _props2.prePageText,
            nextPageText = _props2.nextPageText,
            lastPageText = _props2.lastPageText,
            firstPageText = _props2.firstPageText,
            onPageChange = _props2.onPageChange;
        var lastPage = this.state.lastPage;


        if (newPage === prePageText) {
          page = this.backToPrevPage();
        } else if (newPage === nextPageText) {
          page = currPage + 1 > lastPage ? lastPage : currPage + 1;
        } else if (newPage === lastPageText) {
          page = lastPage;
        } else if (newPage === firstPageText) {
          page = pageStartIndex;
        } else {
          page = parseInt(newPage, 10);
        }
        if (page !== currPage) {
          onPageChange(page);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        return _react2.default.createElement(WrappedComponent, _extends({}, this.props, {
          lastPage: this.state.lastPage,
          totalPages: this.state.totalPages,
          onPageChange: this.handleChangePage,
          onSizePerPageChange: this.handleChangeSizePerPage
        }));
      }
    }]);

    return PaginationHandler;
  }((0, _pageResolver3.default)(_react.Component));
};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _events = __webpack_require__(19);

var _events2 = _interopRequireDefault(_events);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

var _page = __webpack_require__(7);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */
/* eslint react/require-default-props: 0 */
/* eslint no-lonely-if: 0 */


var StateContext = _react2.default.createContext();

var StateProvider = function (_React$Component) {
  _inherits(StateProvider, _React$Component);

  function StateProvider(props) {
    _classCallCheck(this, StateProvider);

    var _this = _possibleConstructorReturn(this, (StateProvider.__proto__ || Object.getPrototypeOf(StateProvider)).call(this, props));

    _initialiseProps.call(_this);

    _this.handleChangePage = _this.handleChangePage.bind(_this);
    _this.handleDataSizeChange = _this.handleDataSizeChange.bind(_this);
    _this.handleChangeSizePerPage = _this.handleChangeSizePerPage.bind(_this);

    var currPage = void 0;
    var currSizePerPage = void 0;
    var options = props.pagination.options;

    var sizePerPageList = options.sizePerPageList || _const2.default.SIZE_PER_PAGE_LIST;

    // initialize current page
    if (typeof options.page !== 'undefined') {
      currPage = options.page;
    } else if (typeof options.pageStartIndex !== 'undefined') {
      currPage = options.pageStartIndex;
    } else {
      currPage = _const2.default.PAGE_START_INDEX;
    }

    // initialize current sizePerPage
    if (typeof options.sizePerPage !== 'undefined') {
      currSizePerPage = options.sizePerPage;
    } else if (_typeof(sizePerPageList[0]) === 'object') {
      currSizePerPage = sizePerPageList[0].value;
    } else {
      currSizePerPage = sizePerPageList[0];
    }

    _this.currPage = currPage;
    _this.dataSize = options.totalSize;
    _this.currSizePerPage = currSizePerPage;
    _this.dataChangeListener = new _events2.default();
    _this.dataChangeListener.on('filterChanged', _this.handleDataSizeChange);
    return _this;
  }

  _createClass(StateProvider, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var custom = nextProps.pagination.options.custom;

      // user should align the page when the page is not fit to the data size when remote enable

      if (this.isRemotePagination() || custom) {
        this.currPage = nextProps.pagination.options.page;
        this.currSizePerPage = nextProps.pagination.options.sizePerPage;
        this.dataSize = nextProps.pagination.options.totalSize;
      }
    }
  }, {
    key: 'handleDataSizeChange',
    value: function handleDataSizeChange(newDataSize) {
      var options = this.props.pagination.options;

      var pageStartIndex = typeof options.pageStartIndex === 'undefined' ? _const2.default.PAGE_START_INDEX : options.pageStartIndex;
      this.dataSize = newDataSize;
      this.currPage = (0, _page.alignPage)(newDataSize, this.currPage, this.currSizePerPage, pageStartIndex);
      this.forceUpdate();
    }
  }, {
    key: 'handleChangePage',
    value: function handleChangePage(currPage) {
      var currSizePerPage = this.currSizePerPage;
      var options = this.props.pagination.options;


      if (options.onPageChange) {
        options.onPageChange(currPage, currSizePerPage);
      }

      this.currPage = currPage;

      if (this.isRemotePagination()) {
        this.getPaginationRemoteEmitter().emit('paginationChange', currPage, currSizePerPage);
        return;
      }
      this.forceUpdate();
    }
  }, {
    key: 'handleChangeSizePerPage',
    value: function handleChangeSizePerPage(currSizePerPage, currPage) {
      var options = this.props.pagination.options;


      if (options.onSizePerPageChange) {
        options.onSizePerPageChange(currSizePerPage, currPage);
      }

      this.currPage = currPage;
      this.currSizePerPage = currSizePerPage;

      if (this.isRemotePagination()) {
        this.getPaginationRemoteEmitter().emit('paginationChange', currPage, currSizePerPage);
        return;
      }
      this.forceUpdate();
    }
  }, {
    key: 'render',
    value: function render() {
      var paginationProps = this.getPaginationProps();
      var pagination = _extends({}, this.props.pagination, {
        options: paginationProps
      });

      return _react2.default.createElement(
        StateContext.Provider,
        {
          value: {
            paginationProps: paginationProps,
            paginationTableProps: {
              pagination: pagination,
              setPaginationRemoteEmitter: this.setPaginationRemoteEmitter,
              dataChangeListener: this.dataChangeListener
            }
          }
        },
        this.props.children
      );
    }
  }]);

  return StateProvider;
}(_react2.default.Component);

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this.getPaginationProps = function () {
    var _props = _this2.props,
        options = _props.pagination.options,
        bootstrap4 = _props.bootstrap4;
    var currPage = _this2.currPage,
        currSizePerPage = _this2.currSizePerPage,
        dataSize = _this2.dataSize;

    var withFirstAndLast = typeof options.withFirstAndLast === 'undefined' ? _const2.default.With_FIRST_AND_LAST : options.withFirstAndLast;
    var alwaysShowAllBtns = typeof options.alwaysShowAllBtns === 'undefined' ? _const2.default.SHOW_ALL_PAGE_BTNS : options.alwaysShowAllBtns;
    var hideSizePerPage = typeof options.hideSizePerPage === 'undefined' ? _const2.default.HIDE_SIZE_PER_PAGE : options.hideSizePerPage;
    var hidePageListOnlyOnePage = typeof options.hidePageListOnlyOnePage === 'undefined' ? _const2.default.HIDE_PAGE_LIST_ONLY_ONE_PAGE : options.hidePageListOnlyOnePage;
    var pageStartIndex = typeof options.pageStartIndex === 'undefined' ? _const2.default.PAGE_START_INDEX : options.pageStartIndex;
    return _extends({}, options, {
      bootstrap4: bootstrap4,
      page: currPage,
      sizePerPage: currSizePerPage,
      pageStartIndex: pageStartIndex,
      hidePageListOnlyOnePage: hidePageListOnlyOnePage,
      hideSizePerPage: hideSizePerPage,
      alwaysShowAllBtns: alwaysShowAllBtns,
      withFirstAndLast: withFirstAndLast,
      dataSize: dataSize,
      sizePerPageList: options.sizePerPageList || _const2.default.SIZE_PER_PAGE_LIST,
      paginationSize: options.paginationSize || _const2.default.PAGINATION_SIZE,
      showTotal: options.showTotal,
      pageListRenderer: options.pageListRenderer,
      pageButtonRenderer: options.pageButtonRenderer,
      sizePerPageRenderer: options.sizePerPageRenderer,
      paginationTotalRenderer: options.paginationTotalRenderer,
      sizePerPageOptionRenderer: options.sizePerPageOptionRenderer,
      firstPageText: options.firstPageText || _const2.default.FIRST_PAGE_TEXT,
      prePageText: options.prePageText || _const2.default.PRE_PAGE_TEXT,
      nextPageText: options.nextPageText || _const2.default.NEXT_PAGE_TEXT,
      lastPageText: options.lastPageText || _const2.default.LAST_PAGE_TEXT,
      prePageTitle: options.prePageTitle || _const2.default.PRE_PAGE_TITLE,
      nextPageTitle: options.nextPageTitle || _const2.default.NEXT_PAGE_TITLE,
      firstPageTitle: options.firstPageTitle || _const2.default.FIRST_PAGE_TITLE,
      lastPageTitle: options.lastPageTitle || _const2.default.LAST_PAGE_TITLE,
      onPageChange: _this2.handleChangePage,
      onSizePerPageChange: _this2.handleChangeSizePerPage
    });
  };

  this.setPaginationRemoteEmitter = function (remoteEmitter) {
    _this2.remoteEmitter = remoteEmitter;
  };

  this.getPaginationRemoteEmitter = function () {
    return _this2.remoteEmitter || _this2.props.remoteEmitter;
  };

  this.isRemotePagination = function () {
    var e = {};
    _this2.remoteEmitter.emit('isRemotePagination', e);
    return e.result;
  };
};

exports.default = function () {
  return {
    Provider: StateProvider,
    Consumer: StateContext.Consumer
  };
};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var getNormalizedPage = function getNormalizedPage(page, pageStartIndex) {
  var offset = Math.abs(1 - pageStartIndex);
  return page + offset;
};

var endIndex = function endIndex(page, sizePerPage, pageStartIndex) {
  return getNormalizedPage(page, pageStartIndex) * sizePerPage - 1;
};

var startIndex = function startIndex(end, sizePerPage) {
  return end - (sizePerPage - 1);
};

var alignPage = exports.alignPage = function alignPage(dataSize, page, sizePerPage, pageStartIndex) {
  if (page < pageStartIndex || page > Math.floor(dataSize / sizePerPage) + pageStartIndex) {
    return pageStartIndex;
  }
  return page;
};

var getByCurrPage = exports.getByCurrPage = function getByCurrPage(data, page, sizePerPage, pageStartIndex) {
  var dataSize = data.length;
  if (!dataSize) return [];

  var end = endIndex(page, sizePerPage, pageStartIndex);
  var start = startIndex(end, sizePerPage);

  var result = [];
  for (var i = start; i <= end; i += 1) {
    result.push(data[i]);
    if (i + 1 === dataSize) break;
  }
  return result;
};

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BootstrapContext = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// consider to have a common lib?1
var BootstrapContext = exports.BootstrapContext = _react2.default.createContext({
  bootstrap4: false
});

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SizePerPageDropdownAdapter = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _pageResolver2 = __webpack_require__(3);

var _pageResolver3 = _interopRequireDefault(_pageResolver2);

var _sizePerPageDropdown = __webpack_require__(10);

var _sizePerPageDropdown2 = _interopRequireDefault(_sizePerPageDropdown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */


var sizePerPageDropdownAdapter = function sizePerPageDropdownAdapter(WrappedComponent) {
  return function (_pageResolver) {
    _inherits(SizePerPageDropdownAdapter, _pageResolver);

    function SizePerPageDropdownAdapter(props) {
      _classCallCheck(this, SizePerPageDropdownAdapter);

      var _this = _possibleConstructorReturn(this, (SizePerPageDropdownAdapter.__proto__ || Object.getPrototypeOf(SizePerPageDropdownAdapter)).call(this, props));

      _this.closeDropDown = _this.closeDropDown.bind(_this);
      _this.toggleDropDown = _this.toggleDropDown.bind(_this);
      _this.handleChangeSizePerPage = _this.handleChangeSizePerPage.bind(_this);
      _this.state = { dropdownOpen: false };
      return _this;
    }

    _createClass(SizePerPageDropdownAdapter, [{
      key: 'toggleDropDown',
      value: function toggleDropDown() {
        var dropdownOpen = !this.state.dropdownOpen;
        this.setState(function () {
          return { dropdownOpen: dropdownOpen };
        });
      }
    }, {
      key: 'closeDropDown',
      value: function closeDropDown() {
        this.setState(function () {
          return { dropdownOpen: false };
        });
      }
    }, {
      key: 'handleChangeSizePerPage',
      value: function handleChangeSizePerPage(sizePerPage) {
        this.props.onSizePerPageChange(sizePerPage);
        this.closeDropDown();
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props,
            sizePerPageList = _props.sizePerPageList,
            currSizePerPage = _props.currSizePerPage,
            hideSizePerPage = _props.hideSizePerPage,
            sizePerPageRenderer = _props.sizePerPageRenderer,
            sizePerPageOptionRenderer = _props.sizePerPageOptionRenderer;
        var open = this.state.dropdownOpen;


        if (sizePerPageList.length > 1 && !hideSizePerPage) {
          if (sizePerPageRenderer) {
            return sizePerPageRenderer({
              options: this.calculateSizePerPageStatus(),
              currSizePerPage: '' + currSizePerPage,
              onSizePerPageChange: this.handleChangeSizePerPage
            });
          }
          return _react2.default.createElement(WrappedComponent, {
            currSizePerPage: '' + currSizePerPage,
            options: this.calculateSizePerPageStatus(),
            optionRenderer: sizePerPageOptionRenderer,
            onSizePerPageChange: this.handleChangeSizePerPage,
            onClick: this.toggleDropDown,
            onBlur: this.closeDropDown,
            open: open
          });
        }
        return null;
      }
    }]);

    return SizePerPageDropdownAdapter;
  }((0, _pageResolver3.default)(_react.Component));
};

var SizePerPageDropdownAdapter = exports.SizePerPageDropdownAdapter = sizePerPageDropdownAdapter(_sizePerPageDropdown2.default);
exports.default = sizePerPageDropdownAdapter;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _bootstrap = __webpack_require__(8);

var _sizePerPageOption = __webpack_require__(22);

var _sizePerPageOption2 = _interopRequireDefault(_sizePerPageOption);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var sizePerPageDefaultClass = 'react-bs-table-sizePerPage-dropdown';

var SizePerPageDropDown = function SizePerPageDropDown(props) {
  var open = props.open,
      hidden = props.hidden,
      onClick = props.onClick,
      onBlur = props.onBlur,
      options = props.options,
      className = props.className,
      variation = props.variation,
      btnContextual = props.btnContextual,
      optionRenderer = props.optionRenderer,
      currSizePerPage = props.currSizePerPage,
      onSizePerPageChange = props.onSizePerPageChange;


  var dropDownStyle = { visibility: hidden ? 'hidden' : 'visible' };
  var openClass = open ? 'open show' : '';
  var dropdownClasses = (0, _classnames2.default)(openClass, sizePerPageDefaultClass, variation, className);

  return _react2.default.createElement(
    _bootstrap.BootstrapContext.Consumer,
    null,
    function (_ref) {
      var bootstrap4 = _ref.bootstrap4;
      return _react2.default.createElement(
        'span',
        {
          style: dropDownStyle,
          className: dropdownClasses
        },
        _react2.default.createElement(
          'button',
          {
            id: 'pageDropDown',
            className: 'btn ' + btnContextual + ' dropdown-toggle',
            'data-toggle': 'dropdown',
            'aria-expanded': open,
            onClick: onClick,
            onBlur: onBlur
          },
          currSizePerPage,
          ' ',
          bootstrap4 ? null : _react2.default.createElement(
            'span',
            null,
            _react2.default.createElement('span', { className: 'caret' })
          )
        ),
        _react2.default.createElement(
          'ul',
          {
            className: 'dropdown-menu ' + openClass,
            role: 'menu',
            'aria-labelledby': 'pageDropDown'
          },
          options.map(function (option) {
            if (optionRenderer) {
              return optionRenderer(_extends({}, option, {
                onSizePerPageChange: onSizePerPageChange
              }));
            }
            return _react2.default.createElement(_sizePerPageOption2.default, _extends({}, option, {
              key: option.text,
              bootstrap4: bootstrap4,
              onSizePerPageChange: onSizePerPageChange
            }));
          })
        )
      );
    }
  );
};

SizePerPageDropDown.propTypes = {
  currSizePerPage: _propTypes2.default.string.isRequired,
  options: _propTypes2.default.array.isRequired,
  onClick: _propTypes2.default.func.isRequired,
  onBlur: _propTypes2.default.func.isRequired,
  onSizePerPageChange: _propTypes2.default.func.isRequired,
  open: _propTypes2.default.bool,
  hidden: _propTypes2.default.bool,
  btnContextual: _propTypes2.default.string,
  variation: _propTypes2.default.oneOf(['dropdown', 'dropup']),
  className: _propTypes2.default.string,
  optionRenderer: _propTypes2.default.func
};
SizePerPageDropDown.defaultProps = {
  open: false,
  hidden: false,
  btnContextual: 'btn-default btn-secondary',
  variation: 'dropdown',
  className: '',
  optionRenderer: null
};

exports.default = SizePerPageDropDown;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PaginationListWithAdapter = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _pageResolver2 = __webpack_require__(3);

var _pageResolver3 = _interopRequireDefault(_pageResolver2);

var _paginationList = __webpack_require__(12);

var _paginationList2 = _interopRequireDefault(_paginationList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */


var paginationListAdapter = function paginationListAdapter(WrappedComponent) {
  return function (_pageResolver) {
    _inherits(PaginationListAdapter, _pageResolver);

    function PaginationListAdapter() {
      _classCallCheck(this, PaginationListAdapter);

      return _possibleConstructorReturn(this, (PaginationListAdapter.__proto__ || Object.getPrototypeOf(PaginationListAdapter)).apply(this, arguments));
    }

    _createClass(PaginationListAdapter, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            lastPage = _props.lastPage,
            totalPages = _props.totalPages,
            pageButtonRenderer = _props.pageButtonRenderer,
            onPageChange = _props.onPageChange;

        var pages = this.calculatePageStatus(this.calculatePages(totalPages, lastPage), lastPage);
        return _react2.default.createElement(WrappedComponent, {
          pageButtonRenderer: pageButtonRenderer,
          onPageChange: onPageChange,
          pages: pages
        });
      }
    }]);

    return PaginationListAdapter;
  }((0, _pageResolver3.default)(_react.Component));
};

var PaginationListWithAdapter = exports.PaginationListWithAdapter = paginationListAdapter(_paginationList2.default);
exports.default = paginationListAdapter;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _pageButton = __webpack_require__(23);

var _pageButton2 = _interopRequireDefault(_pageButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PaginatonList = function PaginatonList(props) {
  return _react2.default.createElement(
    'ul',
    { className: 'pagination react-bootstrap-table-page-btns-ul' },
    props.pages.map(function (pageProps) {
      if (props.pageButtonRenderer) {
        return props.pageButtonRenderer(_extends({}, pageProps, {
          onPageChange: props.onPageChange
        }));
      }
      return _react2.default.createElement(_pageButton2.default, _extends({
        key: pageProps.page
      }, pageProps, {
        onPageChange: props.onPageChange
      }));
    })
  );
};

PaginatonList.propTypes = {
  pages: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    page: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
    active: _propTypes2.default.bool,
    disable: _propTypes2.default.bool,
    title: _propTypes2.default.string
  })).isRequired,
  onPageChange: _propTypes2.default.func.isRequired,
  pageButtonRenderer: _propTypes2.default.func
};

PaginatonList.defaultProps = {
  pageButtonRenderer: null
};

exports.default = PaginatonList;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /* eslint react/prop-types: 0 */


exports.default = function (WrappedComponent) {
  return function (_ref) {
    var page = _ref.page,
        sizePerPage = _ref.sizePerPage,
        rest = _objectWithoutProperties(_ref, ['page', 'sizePerPage']);

    return _react2.default.createElement(WrappedComponent, _extends({}, rest, {
      currPage: page,
      currSizePerPage: sizePerPage
    }));
  };
};

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SizePerPageDropdownStandalone = exports.PaginationListStandalone = exports.PaginationProvider = undefined;

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _stateContext = __webpack_require__(6);

var _stateContext2 = _interopRequireDefault(_stateContext);

var _dataContext = __webpack_require__(20);

var _dataContext2 = _interopRequireDefault(_dataContext);

var _paginationListStandalone = __webpack_require__(25);

var _paginationListStandalone2 = _interopRequireDefault(_paginationListStandalone);

var _sizePerPageDropdownStandalone = __webpack_require__(26);

var _sizePerPageDropdownStandalone2 = _interopRequireDefault(_sizePerPageDropdownStandalone);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return {
    createContext: _dataContext2.default,
    options: options
  };
};

var _createBaseContext = (0, _stateContext2.default)(),
    Provider = _createBaseContext.Provider,
    Consumer = _createBaseContext.Consumer;

var CustomizableProvider = function CustomizableProvider(props) {
  return _react2.default.createElement(
    Provider,
    props,
    _react2.default.createElement(
      Consumer,
      null,
      function (paginationProps) {
        return props.children(paginationProps);
      }
    )
  );
};

CustomizableProvider.propTypes = {
  children: _propTypes2.default.func.isRequired
};

var PaginationProvider = exports.PaginationProvider = CustomizableProvider;
exports.PaginationListStandalone = _paginationListStandalone2.default;
exports.SizePerPageDropdownStandalone = _sizePerPageDropdownStandalone2.default;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var emptyFunction = __webpack_require__(16);
var invariant = __webpack_require__(17);
var ReactPropTypesSecret = __webpack_require__(18);

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    invariant(
      false,
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (false) {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 19 */
/***/ (function(module, exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

var _bootstrap = __webpack_require__(8);

var _pagination = __webpack_require__(21);

var _pagination2 = _interopRequireDefault(_pagination);

var _page = __webpack_require__(7);

var _stateContext = __webpack_require__(6);

var _stateContext2 = _interopRequireDefault(_stateContext);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/prop-types: 0 */
/* eslint react/require-default-props: 0 */
/* eslint no-lonely-if: 0 */


var _createBaseContext = (0, _stateContext2.default)(),
    Provider = _createBaseContext.Provider;

var PaginationDataContext = _react2.default.createContext();

var PaginationDataProvider = function (_Provider) {
  _inherits(PaginationDataProvider, _Provider);

  function PaginationDataProvider() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, PaginationDataProvider);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PaginationDataProvider.__proto__ || Object.getPrototypeOf(PaginationDataProvider)).call.apply(_ref, [this].concat(args))), _this), _this.isRemotePagination = function () {
      return _this.props.isRemotePagination();
    }, _this.renderDefaultPagination = function () {
      if (!_this.props.pagination.options.custom) {
        var _this$getPaginationPr = _this.getPaginationProps(),
            bootstrap4 = _this$getPaginationPr.bootstrap4,
            currPage = _this$getPaginationPr.page,
            currSizePerPage = _this$getPaginationPr.sizePerPage,
            dataSize = _this$getPaginationPr.dataSize,
            rest = _objectWithoutProperties(_this$getPaginationPr, ['bootstrap4', 'page', 'sizePerPage', 'dataSize']);

        return _react2.default.createElement(
          _bootstrap.BootstrapContext.Provider,
          { value: { bootstrap4: bootstrap4 } },
          _react2.default.createElement(_pagination2.default, _extends({}, rest, {
            key: 'pagination',
            dataSize: dataSize || _this.props.data.length,
            currPage: currPage,
            currSizePerPage: currSizePerPage
          }))
        );
      }
      return null;
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(PaginationDataProvider, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      _get(PaginationDataProvider.prototype.__proto__ || Object.getPrototypeOf(PaginationDataProvider.prototype), 'componentWillReceiveProps', this).call(this, nextProps);
      var currSizePerPage = this.currSizePerPage;
      var _nextProps$pagination = nextProps.pagination.options,
          custom = _nextProps$pagination.custom,
          onPageChange = _nextProps$pagination.onPageChange;


      var pageStartIndex = typeof nextProps.pagination.options.pageStartIndex !== 'undefined' ? nextProps.pagination.options.pageStartIndex : _const2.default.PAGE_START_INDEX;

      // user should align the page when the page is not fit to the data size when remote enable
      if (!this.isRemotePagination() && !custom) {
        var newPage = (0, _page.alignPage)(nextProps.data.length, this.currPage, currSizePerPage, pageStartIndex);

        if (this.currPage !== newPage) {
          if (onPageChange) {
            onPageChange(newPage, currSizePerPage);
          }
          this.currPage = newPage;
        }
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var data = this.props.data;
      var options = this.props.pagination.options;
      var currPage = this.currPage,
          currSizePerPage = this.currSizePerPage;

      var pageStartIndex = typeof options.pageStartIndex === 'undefined' ? _const2.default.PAGE_START_INDEX : options.pageStartIndex;

      data = this.isRemotePagination() ? data : (0, _page.getByCurrPage)(data, currPage, currSizePerPage, pageStartIndex);

      return _react2.default.createElement(
        PaginationDataContext.Provider,
        { value: { data: data, setRemoteEmitter: this.setRemoteEmitter } },
        this.props.children,
        this.renderDefaultPagination()
      );
    }
  }]);

  return PaginationDataProvider;
}(Provider);

PaginationDataProvider.propTypes = {
  data: _propTypes2.default.array.isRequired,
  remoteEmitter: _propTypes2.default.object.isRequired,
  isRemotePagination: _propTypes2.default.func.isRequired
};

exports.default = function () {
  return {
    Provider: PaginationDataProvider,
    Consumer: PaginationDataContext.Consumer
  };
};

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _pageResolver2 = __webpack_require__(3);

var _pageResolver3 = _interopRequireDefault(_pageResolver2);

var _paginationHandler = __webpack_require__(5);

var _paginationHandler2 = _interopRequireDefault(_paginationHandler);

var _sizePerPageDropdownAdapter = __webpack_require__(9);

var _paginationListAdapter = __webpack_require__(11);

var _paginationTotal = __webpack_require__(24);

var _paginationTotal2 = _interopRequireDefault(_paginationTotal);

var _const = __webpack_require__(2);

var _const2 = _interopRequireDefault(_const);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/require-default-props: 0 */
/* eslint arrow-body-style: 0 */


var Pagination = function (_pageResolver) {
  _inherits(Pagination, _pageResolver);

  function Pagination() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Pagination);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Pagination.__proto__ || Object.getPrototypeOf(Pagination)).call.apply(_ref, [this].concat(args))), _this), _this.defaultTotal = function (from, to, size) {
      return _react2.default.createElement(_paginationTotal2.default, {
        from: from,
        to: to,
        dataSize: size
      });
    }, _this.setTotal = function (from, to, size, total) {
      if (total && typeof total === 'function') {
        return total(from, to, size);
      }

      return _this.defaultTotal(from, to, size);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Pagination, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          showTotal = _props.showTotal,
          dataSize = _props.dataSize,
          pageListRenderer = _props.pageListRenderer,
          pageButtonRenderer = _props.pageButtonRenderer,
          paginationTotalRenderer = _props.paginationTotalRenderer,
          hidePageListOnlyOnePage = _props.hidePageListOnlyOnePage,
          totalPages = _props.totalPages,
          lastPage = _props.lastPage,
          onPageChange = _props.onPageChange,
          sizePerPageList = _props.sizePerPageList,
          currSizePerPage = _props.currSizePerPage,
          hideSizePerPage = _props.hideSizePerPage,
          sizePerPageRenderer = _props.sizePerPageRenderer,
          sizePerPageOptionRenderer = _props.sizePerPageOptionRenderer,
          onSizePerPageChange = _props.onSizePerPageChange,
          rest = _objectWithoutProperties(_props, ['showTotal', 'dataSize', 'pageListRenderer', 'pageButtonRenderer', 'paginationTotalRenderer', 'hidePageListOnlyOnePage', 'totalPages', 'lastPage', 'onPageChange', 'sizePerPageList', 'currSizePerPage', 'hideSizePerPage', 'sizePerPageRenderer', 'sizePerPageOptionRenderer', 'onSizePerPageChange']);

      var pages = this.calculatePageStatus(this.calculatePages(totalPages, lastPage), lastPage);

      var _calculateFromTo = this.calculateFromTo(),
          _calculateFromTo2 = _slicedToArray(_calculateFromTo, 2),
          from = _calculateFromTo2[0],
          to = _calculateFromTo2[1];

      var pageListClass = (0, _classnames2.default)('react-bootstrap-table-pagination-list', 'col-md-6 col-xs-6 col-sm-6 col-lg-6', {
        'react-bootstrap-table-pagination-list-hidden': hidePageListOnlyOnePage && totalPages === 1
      });
      return _react2.default.createElement(
        'div',
        { className: 'row react-bootstrap-table-pagination' },
        _react2.default.createElement(
          'div',
          { className: 'col-md-6 col-xs-6 col-sm-6 col-lg-6' },
          _react2.default.createElement(_sizePerPageDropdownAdapter.SizePerPageDropdownAdapter, {
            sizePerPageList: sizePerPageList,
            currSizePerPage: currSizePerPage,
            hideSizePerPage: hideSizePerPage,
            sizePerPageRenderer: sizePerPageRenderer,
            sizePerPageOptionRenderer: sizePerPageOptionRenderer,
            onSizePerPageChange: onSizePerPageChange
          }),
          showTotal ? this.setTotal(from, to, dataSize, paginationTotalRenderer) : null
        ),
        pageListRenderer ? pageListRenderer({
          pages: pages,
          onPageChange: onPageChange
        }) : _react2.default.createElement(
          'div',
          { className: pageListClass },
          _react2.default.createElement(_paginationListAdapter.PaginationListWithAdapter, _extends({}, rest, {
            lastPage: lastPage,
            totalPages: totalPages,
            pageButtonRenderer: pageButtonRenderer,
            onPageChange: onPageChange
          }))
        )
      );
    }
  }]);

  return Pagination;
}((0, _pageResolver3.default)(_react.Component));

Pagination.propTypes = {
  dataSize: _propTypes2.default.number.isRequired,
  sizePerPageList: _propTypes2.default.array.isRequired,
  currPage: _propTypes2.default.number.isRequired,
  currSizePerPage: _propTypes2.default.number.isRequired,
  onPageChange: _propTypes2.default.func.isRequired,
  onSizePerPageChange: _propTypes2.default.func.isRequired,
  pageStartIndex: _propTypes2.default.number,
  paginationSize: _propTypes2.default.number,
  showTotal: _propTypes2.default.bool,
  pageListRenderer: _propTypes2.default.func,
  pageButtonRenderer: _propTypes2.default.func,
  sizePerPageRenderer: _propTypes2.default.func,
  paginationTotalRenderer: _propTypes2.default.func,
  sizePerPageOptionRenderer: _propTypes2.default.func,
  firstPageText: _propTypes2.default.string,
  prePageText: _propTypes2.default.string,
  nextPageText: _propTypes2.default.string,
  lastPageText: _propTypes2.default.string,
  nextPageTitle: _propTypes2.default.string,
  prePageTitle: _propTypes2.default.string,
  firstPageTitle: _propTypes2.default.string,
  lastPageTitle: _propTypes2.default.string,
  withFirstAndLast: _propTypes2.default.bool,
  alwaysShowAllBtns: _propTypes2.default.bool,
  hideSizePerPage: _propTypes2.default.bool,
  hidePageListOnlyOnePage: _propTypes2.default.bool
};

Pagination.defaultProps = {
  pageStartIndex: _const2.default.PAGE_START_INDEX,
  paginationSize: _const2.default.PAGINATION_SIZE,
  withFirstAndLast: _const2.default.With_FIRST_AND_LAST,
  alwaysShowAllBtns: _const2.default.SHOW_ALL_PAGE_BTNS,
  showTotal: _const2.default.SHOW_TOTAL,
  pageListRenderer: null,
  pageButtonRenderer: null,
  sizePerPageRenderer: null,
  paginationTotalRenderer: _const2.default.PAGINATION_TOTAL,
  sizePerPageOptionRenderer: null,
  firstPageText: _const2.default.FIRST_PAGE_TEXT,
  prePageText: _const2.default.PRE_PAGE_TEXT,
  nextPageText: _const2.default.NEXT_PAGE_TEXT,
  lastPageText: _const2.default.LAST_PAGE_TEXT,
  sizePerPageList: _const2.default.SIZE_PER_PAGE_LIST,
  nextPageTitle: _const2.default.NEXT_PAGE_TITLE,
  prePageTitle: _const2.default.PRE_PAGE_TITLE,
  firstPageTitle: _const2.default.FIRST_PAGE_TITLE,
  lastPageTitle: _const2.default.LAST_PAGE_TITLE,
  hideSizePerPage: _const2.default.HIDE_SIZE_PER_PAGE,
  hidePageListOnlyOnePage: _const2.default.HIDE_PAGE_LIST_ONLY_ONE_PAGE
};

exports.default = (0, _paginationHandler2.default)(Pagination);

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint jsx-a11y/href-no-hash: 0 */
var SizePerPageOption = function SizePerPageOption(_ref) {
  var text = _ref.text,
      page = _ref.page,
      onSizePerPageChange = _ref.onSizePerPageChange,
      bootstrap4 = _ref.bootstrap4;
  return bootstrap4 ? _react2.default.createElement(
    'a',
    {
      href: '#',
      tabIndex: '-1',
      role: 'menuitem',
      className: 'dropdown-item',
      'data-page': page,
      onMouseDown: function onMouseDown(e) {
        e.preventDefault();
        onSizePerPageChange(page);
      }
    },
    text
  ) : _react2.default.createElement(
    'li',
    {
      key: text,
      role: 'presentation',
      className: 'dropdown-item'
    },
    _react2.default.createElement(
      'a',
      {
        href: '#',
        tabIndex: '-1',
        role: 'menuitem',
        'data-page': page,
        onMouseDown: function onMouseDown(e) {
          e.preventDefault();
          onSizePerPageChange(page);
        }
      },
      text
    )
  );
};

SizePerPageOption.propTypes = {
  text: _propTypes2.default.string.isRequired,
  page: _propTypes2.default.number.isRequired,
  onSizePerPageChange: _propTypes2.default.func.isRequired,
  bootstrap4: _propTypes2.default.bool
};

SizePerPageOption.defaultProps = {
  bootstrap4: false
};

exports.default = SizePerPageOption;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/require-default-props: 0 */
/* eslint jsx-a11y/href-no-hash: 0 */


var PageButton = function (_Component) {
  _inherits(PageButton, _Component);

  function PageButton(props) {
    _classCallCheck(this, PageButton);

    var _this = _possibleConstructorReturn(this, (PageButton.__proto__ || Object.getPrototypeOf(PageButton)).call(this, props));

    _this.handleClick = _this.handleClick.bind(_this);
    return _this;
  }

  _createClass(PageButton, [{
    key: 'handleClick',
    value: function handleClick(e) {
      e.preventDefault();
      this.props.onPageChange(this.props.page);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          page = _props.page,
          title = _props.title,
          active = _props.active,
          disabled = _props.disabled,
          className = _props.className;

      var classes = (0, _classnames2.default)({
        active: active,
        disabled: disabled,
        'page-item': true
      }, className);

      return _react2.default.createElement(
        'li',
        { className: classes, title: title },
        _react2.default.createElement(
          'a',
          { href: '#', onClick: this.handleClick, className: 'page-link' },
          page
        )
      );
    }
  }]);

  return PageButton;
}(_react.Component);

PageButton.propTypes = {
  onPageChange: _propTypes2.default.func.isRequired,
  page: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]).isRequired,
  active: _propTypes2.default.bool.isRequired,
  disabled: _propTypes2.default.bool.isRequired,
  className: _propTypes2.default.string,
  title: _propTypes2.default.string
};

exports.default = PageButton;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(1);

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PaginationTotal = function PaginationTotal(props) {
  return _react2.default.createElement(
    'span',
    { className: 'react-bootstrap-table-pagination-total' },
    '\xA0Showing rows ',
    props.from,
    ' to\xA0',
    props.to,
    ' of\xA0',
    props.dataSize
  );
};

PaginationTotal.propTypes = {
  from: _propTypes2.default.number.isRequired,
  to: _propTypes2.default.number.isRequired,
  dataSize: _propTypes2.default.number.isRequired
};

exports.default = PaginationTotal;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _paginationList = __webpack_require__(12);

var _paginationList2 = _interopRequireDefault(_paginationList);

var _standaloneAdapter = __webpack_require__(13);

var _standaloneAdapter2 = _interopRequireDefault(_standaloneAdapter);

var _paginationHandler = __webpack_require__(5);

var _paginationHandler2 = _interopRequireDefault(_paginationHandler);

var _paginationListAdapter = __webpack_require__(11);

var _paginationListAdapter2 = _interopRequireDefault(_paginationListAdapter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PaginationListStandalone = function PaginationListStandalone(props) {
  return _react2.default.createElement(_paginationList2.default, props);
};

exports.default = (0, _standaloneAdapter2.default)((0, _paginationHandler2.default)((0, _paginationListAdapter2.default)(PaginationListStandalone)));

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _sizePerPageDropdown = __webpack_require__(10);

var _sizePerPageDropdown2 = _interopRequireDefault(_sizePerPageDropdown);

var _standaloneAdapter = __webpack_require__(13);

var _standaloneAdapter2 = _interopRequireDefault(_standaloneAdapter);

var _paginationHandler = __webpack_require__(5);

var _paginationHandler2 = _interopRequireDefault(_paginationHandler);

var _sizePerPageDropdownAdapter = __webpack_require__(9);

var _sizePerPageDropdownAdapter2 = _interopRequireDefault(_sizePerPageDropdownAdapter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SizePerPageDropdownStandalone = function SizePerPageDropdownStandalone(props) {
  return _react2.default.createElement(_sizePerPageDropdown2.default, props);
};

exports.default = (0, _standaloneAdapter2.default)((0, _paginationHandler2.default)((0, _sizePerPageDropdownAdapter2.default)(SizePerPageDropdownStandalone)));

/***/ })
/******/ ]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovLy93ZWJwYWNrL2Jvb3RzdHJhcCBlNDE3MTNhZjI2OWE0YzYyMTM1NCIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzMlwiOlwicmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiYW1kXCI6XCJyZWFjdFwifSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvY29uc3QuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2UtcmVzb2x2ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24taGFuZGxlci5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvc3RhdGUtY29udGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvcGFnZS5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvYm9vdHN0cmFwLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9zaXplLXBlci1wYWdlLWRyb3Bkb3duLWFkYXB0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3NpemUtcGVyLXBhZ2UtZHJvcGRvd24uanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24tbGlzdC1hZGFwdGVyLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdpbmF0aW9uLWxpc3QuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3N0YW5kYWxvbmUtYWRhcHRlci5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2VtcHR5RnVuY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2ludmFyaWFudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2V2ZW50cy9ldmVudHMuanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL2RhdGEtY29udGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvcGFnaW5hdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvc2l6ZS1wZXItcGFnZS1vcHRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2UtYnV0dG9uLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdpbmF0aW9uLXRvdGFsLmpzIiwid2VicGFjazovLy8uL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdpbmF0aW9uLWxpc3Qtc3RhbmRhbG9uZS5qcyIsIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvc2l6ZS1wZXItcGFnZS1kcm9wZG93bi1zdGFuZGFsb25lLmpzIl0sIm5hbWVzIjpbIlBBR0lOQVRJT05fU0laRSIsIlBBR0VfU1RBUlRfSU5ERVgiLCJXaXRoX0ZJUlNUX0FORF9MQVNUIiwiU0hPV19BTExfUEFHRV9CVE5TIiwiU0hPV19UT1RBTCIsIlBBR0lOQVRJT05fVE9UQUwiLCJGSVJTVF9QQUdFX1RFWFQiLCJQUkVfUEFHRV9URVhUIiwiTkVYVF9QQUdFX1RFWFQiLCJMQVNUX1BBR0VfVEVYVCIsIk5FWFRfUEFHRV9USVRMRSIsIkxBU1RfUEFHRV9USVRMRSIsIlBSRV9QQUdFX1RJVExFIiwiRklSU1RfUEFHRV9USVRMRSIsIlNJWkVfUEVSX1BBR0VfTElTVCIsIkhJREVfU0laRV9QRVJfUEFHRSIsIkhJREVfUEFHRV9MSVNUX09OTFlfT05FX1BBR0UiLCJwcm9wcyIsImN1cnJQYWdlIiwicGFnZVN0YXJ0SW5kZXgiLCJ0b3RhbFBhZ2VzIiwiY2FsY3VsYXRlVG90YWxQYWdlIiwibGFzdFBhZ2UiLCJjYWxjdWxhdGVMYXN0UGFnZSIsInNpemVQZXJQYWdlIiwiY3VyclNpemVQZXJQYWdlIiwiZGF0YVNpemUiLCJNYXRoIiwiY2VpbCIsIm9mZnNldCIsImFicyIsImZyb20iLCJ0byIsIm1pbiIsInBhZ2luYXRpb25TaXplIiwid2l0aEZpcnN0QW5kTGFzdCIsImZpcnN0UGFnZVRleHQiLCJwcmVQYWdlVGV4dCIsIm5leHRQYWdlVGV4dCIsImxhc3RQYWdlVGV4dCIsImFsd2F5c1Nob3dBbGxCdG5zIiwicGFnZXMiLCJlbmRQYWdlIiwic3RhcnRQYWdlIiwibWF4IiwiZmxvb3IiLCJpIiwicHVzaCIsImxlbmd0aCIsImlzU3RhcnQiLCJwYWdlIiwiaXNFbmQiLCJmaWx0ZXIiLCJtYXAiLCJ0aXRsZSIsImFjdGl2ZSIsImRpc2FibGVkIiwibmV4dFBhZ2VUaXRsZSIsInByZVBhZ2VUaXRsZSIsImZpcnN0UGFnZVRpdGxlIiwibGFzdFBhZ2VUaXRsZSIsInNpemVQZXJQYWdlTGlzdCIsIl9zaXplUGVyUGFnZSIsInBhZ2VUZXh0IiwidGV4dCIsInBhZ2VOdW1iZXIiLCJ2YWx1ZSIsIkV4dGVuZEJhc2UiLCJoYW5kbGVDaGFuZ2VQYWdlIiwiYmluZCIsImhhbmRsZUNoYW5nZVNpemVQZXJQYWdlIiwic3RhdGUiLCJpbml0aWFsU3RhdGUiLCJuZXh0UHJvcHMiLCJzZXRTdGF0ZSIsIm9uU2l6ZVBlclBhZ2VDaGFuZ2UiLCJzZWxlY3RlZFNpemUiLCJwYXJzZUludCIsIm5ld1RvdGFsUGFnZXMiLCJuZXdMYXN0UGFnZSIsIm5ld1BhZ2UiLCJvblBhZ2VDaGFuZ2UiLCJiYWNrVG9QcmV2UGFnZSIsIlN0YXRlQ29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJTdGF0ZVByb3ZpZGVyIiwiaGFuZGxlRGF0YVNpemVDaGFuZ2UiLCJvcHRpb25zIiwicGFnaW5hdGlvbiIsInRvdGFsU2l6ZSIsImRhdGFDaGFuZ2VMaXN0ZW5lciIsIm9uIiwiY3VzdG9tIiwiaXNSZW1vdGVQYWdpbmF0aW9uIiwibmV3RGF0YVNpemUiLCJmb3JjZVVwZGF0ZSIsImdldFBhZ2luYXRpb25SZW1vdGVFbWl0dGVyIiwiZW1pdCIsInBhZ2luYXRpb25Qcm9wcyIsImdldFBhZ2luYXRpb25Qcm9wcyIsInBhZ2luYXRpb25UYWJsZVByb3BzIiwic2V0UGFnaW5hdGlvblJlbW90ZUVtaXR0ZXIiLCJjaGlsZHJlbiIsIkNvbXBvbmVudCIsImJvb3RzdHJhcDQiLCJoaWRlU2l6ZVBlclBhZ2UiLCJoaWRlUGFnZUxpc3RPbmx5T25lUGFnZSIsInNob3dUb3RhbCIsInBhZ2VMaXN0UmVuZGVyZXIiLCJwYWdlQnV0dG9uUmVuZGVyZXIiLCJzaXplUGVyUGFnZVJlbmRlcmVyIiwicGFnaW5hdGlvblRvdGFsUmVuZGVyZXIiLCJzaXplUGVyUGFnZU9wdGlvblJlbmRlcmVyIiwicmVtb3RlRW1pdHRlciIsImUiLCJyZXN1bHQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiZ2V0Tm9ybWFsaXplZFBhZ2UiLCJlbmRJbmRleCIsInN0YXJ0SW5kZXgiLCJlbmQiLCJhbGlnblBhZ2UiLCJnZXRCeUN1cnJQYWdlIiwiZGF0YSIsInN0YXJ0IiwiQm9vdHN0cmFwQ29udGV4dCIsInNpemVQZXJQYWdlRHJvcGRvd25BZGFwdGVyIiwiY2xvc2VEcm9wRG93biIsInRvZ2dsZURyb3BEb3duIiwiZHJvcGRvd25PcGVuIiwib3BlbiIsImNhbGN1bGF0ZVNpemVQZXJQYWdlU3RhdHVzIiwiU2l6ZVBlclBhZ2VEcm9wZG93bkFkYXB0ZXIiLCJzaXplUGVyUGFnZURlZmF1bHRDbGFzcyIsIlNpemVQZXJQYWdlRHJvcERvd24iLCJoaWRkZW4iLCJvbkNsaWNrIiwib25CbHVyIiwiY2xhc3NOYW1lIiwidmFyaWF0aW9uIiwiYnRuQ29udGV4dHVhbCIsIm9wdGlvblJlbmRlcmVyIiwiZHJvcERvd25TdHlsZSIsInZpc2liaWxpdHkiLCJvcGVuQ2xhc3MiLCJkcm9wZG93bkNsYXNzZXMiLCJvcHRpb24iLCJwcm9wVHlwZXMiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwiYXJyYXkiLCJmdW5jIiwiYm9vbCIsIm9uZU9mIiwiZGVmYXVsdFByb3BzIiwicGFnaW5hdGlvbkxpc3RBZGFwdGVyIiwiY2FsY3VsYXRlUGFnZVN0YXR1cyIsImNhbGN1bGF0ZVBhZ2VzIiwiUGFnaW5hdGlvbkxpc3RXaXRoQWRhcHRlciIsIlBhZ2luYXRvbkxpc3QiLCJwYWdlUHJvcHMiLCJhcnJheU9mIiwic2hhcGUiLCJvbmVPZlR5cGUiLCJudW1iZXIiLCJkaXNhYmxlIiwicmVzdCIsIkN1c3RvbWl6YWJsZVByb3ZpZGVyIiwiUGFnaW5hdGlvblByb3ZpZGVyIiwiUGFnaW5hdGlvbkxpc3RTdGFuZGFsb25lIiwiU2l6ZVBlclBhZ2VEcm9wZG93blN0YW5kYWxvbmUiLCJQYWdpbmF0aW9uRGF0YUNvbnRleHQiLCJQYWdpbmF0aW9uRGF0YVByb3ZpZGVyIiwicmVuZGVyRGVmYXVsdFBhZ2luYXRpb24iLCJzZXRSZW1vdGVFbWl0dGVyIiwib2JqZWN0IiwiUGFnaW5hdGlvbiIsImRlZmF1bHRUb3RhbCIsInNpemUiLCJzZXRUb3RhbCIsInRvdGFsIiwiY2FsY3VsYXRlRnJvbVRvIiwicGFnZUxpc3RDbGFzcyIsIlNpemVQZXJQYWdlT3B0aW9uIiwicHJldmVudERlZmF1bHQiLCJQYWdlQnV0dG9uIiwiaGFuZGxlQ2xpY2siLCJjbGFzc2VzIiwiUGFnaW5hdGlvblRvdGFsIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsTztBQ1ZBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBMkIsMEJBQTBCLEVBQUU7QUFDdkQseUNBQWlDLGVBQWU7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOERBQXNELCtEQUErRDs7QUFFckg7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7O0FDN0RBLCtDOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNB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YyxJQUQ3QjtBQUFBO0FBQzhDZCxVQUFNZSxFQURwRDtBQUFBO0FBQ21FZixVQUFNUztBQUR6RSxHQURzQjtBQUFBLENBQXhCOztBQU1BbUssZ0JBQWdCekMsU0FBaEIsR0FBNEI7QUFDMUJySCxRQUFNLG9CQUFVc0ksTUFBVixDQUFpQmYsVUFERztBQUUxQnRILE1BQUksb0JBQVVxSSxNQUFWLENBQWlCZixVQUZLO0FBRzFCNUgsWUFBVSxvQkFBVTJJLE1BQVYsQ0FBaUJmO0FBSEQsQ0FBNUI7O2tCQU1ldUMsZTs7Ozs7Ozs7Ozs7OztBQ2ZmOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBLElBQU1uQiwyQkFBMkIsU0FBM0JBLHdCQUEyQjtBQUFBLFNBQy9CLHdEQUFxQnpKLEtBQXJCLENBRCtCO0FBQUEsQ0FBakM7O2tCQUtBLGlDQUFrQixpQ0FBa0IscUNBQXNCeUosd0JBQXRCLENBQWxCLENBQWxCLEM7Ozs7Ozs7Ozs7Ozs7QUNYQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQSxJQUFNQyxnQ0FBZ0MsU0FBaENBLDZCQUFnQztBQUFBLFNBQ3BDLDZEQUEwQjFKLEtBQTFCLENBRG9DO0FBQUEsQ0FBdEM7O2tCQUtBLGlDQUFrQixpQ0FBa0IsMENBQTJCMEosNkJBQTNCLENBQWxCLENBQWxCLEMiLCJmaWxlIjoicmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3IvZGlzdC9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkocmVxdWlyZShcInJlYWN0XCIpKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtcInJlYWN0XCJdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcIlJlYWN0Qm9vdHN0cmFwVGFibGUyUGFnaW5hdG9yXCJdID0gZmFjdG9yeShyZXF1aXJlKFwicmVhY3RcIikpO1xuXHRlbHNlXG5cdFx0cm9vdFtcIlJlYWN0Qm9vdHN0cmFwVGFibGUyUGFnaW5hdG9yXCJdID0gZmFjdG9yeShyb290W1wiUmVhY3RcIl0pO1xufSkodGhpcywgZnVuY3Rpb24oX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8wX18pIHtcbnJldHVybiBcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZ2V0dGVyXG4gXHRcdFx0fSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTQpO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHdlYnBhY2svYm9vdHN0cmFwIGU0MTcxM2FmMjY5YTRjNjIxMzU0IiwibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzBfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCB7XCJyb290XCI6XCJSZWFjdFwiLFwiY29tbW9uanMyXCI6XCJyZWFjdFwiLFwiY29tbW9uanNcIjpcInJlYWN0XCIsXCJhbWRcIjpcInJlYWN0XCJ9XG4vLyBtb2R1bGUgaWQgPSAwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9ICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmXG4gICAgU3ltYm9sLmZvciAmJlxuICAgIFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSkgfHxcbiAgICAweGVhYzc7XG5cbiAgdmFyIGlzVmFsaWRFbGVtZW50ID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmXG4gICAgICBvYmplY3QgIT09IG51bGwgJiZcbiAgICAgIG9iamVjdC4kJHR5cGVvZiA9PT0gUkVBQ1RfRUxFTUVOVF9UWVBFO1xuICB9O1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCJleHBvcnQgZGVmYXVsdCB7XG4gIFBBR0lOQVRJT05fU0laRTogNSxcbiAgUEFHRV9TVEFSVF9JTkRFWDogMSxcbiAgV2l0aF9GSVJTVF9BTkRfTEFTVDogdHJ1ZSxcbiAgU0hPV19BTExfUEFHRV9CVE5TOiBmYWxzZSxcbiAgU0hPV19UT1RBTDogZmFsc2UsXG4gIFBBR0lOQVRJT05fVE9UQUw6IG51bGwsXG4gIEZJUlNUX1BBR0VfVEVYVDogJzw8JyxcbiAgUFJFX1BBR0VfVEVYVDogJzwnLFxuICBORVhUX1BBR0VfVEVYVDogJz4nLFxuICBMQVNUX1BBR0VfVEVYVDogJz4+JyxcbiAgTkVYVF9QQUdFX1RJVExFOiAnbmV4dCBwYWdlJyxcbiAgTEFTVF9QQUdFX1RJVExFOiAnbGFzdCBwYWdlJyxcbiAgUFJFX1BBR0VfVElUTEU6ICdwcmV2aW91cyBwYWdlJyxcbiAgRklSU1RfUEFHRV9USVRMRTogJ2ZpcnN0IHBhZ2UnLFxuICBTSVpFX1BFUl9QQUdFX0xJU1Q6IFsxMCwgMjUsIDMwLCA1MF0sXG4gIEhJREVfU0laRV9QRVJfUEFHRTogZmFsc2UsXG4gIEhJREVfUEFHRV9MSVNUX09OTFlfT05FX1BBR0U6IGZhbHNlXG59O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL2NvbnN0LmpzIiwiLyogZXNsaW50IG5vLW1peGVkLW9wZXJhdG9yczogMCAqL1xuaW1wb3J0IENvbnN0IGZyb20gJy4vY29uc3QnO1xuXG5leHBvcnQgZGVmYXVsdCBFeHRlbmRCYXNlID0+XG4gIGNsYXNzIFBhZ2VSZXNvbHZlciBleHRlbmRzIEV4dGVuZEJhc2Uge1xuICAgIGJhY2tUb1ByZXZQYWdlKCkge1xuICAgICAgY29uc3QgeyBjdXJyUGFnZSwgcGFnZVN0YXJ0SW5kZXggfSA9IHRoaXMucHJvcHM7XG4gICAgICByZXR1cm4gKGN1cnJQYWdlIC0gMSkgPCBwYWdlU3RhcnRJbmRleCA/IHBhZ2VTdGFydEluZGV4IDogY3VyclBhZ2UgLSAxO1xuICAgIH1cblxuICAgIGluaXRpYWxTdGF0ZSgpIHtcbiAgICAgIGNvbnN0IHRvdGFsUGFnZXMgPSB0aGlzLmNhbGN1bGF0ZVRvdGFsUGFnZSgpO1xuICAgICAgY29uc3QgbGFzdFBhZ2UgPSB0aGlzLmNhbGN1bGF0ZUxhc3RQYWdlKHRvdGFsUGFnZXMpO1xuICAgICAgcmV0dXJuIHsgdG90YWxQYWdlcywgbGFzdFBhZ2UgfTtcbiAgICB9XG5cbiAgICBjYWxjdWxhdGVUb3RhbFBhZ2Uoc2l6ZVBlclBhZ2UgPSB0aGlzLnByb3BzLmN1cnJTaXplUGVyUGFnZSwgZGF0YVNpemUgPSB0aGlzLnByb3BzLmRhdGFTaXplKSB7XG4gICAgICByZXR1cm4gTWF0aC5jZWlsKGRhdGFTaXplIC8gc2l6ZVBlclBhZ2UpO1xuICAgIH1cblxuICAgIGNhbGN1bGF0ZUxhc3RQYWdlKHRvdGFsUGFnZXMpIHtcbiAgICAgIGNvbnN0IHsgcGFnZVN0YXJ0SW5kZXggfSA9IHRoaXMucHJvcHM7XG4gICAgICByZXR1cm4gcGFnZVN0YXJ0SW5kZXggKyB0b3RhbFBhZ2VzIC0gMTtcbiAgICB9XG5cbiAgICBjYWxjdWxhdGVGcm9tVG8oKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGRhdGFTaXplLFxuICAgICAgICBjdXJyUGFnZSxcbiAgICAgICAgY3VyclNpemVQZXJQYWdlLFxuICAgICAgICBwYWdlU3RhcnRJbmRleFxuICAgICAgfSA9IHRoaXMucHJvcHM7XG4gICAgICBjb25zdCBvZmZzZXQgPSBNYXRoLmFicyhDb25zdC5QQUdFX1NUQVJUX0lOREVYIC0gcGFnZVN0YXJ0SW5kZXgpO1xuXG4gICAgICBsZXQgZnJvbSA9ICgoY3VyclBhZ2UgLSBwYWdlU3RhcnRJbmRleCkgKiBjdXJyU2l6ZVBlclBhZ2UpO1xuICAgICAgZnJvbSA9IGRhdGFTaXplID09PSAwID8gMCA6IGZyb20gKyAxO1xuICAgICAgbGV0IHRvID0gTWF0aC5taW4oY3VyclNpemVQZXJQYWdlICogKGN1cnJQYWdlICsgb2Zmc2V0KSwgZGF0YVNpemUpO1xuICAgICAgaWYgKHRvID4gZGF0YVNpemUpIHRvID0gZGF0YVNpemU7XG5cbiAgICAgIHJldHVybiBbZnJvbSwgdG9dO1xuICAgIH1cblxuICAgIGNhbGN1bGF0ZVBhZ2VzKFxuICAgICAgdG90YWxQYWdlcyxcbiAgICAgIGxhc3RQYWdlXG4gICAgKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGN1cnJQYWdlLFxuICAgICAgICBwYWdpbmF0aW9uU2l6ZSxcbiAgICAgICAgcGFnZVN0YXJ0SW5kZXgsXG4gICAgICAgIHdpdGhGaXJzdEFuZExhc3QsXG4gICAgICAgIGZpcnN0UGFnZVRleHQsXG4gICAgICAgIHByZVBhZ2VUZXh0LFxuICAgICAgICBuZXh0UGFnZVRleHQsXG4gICAgICAgIGxhc3RQYWdlVGV4dCxcbiAgICAgICAgYWx3YXlzU2hvd0FsbEJ0bnNcbiAgICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgICBsZXQgcGFnZXM7XG4gICAgICBsZXQgZW5kUGFnZSA9IHRvdGFsUGFnZXM7XG4gICAgICBpZiAoZW5kUGFnZSA8PSAwKSByZXR1cm4gW107XG5cbiAgICAgIGxldCBzdGFydFBhZ2UgPSBNYXRoLm1heChjdXJyUGFnZSAtIE1hdGguZmxvb3IocGFnaW5hdGlvblNpemUgLyAyKSwgcGFnZVN0YXJ0SW5kZXgpO1xuICAgICAgZW5kUGFnZSA9IHN0YXJ0UGFnZSArIHBhZ2luYXRpb25TaXplIC0gMTtcblxuICAgICAgaWYgKGVuZFBhZ2UgPiBsYXN0UGFnZSkge1xuICAgICAgICBlbmRQYWdlID0gbGFzdFBhZ2U7XG4gICAgICAgIHN0YXJ0UGFnZSA9IGVuZFBhZ2UgLSBwYWdpbmF0aW9uU2l6ZSArIDE7XG4gICAgICB9XG5cbiAgICAgIGlmIChzdGFydFBhZ2UgIT09IHBhZ2VTdGFydEluZGV4ICYmIHRvdGFsUGFnZXMgPiBwYWdpbmF0aW9uU2l6ZSAmJiB3aXRoRmlyc3RBbmRMYXN0KSB7XG4gICAgICAgIHBhZ2VzID0gW2ZpcnN0UGFnZVRleHQsIHByZVBhZ2VUZXh0XTtcbiAgICAgIH0gZWxzZSBpZiAodG90YWxQYWdlcyA+IDEgfHwgYWx3YXlzU2hvd0FsbEJ0bnMpIHtcbiAgICAgICAgcGFnZXMgPSBbcHJlUGFnZVRleHRdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFnZXMgPSBbXTtcbiAgICAgIH1cblxuICAgICAgZm9yIChsZXQgaSA9IHN0YXJ0UGFnZTsgaSA8PSBlbmRQYWdlOyBpICs9IDEpIHtcbiAgICAgICAgaWYgKGkgPj0gcGFnZVN0YXJ0SW5kZXgpIHBhZ2VzLnB1c2goaSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChlbmRQYWdlIDw9IGxhc3RQYWdlICYmIHBhZ2VzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgcGFnZXMucHVzaChuZXh0UGFnZVRleHQpO1xuICAgICAgfVxuICAgICAgaWYgKGVuZFBhZ2UgIT09IGxhc3RQYWdlICYmIHdpdGhGaXJzdEFuZExhc3QpIHtcbiAgICAgICAgcGFnZXMucHVzaChsYXN0UGFnZVRleHQpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHBhZ2VzO1xuICAgIH1cblxuICAgIGNhbGN1bGF0ZVBhZ2VTdGF0dXMocGFnZXMgPSBbXSwgbGFzdFBhZ2UpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY3VyclBhZ2UsXG4gICAgICAgIHBhZ2VTdGFydEluZGV4LFxuICAgICAgICBmaXJzdFBhZ2VUZXh0LFxuICAgICAgICBwcmVQYWdlVGV4dCxcbiAgICAgICAgbmV4dFBhZ2VUZXh0LFxuICAgICAgICBsYXN0UGFnZVRleHQsXG4gICAgICAgIGFsd2F5c1Nob3dBbGxCdG5zXG4gICAgICB9ID0gdGhpcy5wcm9wcztcbiAgICAgIGNvbnN0IGlzU3RhcnQgPSBwYWdlID0+XG4gICAgICAgIChjdXJyUGFnZSA9PT0gcGFnZVN0YXJ0SW5kZXggJiYgKHBhZ2UgPT09IGZpcnN0UGFnZVRleHQgfHwgcGFnZSA9PT0gcHJlUGFnZVRleHQpKTtcbiAgICAgIGNvbnN0IGlzRW5kID0gcGFnZSA9PlxuICAgICAgICAoY3VyclBhZ2UgPT09IGxhc3RQYWdlICYmIChwYWdlID09PSBuZXh0UGFnZVRleHQgfHwgcGFnZSA9PT0gbGFzdFBhZ2VUZXh0KSk7XG5cbiAgICAgIHJldHVybiBwYWdlc1xuICAgICAgICAuZmlsdGVyKChwYWdlKSA9PiB7XG4gICAgICAgICAgaWYgKGFsd2F5c1Nob3dBbGxCdG5zKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuICEoaXNTdGFydChwYWdlKSB8fCBpc0VuZChwYWdlKSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5tYXAoKHBhZ2UpID0+IHtcbiAgICAgICAgICBsZXQgdGl0bGU7XG4gICAgICAgICAgY29uc3QgYWN0aXZlID0gcGFnZSA9PT0gY3VyclBhZ2U7XG4gICAgICAgICAgY29uc3QgZGlzYWJsZWQgPSAoaXNTdGFydChwYWdlKSB8fCBpc0VuZChwYWdlKSk7XG5cbiAgICAgICAgICBpZiAocGFnZSA9PT0gbmV4dFBhZ2VUZXh0KSB7XG4gICAgICAgICAgICB0aXRsZSA9IHRoaXMucHJvcHMubmV4dFBhZ2VUaXRsZTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHBhZ2UgPT09IHByZVBhZ2VUZXh0KSB7XG4gICAgICAgICAgICB0aXRsZSA9IHRoaXMucHJvcHMucHJlUGFnZVRpdGxlO1xuICAgICAgICAgIH0gZWxzZSBpZiAocGFnZSA9PT0gZmlyc3RQYWdlVGV4dCkge1xuICAgICAgICAgICAgdGl0bGUgPSB0aGlzLnByb3BzLmZpcnN0UGFnZVRpdGxlO1xuICAgICAgICAgIH0gZWxzZSBpZiAocGFnZSA9PT0gbGFzdFBhZ2VUZXh0KSB7XG4gICAgICAgICAgICB0aXRsZSA9IHRoaXMucHJvcHMubGFzdFBhZ2VUaXRsZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGl0bGUgPSBgJHtwYWdlfWA7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHsgcGFnZSwgYWN0aXZlLCBkaXNhYmxlZCwgdGl0bGUgfTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgY2FsY3VsYXRlU2l6ZVBlclBhZ2VTdGF0dXMoKSB7XG4gICAgICBjb25zdCB7IHNpemVQZXJQYWdlTGlzdCB9ID0gdGhpcy5wcm9wcztcbiAgICAgIHJldHVybiBzaXplUGVyUGFnZUxpc3QubWFwKChfc2l6ZVBlclBhZ2UpID0+IHtcbiAgICAgICAgY29uc3QgcGFnZVRleHQgPSB0eXBlb2YgX3NpemVQZXJQYWdlLnRleHQgIT09ICd1bmRlZmluZWQnID8gX3NpemVQZXJQYWdlLnRleHQgOiBfc2l6ZVBlclBhZ2U7XG4gICAgICAgIGNvbnN0IHBhZ2VOdW1iZXIgPSB0eXBlb2YgX3NpemVQZXJQYWdlLnZhbHVlICE9PSAndW5kZWZpbmVkJyA/IF9zaXplUGVyUGFnZS52YWx1ZSA6IF9zaXplUGVyUGFnZTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB0ZXh0OiBgJHtwYWdlVGV4dH1gLFxuICAgICAgICAgIHBhZ2U6IHBhZ2VOdW1iZXJcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcblxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2UtcmVzb2x2ZXIuanMiLCIvKiFcbiAgQ29weXJpZ2h0IChjKSAyMDE2IEplZCBXYXRzb24uXG4gIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoTUlUKSwgc2VlXG4gIGh0dHA6Ly9qZWR3YXRzb24uZ2l0aHViLmlvL2NsYXNzbmFtZXNcbiovXG4vKiBnbG9iYWwgZGVmaW5lICovXG5cbihmdW5jdGlvbiAoKSB7XG5cdCd1c2Ugc3RyaWN0JztcblxuXHR2YXIgaGFzT3duID0ge30uaGFzT3duUHJvcGVydHk7XG5cblx0ZnVuY3Rpb24gY2xhc3NOYW1lcyAoKSB7XG5cdFx0dmFyIGNsYXNzZXMgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgYXJnID0gYXJndW1lbnRzW2ldO1xuXHRcdFx0aWYgKCFhcmcpIGNvbnRpbnVlO1xuXG5cdFx0XHR2YXIgYXJnVHlwZSA9IHR5cGVvZiBhcmc7XG5cblx0XHRcdGlmIChhcmdUeXBlID09PSAnc3RyaW5nJyB8fCBhcmdUeXBlID09PSAnbnVtYmVyJykge1xuXHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnKTtcblx0XHRcdH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShhcmcpKSB7XG5cdFx0XHRcdGNsYXNzZXMucHVzaChjbGFzc05hbWVzLmFwcGx5KG51bGwsIGFyZykpO1xuXHRcdFx0fSBlbHNlIGlmIChhcmdUeXBlID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRmb3IgKHZhciBrZXkgaW4gYXJnKSB7XG5cdFx0XHRcdFx0aWYgKGhhc093bi5jYWxsKGFyZywga2V5KSAmJiBhcmdba2V5XSkge1xuXHRcdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGtleSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXMuam9pbignICcpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBjbGFzc05hbWVzO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT09ICdvYmplY3QnICYmIGRlZmluZS5hbWQpIHtcblx0XHQvLyByZWdpc3RlciBhcyAnY2xhc3NuYW1lcycsIGNvbnNpc3RlbnQgd2l0aCBucG0gcGFja2FnZSBuYW1lXG5cdFx0ZGVmaW5lKCdjbGFzc25hbWVzJywgW10sIGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBjbGFzc05hbWVzO1xuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5jbGFzc05hbWVzID0gY2xhc3NOYW1lcztcblx0fVxufSgpKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIvKiBlc2xpbnQgcmVhY3QvcHJvcC10eXBlczogMCAqL1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHBhZ2VSZXNvbHZlciBmcm9tICcuL3BhZ2UtcmVzb2x2ZXInO1xuXG5leHBvcnQgZGVmYXVsdCBXcmFwcGVkQ29tcG9uZW50ID0+XG4gIGNsYXNzIFBhZ2luYXRpb25IYW5kbGVyIGV4dGVuZHMgcGFnZVJlc29sdmVyKENvbXBvbmVudCkge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICBzdXBlcihwcm9wcyk7XG4gICAgICB0aGlzLmhhbmRsZUNoYW5nZVBhZ2UgPSB0aGlzLmhhbmRsZUNoYW5nZVBhZ2UuYmluZCh0aGlzKTtcbiAgICAgIHRoaXMuaGFuZGxlQ2hhbmdlU2l6ZVBlclBhZ2UgPSB0aGlzLmhhbmRsZUNoYW5nZVNpemVQZXJQYWdlLmJpbmQodGhpcyk7XG4gICAgICB0aGlzLnN0YXRlID0gdGhpcy5pbml0aWFsU3RhdGUoKTtcbiAgICB9XG5cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgY29uc3QgeyBkYXRhU2l6ZSwgY3VyclNpemVQZXJQYWdlIH0gPSBuZXh0UHJvcHM7XG4gICAgICBpZiAoY3VyclNpemVQZXJQYWdlICE9PSB0aGlzLnByb3BzLmN1cnJTaXplUGVyUGFnZSB8fCBkYXRhU2l6ZSAhPT0gdGhpcy5wcm9wcy5kYXRhU2l6ZSkge1xuICAgICAgICBjb25zdCB0b3RhbFBhZ2VzID0gdGhpcy5jYWxjdWxhdGVUb3RhbFBhZ2UoY3VyclNpemVQZXJQYWdlLCBkYXRhU2l6ZSk7XG4gICAgICAgIGNvbnN0IGxhc3RQYWdlID0gdGhpcy5jYWxjdWxhdGVMYXN0UGFnZSh0b3RhbFBhZ2VzKTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IHRvdGFsUGFnZXMsIGxhc3RQYWdlIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGhhbmRsZUNoYW5nZVNpemVQZXJQYWdlKHNpemVQZXJQYWdlKSB7XG4gICAgICBjb25zdCB7IGN1cnJTaXplUGVyUGFnZSwgb25TaXplUGVyUGFnZUNoYW5nZSB9ID0gdGhpcy5wcm9wcztcbiAgICAgIGNvbnN0IHNlbGVjdGVkU2l6ZSA9IHR5cGVvZiBzaXplUGVyUGFnZSA9PT0gJ3N0cmluZycgPyBwYXJzZUludChzaXplUGVyUGFnZSwgMTApIDogc2l6ZVBlclBhZ2U7XG4gICAgICBsZXQgeyBjdXJyUGFnZSB9ID0gdGhpcy5wcm9wcztcbiAgICAgIGlmIChzZWxlY3RlZFNpemUgIT09IGN1cnJTaXplUGVyUGFnZSkge1xuICAgICAgICBjb25zdCBuZXdUb3RhbFBhZ2VzID0gdGhpcy5jYWxjdWxhdGVUb3RhbFBhZ2Uoc2VsZWN0ZWRTaXplKTtcbiAgICAgICAgY29uc3QgbmV3TGFzdFBhZ2UgPSB0aGlzLmNhbGN1bGF0ZUxhc3RQYWdlKG5ld1RvdGFsUGFnZXMpO1xuICAgICAgICBpZiAoY3VyclBhZ2UgPiBuZXdMYXN0UGFnZSkgY3VyclBhZ2UgPSBuZXdMYXN0UGFnZTtcbiAgICAgICAgb25TaXplUGVyUGFnZUNoYW5nZShzZWxlY3RlZFNpemUsIGN1cnJQYWdlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBoYW5kbGVDaGFuZ2VQYWdlKG5ld1BhZ2UpIHtcbiAgICAgIGxldCBwYWdlO1xuICAgICAgY29uc3Qge1xuICAgICAgICBjdXJyUGFnZSxcbiAgICAgICAgcGFnZVN0YXJ0SW5kZXgsXG4gICAgICAgIHByZVBhZ2VUZXh0LFxuICAgICAgICBuZXh0UGFnZVRleHQsXG4gICAgICAgIGxhc3RQYWdlVGV4dCxcbiAgICAgICAgZmlyc3RQYWdlVGV4dCxcbiAgICAgICAgb25QYWdlQ2hhbmdlXG4gICAgICB9ID0gdGhpcy5wcm9wcztcbiAgICAgIGNvbnN0IHsgbGFzdFBhZ2UgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICAgIGlmIChuZXdQYWdlID09PSBwcmVQYWdlVGV4dCkge1xuICAgICAgICBwYWdlID0gdGhpcy5iYWNrVG9QcmV2UGFnZSgpO1xuICAgICAgfSBlbHNlIGlmIChuZXdQYWdlID09PSBuZXh0UGFnZVRleHQpIHtcbiAgICAgICAgcGFnZSA9IChjdXJyUGFnZSArIDEpID4gbGFzdFBhZ2UgPyBsYXN0UGFnZSA6IGN1cnJQYWdlICsgMTtcbiAgICAgIH0gZWxzZSBpZiAobmV3UGFnZSA9PT0gbGFzdFBhZ2VUZXh0KSB7XG4gICAgICAgIHBhZ2UgPSBsYXN0UGFnZTtcbiAgICAgIH0gZWxzZSBpZiAobmV3UGFnZSA9PT0gZmlyc3RQYWdlVGV4dCkge1xuICAgICAgICBwYWdlID0gcGFnZVN0YXJ0SW5kZXg7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYWdlID0gcGFyc2VJbnQobmV3UGFnZSwgMTApO1xuICAgICAgfVxuICAgICAgaWYgKHBhZ2UgIT09IGN1cnJQYWdlKSB7XG4gICAgICAgIG9uUGFnZUNoYW5nZShwYWdlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8V3JhcHBlZENvbXBvbmVudFxuICAgICAgICAgIHsgLi4udGhpcy5wcm9wcyB9XG4gICAgICAgICAgbGFzdFBhZ2U9eyB0aGlzLnN0YXRlLmxhc3RQYWdlIH1cbiAgICAgICAgICB0b3RhbFBhZ2VzPXsgdGhpcy5zdGF0ZS50b3RhbFBhZ2VzIH1cbiAgICAgICAgICBvblBhZ2VDaGFuZ2U9eyB0aGlzLmhhbmRsZUNoYW5nZVBhZ2UgfVxuICAgICAgICAgIG9uU2l6ZVBlclBhZ2VDaGFuZ2U9eyB0aGlzLmhhbmRsZUNoYW5nZVNpemVQZXJQYWdlIH1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgfVxuICB9O1xuXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvcGFnaW5hdGlvbi1oYW5kbGVyLmpzIiwiLyogZXNsaW50IHJlYWN0L3Byb3AtdHlwZXM6IDAgKi9cbi8qIGVzbGludCByZWFjdC9yZXF1aXJlLWRlZmF1bHQtcHJvcHM6IDAgKi9cbi8qIGVzbGludCBuby1sb25lbHktaWY6IDAgKi9cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgRXZlbnRFbWl0dGVyIGZyb20gJ2V2ZW50cyc7XG5pbXBvcnQgQ29uc3QgZnJvbSAnLi9jb25zdCc7XG5pbXBvcnQgeyBhbGlnblBhZ2UgfSBmcm9tICcuL3BhZ2UnO1xuXG5jb25zdCBTdGF0ZUNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XG5cbmNsYXNzIFN0YXRlUHJvdmlkZXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLmhhbmRsZUNoYW5nZVBhZ2UgPSB0aGlzLmhhbmRsZUNoYW5nZVBhZ2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLmhhbmRsZURhdGFTaXplQ2hhbmdlID0gdGhpcy5oYW5kbGVEYXRhU2l6ZUNoYW5nZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlQ2hhbmdlU2l6ZVBlclBhZ2UgPSB0aGlzLmhhbmRsZUNoYW5nZVNpemVQZXJQYWdlLmJpbmQodGhpcyk7XG5cbiAgICBsZXQgY3VyclBhZ2U7XG4gICAgbGV0IGN1cnJTaXplUGVyUGFnZTtcbiAgICBjb25zdCB7IG9wdGlvbnMgfSA9IHByb3BzLnBhZ2luYXRpb247XG4gICAgY29uc3Qgc2l6ZVBlclBhZ2VMaXN0ID0gb3B0aW9ucy5zaXplUGVyUGFnZUxpc3QgfHwgQ29uc3QuU0laRV9QRVJfUEFHRV9MSVNUO1xuXG4gICAgLy8gaW5pdGlhbGl6ZSBjdXJyZW50IHBhZ2VcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMucGFnZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGN1cnJQYWdlID0gb3B0aW9ucy5wYWdlO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMucGFnZVN0YXJ0SW5kZXggIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjdXJyUGFnZSA9IG9wdGlvbnMucGFnZVN0YXJ0SW5kZXg7XG4gICAgfSBlbHNlIHtcbiAgICAgIGN1cnJQYWdlID0gQ29uc3QuUEFHRV9TVEFSVF9JTkRFWDtcbiAgICB9XG5cbiAgICAvLyBpbml0aWFsaXplIGN1cnJlbnQgc2l6ZVBlclBhZ2VcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMuc2l6ZVBlclBhZ2UgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjdXJyU2l6ZVBlclBhZ2UgPSBvcHRpb25zLnNpemVQZXJQYWdlO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIHNpemVQZXJQYWdlTGlzdFswXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGN1cnJTaXplUGVyUGFnZSA9IHNpemVQZXJQYWdlTGlzdFswXS52YWx1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgY3VyclNpemVQZXJQYWdlID0gc2l6ZVBlclBhZ2VMaXN0WzBdO1xuICAgIH1cblxuICAgIHRoaXMuY3VyclBhZ2UgPSBjdXJyUGFnZTtcbiAgICB0aGlzLmRhdGFTaXplID0gb3B0aW9ucy50b3RhbFNpemU7XG4gICAgdGhpcy5jdXJyU2l6ZVBlclBhZ2UgPSBjdXJyU2l6ZVBlclBhZ2U7XG4gICAgdGhpcy5kYXRhQ2hhbmdlTGlzdGVuZXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgdGhpcy5kYXRhQ2hhbmdlTGlzdGVuZXIub24oJ2ZpbHRlckNoYW5nZWQnLCB0aGlzLmhhbmRsZURhdGFTaXplQ2hhbmdlKTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgY29uc3QgeyBjdXN0b20gfSA9IG5leHRQcm9wcy5wYWdpbmF0aW9uLm9wdGlvbnM7XG5cbiAgICAvLyB1c2VyIHNob3VsZCBhbGlnbiB0aGUgcGFnZSB3aGVuIHRoZSBwYWdlIGlzIG5vdCBmaXQgdG8gdGhlIGRhdGEgc2l6ZSB3aGVuIHJlbW90ZSBlbmFibGVcbiAgICBpZiAodGhpcy5pc1JlbW90ZVBhZ2luYXRpb24oKSB8fCBjdXN0b20pIHtcbiAgICAgIHRoaXMuY3VyclBhZ2UgPSBuZXh0UHJvcHMucGFnaW5hdGlvbi5vcHRpb25zLnBhZ2U7XG4gICAgICB0aGlzLmN1cnJTaXplUGVyUGFnZSA9IG5leHRQcm9wcy5wYWdpbmF0aW9uLm9wdGlvbnMuc2l6ZVBlclBhZ2U7XG4gICAgICB0aGlzLmRhdGFTaXplID0gbmV4dFByb3BzLnBhZ2luYXRpb24ub3B0aW9ucy50b3RhbFNpemU7XG4gICAgfVxuICB9XG5cbiAgZ2V0UGFnaW5hdGlvblByb3BzID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgcGFnaW5hdGlvbjogeyBvcHRpb25zIH0sIGJvb3RzdHJhcDQgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgeyBjdXJyUGFnZSwgY3VyclNpemVQZXJQYWdlLCBkYXRhU2l6ZSB9ID0gdGhpcztcbiAgICBjb25zdCB3aXRoRmlyc3RBbmRMYXN0ID0gdHlwZW9mIG9wdGlvbnMud2l0aEZpcnN0QW5kTGFzdCA9PT0gJ3VuZGVmaW5lZCcgP1xuICAgICAgQ29uc3QuV2l0aF9GSVJTVF9BTkRfTEFTVCA6IG9wdGlvbnMud2l0aEZpcnN0QW5kTGFzdDtcbiAgICBjb25zdCBhbHdheXNTaG93QWxsQnRucyA9IHR5cGVvZiBvcHRpb25zLmFsd2F5c1Nob3dBbGxCdG5zID09PSAndW5kZWZpbmVkJyA/XG4gICAgICBDb25zdC5TSE9XX0FMTF9QQUdFX0JUTlMgOiBvcHRpb25zLmFsd2F5c1Nob3dBbGxCdG5zO1xuICAgIGNvbnN0IGhpZGVTaXplUGVyUGFnZSA9IHR5cGVvZiBvcHRpb25zLmhpZGVTaXplUGVyUGFnZSA9PT0gJ3VuZGVmaW5lZCcgP1xuICAgICAgQ29uc3QuSElERV9TSVpFX1BFUl9QQUdFIDogb3B0aW9ucy5oaWRlU2l6ZVBlclBhZ2U7XG4gICAgY29uc3QgaGlkZVBhZ2VMaXN0T25seU9uZVBhZ2UgPSB0eXBlb2Ygb3B0aW9ucy5oaWRlUGFnZUxpc3RPbmx5T25lUGFnZSA9PT0gJ3VuZGVmaW5lZCcgP1xuICAgICAgQ29uc3QuSElERV9QQUdFX0xJU1RfT05MWV9PTkVfUEFHRSA6IG9wdGlvbnMuaGlkZVBhZ2VMaXN0T25seU9uZVBhZ2U7XG4gICAgY29uc3QgcGFnZVN0YXJ0SW5kZXggPSB0eXBlb2Ygb3B0aW9ucy5wYWdlU3RhcnRJbmRleCA9PT0gJ3VuZGVmaW5lZCcgP1xuICAgICAgQ29uc3QuUEFHRV9TVEFSVF9JTkRFWCA6IG9wdGlvbnMucGFnZVN0YXJ0SW5kZXg7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICBib290c3RyYXA0LFxuICAgICAgcGFnZTogY3VyclBhZ2UsXG4gICAgICBzaXplUGVyUGFnZTogY3VyclNpemVQZXJQYWdlLFxuICAgICAgcGFnZVN0YXJ0SW5kZXgsXG4gICAgICBoaWRlUGFnZUxpc3RPbmx5T25lUGFnZSxcbiAgICAgIGhpZGVTaXplUGVyUGFnZSxcbiAgICAgIGFsd2F5c1Nob3dBbGxCdG5zLFxuICAgICAgd2l0aEZpcnN0QW5kTGFzdCxcbiAgICAgIGRhdGFTaXplLFxuICAgICAgc2l6ZVBlclBhZ2VMaXN0OiBvcHRpb25zLnNpemVQZXJQYWdlTGlzdCB8fCBDb25zdC5TSVpFX1BFUl9QQUdFX0xJU1QsXG4gICAgICBwYWdpbmF0aW9uU2l6ZTogb3B0aW9ucy5wYWdpbmF0aW9uU2l6ZSB8fCBDb25zdC5QQUdJTkFUSU9OX1NJWkUsXG4gICAgICBzaG93VG90YWw6IG9wdGlvbnMuc2hvd1RvdGFsLFxuICAgICAgcGFnZUxpc3RSZW5kZXJlcjogb3B0aW9ucy5wYWdlTGlzdFJlbmRlcmVyLFxuICAgICAgcGFnZUJ1dHRvblJlbmRlcmVyOiBvcHRpb25zLnBhZ2VCdXR0b25SZW5kZXJlcixcbiAgICAgIHNpemVQZXJQYWdlUmVuZGVyZXI6IG9wdGlvbnMuc2l6ZVBlclBhZ2VSZW5kZXJlcixcbiAgICAgIHBhZ2luYXRpb25Ub3RhbFJlbmRlcmVyOiBvcHRpb25zLnBhZ2luYXRpb25Ub3RhbFJlbmRlcmVyLFxuICAgICAgc2l6ZVBlclBhZ2VPcHRpb25SZW5kZXJlcjogb3B0aW9ucy5zaXplUGVyUGFnZU9wdGlvblJlbmRlcmVyLFxuICAgICAgZmlyc3RQYWdlVGV4dDogb3B0aW9ucy5maXJzdFBhZ2VUZXh0IHx8IENvbnN0LkZJUlNUX1BBR0VfVEVYVCxcbiAgICAgIHByZVBhZ2VUZXh0OiBvcHRpb25zLnByZVBhZ2VUZXh0IHx8IENvbnN0LlBSRV9QQUdFX1RFWFQsXG4gICAgICBuZXh0UGFnZVRleHQ6IG9wdGlvbnMubmV4dFBhZ2VUZXh0IHx8IENvbnN0Lk5FWFRfUEFHRV9URVhULFxuICAgICAgbGFzdFBhZ2VUZXh0OiBvcHRpb25zLmxhc3RQYWdlVGV4dCB8fCBDb25zdC5MQVNUX1BBR0VfVEVYVCxcbiAgICAgIHByZVBhZ2VUaXRsZTogb3B0aW9ucy5wcmVQYWdlVGl0bGUgfHwgQ29uc3QuUFJFX1BBR0VfVElUTEUsXG4gICAgICBuZXh0UGFnZVRpdGxlOiBvcHRpb25zLm5leHRQYWdlVGl0bGUgfHwgQ29uc3QuTkVYVF9QQUdFX1RJVExFLFxuICAgICAgZmlyc3RQYWdlVGl0bGU6IG9wdGlvbnMuZmlyc3RQYWdlVGl0bGUgfHwgQ29uc3QuRklSU1RfUEFHRV9USVRMRSxcbiAgICAgIGxhc3RQYWdlVGl0bGU6IG9wdGlvbnMubGFzdFBhZ2VUaXRsZSB8fCBDb25zdC5MQVNUX1BBR0VfVElUTEUsXG4gICAgICBvblBhZ2VDaGFuZ2U6IHRoaXMuaGFuZGxlQ2hhbmdlUGFnZSxcbiAgICAgIG9uU2l6ZVBlclBhZ2VDaGFuZ2U6IHRoaXMuaGFuZGxlQ2hhbmdlU2l6ZVBlclBhZ2VcbiAgICB9O1xuICB9XG5cbiAgc2V0UGFnaW5hdGlvblJlbW90ZUVtaXR0ZXIgPSAocmVtb3RlRW1pdHRlcikgPT4ge1xuICAgIHRoaXMucmVtb3RlRW1pdHRlciA9IHJlbW90ZUVtaXR0ZXI7XG4gIH1cblxuICBnZXRQYWdpbmF0aW9uUmVtb3RlRW1pdHRlciA9ICgpID0+IHRoaXMucmVtb3RlRW1pdHRlciB8fCB0aGlzLnByb3BzLnJlbW90ZUVtaXR0ZXI7XG5cbiAgaXNSZW1vdGVQYWdpbmF0aW9uID0gKCkgPT4ge1xuICAgIGNvbnN0IGUgPSB7fTtcbiAgICB0aGlzLnJlbW90ZUVtaXR0ZXIuZW1pdCgnaXNSZW1vdGVQYWdpbmF0aW9uJywgZSk7XG4gICAgcmV0dXJuIGUucmVzdWx0O1xuICB9O1xuXG4gIGhhbmRsZURhdGFTaXplQ2hhbmdlKG5ld0RhdGFTaXplKSB7XG4gICAgY29uc3QgeyBwYWdpbmF0aW9uOiB7IG9wdGlvbnMgfSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBwYWdlU3RhcnRJbmRleCA9IHR5cGVvZiBvcHRpb25zLnBhZ2VTdGFydEluZGV4ID09PSAndW5kZWZpbmVkJyA/XG4gICAgICBDb25zdC5QQUdFX1NUQVJUX0lOREVYIDogb3B0aW9ucy5wYWdlU3RhcnRJbmRleDtcbiAgICB0aGlzLmRhdGFTaXplID0gbmV3RGF0YVNpemU7XG4gICAgdGhpcy5jdXJyUGFnZSA9IGFsaWduUGFnZShcbiAgICAgIG5ld0RhdGFTaXplLFxuICAgICAgdGhpcy5jdXJyUGFnZSxcbiAgICAgIHRoaXMuY3VyclNpemVQZXJQYWdlLFxuICAgICAgcGFnZVN0YXJ0SW5kZXhcbiAgICApO1xuICAgIHRoaXMuZm9yY2VVcGRhdGUoKTtcbiAgfVxuXG4gIGhhbmRsZUNoYW5nZVBhZ2UoY3VyclBhZ2UpIHtcbiAgICBjb25zdCB7IGN1cnJTaXplUGVyUGFnZSB9ID0gdGhpcztcbiAgICBjb25zdCB7IHBhZ2luYXRpb246IHsgb3B0aW9ucyB9IH0gPSB0aGlzLnByb3BzO1xuXG4gICAgaWYgKG9wdGlvbnMub25QYWdlQ2hhbmdlKSB7XG4gICAgICBvcHRpb25zLm9uUGFnZUNoYW5nZShjdXJyUGFnZSwgY3VyclNpemVQZXJQYWdlKTtcbiAgICB9XG5cbiAgICB0aGlzLmN1cnJQYWdlID0gY3VyclBhZ2U7XG5cbiAgICBpZiAodGhpcy5pc1JlbW90ZVBhZ2luYXRpb24oKSkge1xuICAgICAgdGhpcy5nZXRQYWdpbmF0aW9uUmVtb3RlRW1pdHRlcigpLmVtaXQoJ3BhZ2luYXRpb25DaGFuZ2UnLCBjdXJyUGFnZSwgY3VyclNpemVQZXJQYWdlKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5mb3JjZVVwZGF0ZSgpO1xuICB9XG5cbiAgaGFuZGxlQ2hhbmdlU2l6ZVBlclBhZ2UoY3VyclNpemVQZXJQYWdlLCBjdXJyUGFnZSkge1xuICAgIGNvbnN0IHsgcGFnaW5hdGlvbjogeyBvcHRpb25zIH0gfSA9IHRoaXMucHJvcHM7XG5cbiAgICBpZiAob3B0aW9ucy5vblNpemVQZXJQYWdlQ2hhbmdlKSB7XG4gICAgICBvcHRpb25zLm9uU2l6ZVBlclBhZ2VDaGFuZ2UoY3VyclNpemVQZXJQYWdlLCBjdXJyUGFnZSk7XG4gICAgfVxuXG4gICAgdGhpcy5jdXJyUGFnZSA9IGN1cnJQYWdlO1xuICAgIHRoaXMuY3VyclNpemVQZXJQYWdlID0gY3VyclNpemVQZXJQYWdlO1xuXG4gICAgaWYgKHRoaXMuaXNSZW1vdGVQYWdpbmF0aW9uKCkpIHtcbiAgICAgIHRoaXMuZ2V0UGFnaW5hdGlvblJlbW90ZUVtaXR0ZXIoKS5lbWl0KCdwYWdpbmF0aW9uQ2hhbmdlJywgY3VyclBhZ2UsIGN1cnJTaXplUGVyUGFnZSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuZm9yY2VVcGRhdGUoKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBwYWdpbmF0aW9uUHJvcHMgPSB0aGlzLmdldFBhZ2luYXRpb25Qcm9wcygpO1xuICAgIGNvbnN0IHBhZ2luYXRpb24gPSB7XG4gICAgICAuLi50aGlzLnByb3BzLnBhZ2luYXRpb24sXG4gICAgICBvcHRpb25zOiBwYWdpbmF0aW9uUHJvcHNcbiAgICB9O1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxTdGF0ZUNvbnRleHQuUHJvdmlkZXJcbiAgICAgICAgdmFsdWU9eyB7XG4gICAgICAgICAgcGFnaW5hdGlvblByb3BzLFxuICAgICAgICAgIHBhZ2luYXRpb25UYWJsZVByb3BzOiB7XG4gICAgICAgICAgICBwYWdpbmF0aW9uLFxuICAgICAgICAgICAgc2V0UGFnaW5hdGlvblJlbW90ZUVtaXR0ZXI6IHRoaXMuc2V0UGFnaW5hdGlvblJlbW90ZUVtaXR0ZXIsXG4gICAgICAgICAgICBkYXRhQ2hhbmdlTGlzdGVuZXI6IHRoaXMuZGF0YUNoYW5nZUxpc3RlbmVyXG4gICAgICAgICAgfVxuICAgICAgICB9IH1cbiAgICAgID5cbiAgICAgICAgeyB0aGlzLnByb3BzLmNoaWxkcmVuIH1cbiAgICAgIDwvU3RhdGVDb250ZXh0LlByb3ZpZGVyPlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgKCkgPT4gKHtcbiAgUHJvdmlkZXI6IFN0YXRlUHJvdmlkZXIsXG4gIENvbnN1bWVyOiBTdGF0ZUNvbnRleHQuQ29uc3VtZXJcbn0pO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3N0YXRlLWNvbnRleHQuanMiLCJjb25zdCBnZXROb3JtYWxpemVkUGFnZSA9IChcbiAgcGFnZSxcbiAgcGFnZVN0YXJ0SW5kZXhcbikgPT4ge1xuICBjb25zdCBvZmZzZXQgPSBNYXRoLmFicygxIC0gcGFnZVN0YXJ0SW5kZXgpO1xuICByZXR1cm4gcGFnZSArIG9mZnNldDtcbn07XG5cbmNvbnN0IGVuZEluZGV4ID0gKFxuICBwYWdlLFxuICBzaXplUGVyUGFnZSxcbiAgcGFnZVN0YXJ0SW5kZXhcbikgPT4gKGdldE5vcm1hbGl6ZWRQYWdlKHBhZ2UsIHBhZ2VTdGFydEluZGV4KSAqIHNpemVQZXJQYWdlKSAtIDE7XG5cbmNvbnN0IHN0YXJ0SW5kZXggPSAoXG4gIGVuZCxcbiAgc2l6ZVBlclBhZ2UsXG4pID0+IGVuZCAtIChzaXplUGVyUGFnZSAtIDEpO1xuXG5leHBvcnQgY29uc3QgYWxpZ25QYWdlID0gKFxuICBkYXRhU2l6ZSxcbiAgcGFnZSxcbiAgc2l6ZVBlclBhZ2UsXG4gIHBhZ2VTdGFydEluZGV4XG4pID0+IHtcbiAgaWYgKHBhZ2UgPCBwYWdlU3RhcnRJbmRleCB8fCBwYWdlID4gKE1hdGguZmxvb3IoZGF0YVNpemUgLyBzaXplUGVyUGFnZSkgKyBwYWdlU3RhcnRJbmRleCkpIHtcbiAgICByZXR1cm4gcGFnZVN0YXJ0SW5kZXg7XG4gIH1cbiAgcmV0dXJuIHBhZ2U7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0QnlDdXJyUGFnZSA9IChcbiAgZGF0YSxcbiAgcGFnZSxcbiAgc2l6ZVBlclBhZ2UsXG4gIHBhZ2VTdGFydEluZGV4XG4pID0+IHtcbiAgY29uc3QgZGF0YVNpemUgPSBkYXRhLmxlbmd0aDtcbiAgaWYgKCFkYXRhU2l6ZSkgcmV0dXJuIFtdO1xuXG4gIGNvbnN0IGVuZCA9IGVuZEluZGV4KHBhZ2UsIHNpemVQZXJQYWdlLCBwYWdlU3RhcnRJbmRleCk7XG4gIGNvbnN0IHN0YXJ0ID0gc3RhcnRJbmRleChlbmQsIHNpemVQZXJQYWdlKTtcblxuICBjb25zdCByZXN1bHQgPSBbXTtcbiAgZm9yIChsZXQgaSA9IHN0YXJ0OyBpIDw9IGVuZDsgaSArPSAxKSB7XG4gICAgcmVzdWx0LnB1c2goZGF0YVtpXSk7XG4gICAgaWYgKGkgKyAxID09PSBkYXRhU2l6ZSkgYnJlYWs7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvcGFnZS5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbi8vIGNvbnNpZGVyIHRvIGhhdmUgYSBjb21tb24gbGliPzFcbmV4cG9ydCBjb25zdCBCb290c3RyYXBDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCh7XG4gIGJvb3RzdHJhcDQ6IGZhbHNlXG59KTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9ib290c3RyYXAuanMiLCIvKiBlc2xpbnQgcmVhY3QvcHJvcC10eXBlczogMCAqL1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHBhZ2VSZXNvbHZlciBmcm9tICcuL3BhZ2UtcmVzb2x2ZXInO1xuaW1wb3J0IFNpemVQZXJQYWdlRHJvcERvd24gZnJvbSAnLi9zaXplLXBlci1wYWdlLWRyb3Bkb3duJztcblxuY29uc3Qgc2l6ZVBlclBhZ2VEcm9wZG93bkFkYXB0ZXIgPSBXcmFwcGVkQ29tcG9uZW50ID0+XG4gIGNsYXNzIFNpemVQZXJQYWdlRHJvcGRvd25BZGFwdGVyIGV4dGVuZHMgcGFnZVJlc29sdmVyKENvbXBvbmVudCkge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICBzdXBlcihwcm9wcyk7XG4gICAgICB0aGlzLmNsb3NlRHJvcERvd24gPSB0aGlzLmNsb3NlRHJvcERvd24uYmluZCh0aGlzKTtcbiAgICAgIHRoaXMudG9nZ2xlRHJvcERvd24gPSB0aGlzLnRvZ2dsZURyb3BEb3duLmJpbmQodGhpcyk7XG4gICAgICB0aGlzLmhhbmRsZUNoYW5nZVNpemVQZXJQYWdlID0gdGhpcy5oYW5kbGVDaGFuZ2VTaXplUGVyUGFnZS5iaW5kKHRoaXMpO1xuICAgICAgdGhpcy5zdGF0ZSA9IHsgZHJvcGRvd25PcGVuOiBmYWxzZSB9O1xuICAgIH1cblxuICAgIHRvZ2dsZURyb3BEb3duKCkge1xuICAgICAgY29uc3QgZHJvcGRvd25PcGVuID0gIXRoaXMuc3RhdGUuZHJvcGRvd25PcGVuO1xuICAgICAgdGhpcy5zZXRTdGF0ZSgoKSA9PiAoeyBkcm9wZG93bk9wZW4gfSkpO1xuICAgIH1cblxuICAgIGNsb3NlRHJvcERvd24oKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKCgpID0+ICh7IGRyb3Bkb3duT3BlbjogZmFsc2UgfSkpO1xuICAgIH1cblxuICAgIGhhbmRsZUNoYW5nZVNpemVQZXJQYWdlKHNpemVQZXJQYWdlKSB7XG4gICAgICB0aGlzLnByb3BzLm9uU2l6ZVBlclBhZ2VDaGFuZ2Uoc2l6ZVBlclBhZ2UpO1xuICAgICAgdGhpcy5jbG9zZURyb3BEb3duKCk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBzaXplUGVyUGFnZUxpc3QsXG4gICAgICAgIGN1cnJTaXplUGVyUGFnZSxcbiAgICAgICAgaGlkZVNpemVQZXJQYWdlLFxuICAgICAgICBzaXplUGVyUGFnZVJlbmRlcmVyLFxuICAgICAgICBzaXplUGVyUGFnZU9wdGlvblJlbmRlcmVyXG4gICAgICB9ID0gdGhpcy5wcm9wcztcbiAgICAgIGNvbnN0IHsgZHJvcGRvd25PcGVuOiBvcGVuIH0gPSB0aGlzLnN0YXRlO1xuXG4gICAgICBpZiAoc2l6ZVBlclBhZ2VMaXN0Lmxlbmd0aCA+IDEgJiYgIWhpZGVTaXplUGVyUGFnZSkge1xuICAgICAgICBpZiAoc2l6ZVBlclBhZ2VSZW5kZXJlcikge1xuICAgICAgICAgIHJldHVybiBzaXplUGVyUGFnZVJlbmRlcmVyKHtcbiAgICAgICAgICAgIG9wdGlvbnM6IHRoaXMuY2FsY3VsYXRlU2l6ZVBlclBhZ2VTdGF0dXMoKSxcbiAgICAgICAgICAgIGN1cnJTaXplUGVyUGFnZTogYCR7Y3VyclNpemVQZXJQYWdlfWAsXG4gICAgICAgICAgICBvblNpemVQZXJQYWdlQ2hhbmdlOiB0aGlzLmhhbmRsZUNoYW5nZVNpemVQZXJQYWdlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8V3JhcHBlZENvbXBvbmVudFxuICAgICAgICAgICAgY3VyclNpemVQZXJQYWdlPXsgYCR7Y3VyclNpemVQZXJQYWdlfWAgfVxuICAgICAgICAgICAgb3B0aW9ucz17IHRoaXMuY2FsY3VsYXRlU2l6ZVBlclBhZ2VTdGF0dXMoKSB9XG4gICAgICAgICAgICBvcHRpb25SZW5kZXJlcj17IHNpemVQZXJQYWdlT3B0aW9uUmVuZGVyZXIgfVxuICAgICAgICAgICAgb25TaXplUGVyUGFnZUNoYW5nZT17IHRoaXMuaGFuZGxlQ2hhbmdlU2l6ZVBlclBhZ2UgfVxuICAgICAgICAgICAgb25DbGljaz17IHRoaXMudG9nZ2xlRHJvcERvd24gfVxuICAgICAgICAgICAgb25CbHVyPXsgdGhpcy5jbG9zZURyb3BEb3duIH1cbiAgICAgICAgICAgIG9wZW49eyBvcGVuIH1cbiAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9O1xuXG5cbmV4cG9ydCBjb25zdCBTaXplUGVyUGFnZURyb3Bkb3duQWRhcHRlciA9IHNpemVQZXJQYWdlRHJvcGRvd25BZGFwdGVyKFNpemVQZXJQYWdlRHJvcERvd24pO1xuZXhwb3J0IGRlZmF1bHQgc2l6ZVBlclBhZ2VEcm9wZG93bkFkYXB0ZXI7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvc2l6ZS1wZXItcGFnZS1kcm9wZG93bi1hZGFwdGVyLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBCb290c3RyYXBDb250ZXh0IH0gZnJvbSAnLi9ib290c3RyYXAnO1xuaW1wb3J0IFNpemVQZXJQYWdlT3B0aW9uIGZyb20gJy4vc2l6ZS1wZXItcGFnZS1vcHRpb24nO1xuXG5jb25zdCBzaXplUGVyUGFnZURlZmF1bHRDbGFzcyA9ICdyZWFjdC1icy10YWJsZS1zaXplUGVyUGFnZS1kcm9wZG93bic7XG5cbmNvbnN0IFNpemVQZXJQYWdlRHJvcERvd24gPSAocHJvcHMpID0+IHtcbiAgY29uc3Qge1xuICAgIG9wZW4sXG4gICAgaGlkZGVuLFxuICAgIG9uQ2xpY2ssXG4gICAgb25CbHVyLFxuICAgIG9wdGlvbnMsXG4gICAgY2xhc3NOYW1lLFxuICAgIHZhcmlhdGlvbixcbiAgICBidG5Db250ZXh0dWFsLFxuICAgIG9wdGlvblJlbmRlcmVyLFxuICAgIGN1cnJTaXplUGVyUGFnZSxcbiAgICBvblNpemVQZXJQYWdlQ2hhbmdlXG4gIH0gPSBwcm9wcztcblxuICBjb25zdCBkcm9wRG93blN0eWxlID0geyB2aXNpYmlsaXR5OiBoaWRkZW4gPyAnaGlkZGVuJyA6ICd2aXNpYmxlJyB9O1xuICBjb25zdCBvcGVuQ2xhc3MgPSBvcGVuID8gJ29wZW4gc2hvdycgOiAnJztcbiAgY29uc3QgZHJvcGRvd25DbGFzc2VzID0gY3MoXG4gICAgb3BlbkNsYXNzLFxuICAgIHNpemVQZXJQYWdlRGVmYXVsdENsYXNzLFxuICAgIHZhcmlhdGlvbixcbiAgICBjbGFzc05hbWUsXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8Qm9vdHN0cmFwQ29udGV4dC5Db25zdW1lcj5cbiAgICAgIHtcbiAgICAgICAgKHsgYm9vdHN0cmFwNCB9KSA9PiAoXG4gICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgIHN0eWxlPXsgZHJvcERvd25TdHlsZSB9XG4gICAgICAgICAgICBjbGFzc05hbWU9eyBkcm9wZG93bkNsYXNzZXMgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgaWQ9XCJwYWdlRHJvcERvd25cIlxuICAgICAgICAgICAgICBjbGFzc05hbWU9eyBgYnRuICR7YnRuQ29udGV4dHVhbH0gZHJvcGRvd24tdG9nZ2xlYCB9XG4gICAgICAgICAgICAgIGRhdGEtdG9nZ2xlPVwiZHJvcGRvd25cIlxuICAgICAgICAgICAgICBhcmlhLWV4cGFuZGVkPXsgb3BlbiB9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9eyBvbkNsaWNrIH1cbiAgICAgICAgICAgICAgb25CbHVyPXsgb25CbHVyIH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgeyBjdXJyU2l6ZVBlclBhZ2UgfVxuICAgICAgICAgICAgICB7ICcgJyB9XG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBib290c3RyYXA0ID8gbnVsbCA6IChcbiAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjYXJldFwiIC8+XG4gICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDx1bFxuICAgICAgICAgICAgICBjbGFzc05hbWU9eyBgZHJvcGRvd24tbWVudSAke29wZW5DbGFzc31gIH1cbiAgICAgICAgICAgICAgcm9sZT1cIm1lbnVcIlxuICAgICAgICAgICAgICBhcmlhLWxhYmVsbGVkYnk9XCJwYWdlRHJvcERvd25cIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5tYXAoKG9wdGlvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgaWYgKG9wdGlvblJlbmRlcmVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvcHRpb25SZW5kZXJlcih7XG4gICAgICAgICAgICAgICAgICAgICAgLi4ub3B0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgIG9uU2l6ZVBlclBhZ2VDaGFuZ2VcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICA8U2l6ZVBlclBhZ2VPcHRpb25cbiAgICAgICAgICAgICAgICAgICAgICB7IC4uLm9wdGlvbiB9XG4gICAgICAgICAgICAgICAgICAgICAga2V5PXsgb3B0aW9uLnRleHQgfVxuICAgICAgICAgICAgICAgICAgICAgIGJvb3RzdHJhcDQ9eyBib290c3RyYXA0IH1cbiAgICAgICAgICAgICAgICAgICAgICBvblNpemVQZXJQYWdlQ2hhbmdlPXsgb25TaXplUGVyUGFnZUNoYW5nZSB9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICApXG4gICAgICB9XG4gICAgPC9Cb290c3RyYXBDb250ZXh0LkNvbnN1bWVyPlxuICApO1xufTtcblxuU2l6ZVBlclBhZ2VEcm9wRG93bi5wcm9wVHlwZXMgPSB7XG4gIGN1cnJTaXplUGVyUGFnZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBvcHRpb25zOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcbiAgb25DbGljazogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgb25CbHVyOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBvblNpemVQZXJQYWdlQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBvcGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgaGlkZGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgYnRuQ29udGV4dHVhbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgdmFyaWF0aW9uOiBQcm9wVHlwZXMub25lT2YoWydkcm9wZG93bicsICdkcm9wdXAnXSksXG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgb3B0aW9uUmVuZGVyZXI6IFByb3BUeXBlcy5mdW5jXG59O1xuU2l6ZVBlclBhZ2VEcm9wRG93bi5kZWZhdWx0UHJvcHMgPSB7XG4gIG9wZW46IGZhbHNlLFxuICBoaWRkZW46IGZhbHNlLFxuICBidG5Db250ZXh0dWFsOiAnYnRuLWRlZmF1bHQgYnRuLXNlY29uZGFyeScsXG4gIHZhcmlhdGlvbjogJ2Ryb3Bkb3duJyxcbiAgY2xhc3NOYW1lOiAnJyxcbiAgb3B0aW9uUmVuZGVyZXI6IG51bGxcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgU2l6ZVBlclBhZ2VEcm9wRG93bjtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9zaXplLXBlci1wYWdlLWRyb3Bkb3duLmpzIiwiLyogZXNsaW50IHJlYWN0L3Byb3AtdHlwZXM6IDAgKi9cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBwYWdlUmVzb2x2ZXIgZnJvbSAnLi9wYWdlLXJlc29sdmVyJztcbmltcG9ydCBQYWdpbmF0aW9uTGlzdCBmcm9tICcuL3BhZ2luYXRpb24tbGlzdCc7XG5cbmNvbnN0IHBhZ2luYXRpb25MaXN0QWRhcHRlciA9IFdyYXBwZWRDb21wb25lbnQgPT5cbiAgY2xhc3MgUGFnaW5hdGlvbkxpc3RBZGFwdGVyIGV4dGVuZHMgcGFnZVJlc29sdmVyKENvbXBvbmVudCkge1xuICAgIHJlbmRlcigpIHtcbiAgICAgIGNvbnN0IHsgbGFzdFBhZ2UsIHRvdGFsUGFnZXMsIHBhZ2VCdXR0b25SZW5kZXJlciwgb25QYWdlQ2hhbmdlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgY29uc3QgcGFnZXMgPSB0aGlzLmNhbGN1bGF0ZVBhZ2VTdGF0dXModGhpcy5jYWxjdWxhdGVQYWdlcyh0b3RhbFBhZ2VzLCBsYXN0UGFnZSksIGxhc3RQYWdlKTtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxXcmFwcGVkQ29tcG9uZW50XG4gICAgICAgICAgcGFnZUJ1dHRvblJlbmRlcmVyPXsgcGFnZUJ1dHRvblJlbmRlcmVyIH1cbiAgICAgICAgICBvblBhZ2VDaGFuZ2U9eyBvblBhZ2VDaGFuZ2UgfVxuICAgICAgICAgIHBhZ2VzPXsgcGFnZXMgfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICB9XG4gIH07XG5cblxuZXhwb3J0IGNvbnN0IFBhZ2luYXRpb25MaXN0V2l0aEFkYXB0ZXIgPSBwYWdpbmF0aW9uTGlzdEFkYXB0ZXIoUGFnaW5hdGlvbkxpc3QpO1xuZXhwb3J0IGRlZmF1bHQgcGFnaW5hdGlvbkxpc3RBZGFwdGVyO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24tbGlzdC1hZGFwdGVyLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCBQYWdlQnV0dG9uIGZyb20gJy4vcGFnZS1idXR0b24nO1xuXG5jb25zdCBQYWdpbmF0b25MaXN0ID0gcHJvcHMgPT4gKFxuICA8dWwgY2xhc3NOYW1lPVwicGFnaW5hdGlvbiByZWFjdC1ib290c3RyYXAtdGFibGUtcGFnZS1idG5zLXVsXCI+XG4gICAge1xuICAgICAgcHJvcHMucGFnZXMubWFwKChwYWdlUHJvcHMpID0+IHtcbiAgICAgICAgaWYgKHByb3BzLnBhZ2VCdXR0b25SZW5kZXJlcikge1xuICAgICAgICAgIHJldHVybiBwcm9wcy5wYWdlQnV0dG9uUmVuZGVyZXIoe1xuICAgICAgICAgICAgLi4ucGFnZVByb3BzLFxuICAgICAgICAgICAgb25QYWdlQ2hhbmdlOiBwcm9wcy5vblBhZ2VDaGFuZ2VcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxQYWdlQnV0dG9uXG4gICAgICAgICAgICBrZXk9eyBwYWdlUHJvcHMucGFnZSB9XG4gICAgICAgICAgICB7IC4uLnBhZ2VQcm9wcyB9XG4gICAgICAgICAgICBvblBhZ2VDaGFuZ2U9eyBwcm9wcy5vblBhZ2VDaGFuZ2UgfVxuICAgICAgICAgIC8+XG4gICAgICAgICk7XG4gICAgICB9KVxuICAgIH1cbiAgPC91bD5cbik7XG5cblBhZ2luYXRvbkxpc3QucHJvcFR5cGVzID0ge1xuICBwYWdlczogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBwYWdlOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSksXG4gICAgYWN0aXZlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBkaXNhYmxlOiBQcm9wVHlwZXMuYm9vbCxcbiAgICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZ1xuICB9KSkuaXNSZXF1aXJlZCxcbiAgb25QYWdlQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBwYWdlQnV0dG9uUmVuZGVyZXI6IFByb3BUeXBlcy5mdW5jXG59O1xuXG5QYWdpbmF0b25MaXN0LmRlZmF1bHRQcm9wcyA9IHtcbiAgcGFnZUJ1dHRvblJlbmRlcmVyOiBudWxsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBQYWdpbmF0b25MaXN0O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24tbGlzdC5qcyIsIi8qIGVzbGludCByZWFjdC9wcm9wLXR5cGVzOiAwICovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBXcmFwcGVkQ29tcG9uZW50ID0+ICh7XG4gIHBhZ2UsXG4gIHNpemVQZXJQYWdlLFxuICAuLi5yZXN0XG59KSA9PiAoXG4gIDxXcmFwcGVkQ29tcG9uZW50XG4gICAgeyAuLi5yZXN0IH1cbiAgICBjdXJyUGFnZT17IHBhZ2UgfVxuICAgIGN1cnJTaXplUGVyUGFnZT17IHNpemVQZXJQYWdlIH1cbiAgLz5cbik7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvc3RhbmRhbG9uZS1hZGFwdGVyLmpzIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY3JlYXRlQmFzZUNvbnRleHQgZnJvbSAnLi9zcmMvc3RhdGUtY29udGV4dCc7XG5pbXBvcnQgY3JlYXRlRGF0YUNvbnRleHQgZnJvbSAnLi9zcmMvZGF0YS1jb250ZXh0JztcbmltcG9ydCBQYWdpbmF0aW9uTGlzdFN0YW5kYWxvbmUgZnJvbSAnLi9zcmMvcGFnaW5hdGlvbi1saXN0LXN0YW5kYWxvbmUnO1xuaW1wb3J0IFNpemVQZXJQYWdlRHJvcGRvd25TdGFuZGFsb25lIGZyb20gJy4vc3JjL3NpemUtcGVyLXBhZ2UtZHJvcGRvd24tc3RhbmRhbG9uZSc7XG5cbmV4cG9ydCBkZWZhdWx0IChvcHRpb25zID0ge30pID0+ICh7XG4gIGNyZWF0ZUNvbnRleHQ6IGNyZWF0ZURhdGFDb250ZXh0LFxuICBvcHRpb25zXG59KTtcblxuY29uc3QgeyBQcm92aWRlciwgQ29uc3VtZXIgfSA9IGNyZWF0ZUJhc2VDb250ZXh0KCk7XG5cbmNvbnN0IEN1c3RvbWl6YWJsZVByb3ZpZGVyID0gcHJvcHMgPT4gKFxuICA8UHJvdmlkZXIgeyAuLi5wcm9wcyB9PlxuICAgIDxDb25zdW1lcj57IHBhZ2luYXRpb25Qcm9wcyA9PiBwcm9wcy5jaGlsZHJlbihwYWdpbmF0aW9uUHJvcHMpIH08L0NvbnN1bWVyPlxuICA8L1Byb3ZpZGVyPlxuKTtcblxuQ3VzdG9taXphYmxlUHJvdmlkZXIucHJvcFR5cGVzID0ge1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGNvbnN0IFBhZ2luYXRpb25Qcm92aWRlciA9IEN1c3RvbWl6YWJsZVByb3ZpZGVyO1xuZXhwb3J0IHsgUGFnaW5hdGlvbkxpc3RTdGFuZGFsb25lLCBTaXplUGVyUGFnZURyb3Bkb3duU3RhbmRhbG9uZSB9O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3IvaW5kZXguanMiLCIvKipcbiAqIENvcHlyaWdodCAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBlbXB0eUZ1bmN0aW9uID0gcmVxdWlyZSgnZmJqcy9saWIvZW1wdHlGdW5jdGlvbicpO1xudmFyIGludmFyaWFudCA9IHJlcXVpcmUoJ2ZianMvbGliL2ludmFyaWFudCcpO1xudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGludmFyaWFudChcbiAgICAgIGZhbHNlLFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW1cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGVtcHR5RnVuY3Rpb247XG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qc1xuLy8gbW9kdWxlIGlkID0gMTVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eUZ1bmN0aW9uLmpzXG4vLyBtb2R1bGUgaWQgPSAxNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIHZhbGlkYXRlRm9ybWF0ID0gZnVuY3Rpb24gdmFsaWRhdGVGb3JtYXQoZm9ybWF0KSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFsaWRhdGVGb3JtYXQgPSBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpO1xuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgKyAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KSk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pbnZhcmlhbnQuanNcbi8vIG1vZHVsZSBpZCA9IDE3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanNcbi8vIG1vZHVsZSBpZCA9IDE4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbmZ1bmN0aW9uIEV2ZW50RW1pdHRlcigpIHtcbiAgdGhpcy5fZXZlbnRzID0gdGhpcy5fZXZlbnRzIHx8IHt9O1xuICB0aGlzLl9tYXhMaXN0ZW5lcnMgPSB0aGlzLl9tYXhMaXN0ZW5lcnMgfHwgdW5kZWZpbmVkO1xufVxubW9kdWxlLmV4cG9ydHMgPSBFdmVudEVtaXR0ZXI7XG5cbi8vIEJhY2t3YXJkcy1jb21wYXQgd2l0aCBub2RlIDAuMTAueFxuRXZlbnRFbWl0dGVyLkV2ZW50RW1pdHRlciA9IEV2ZW50RW1pdHRlcjtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5fZXZlbnRzID0gdW5kZWZpbmVkO1xuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5fbWF4TGlzdGVuZXJzID0gdW5kZWZpbmVkO1xuXG4vLyBCeSBkZWZhdWx0IEV2ZW50RW1pdHRlcnMgd2lsbCBwcmludCBhIHdhcm5pbmcgaWYgbW9yZSB0aGFuIDEwIGxpc3RlbmVycyBhcmVcbi8vIGFkZGVkIHRvIGl0LiBUaGlzIGlzIGEgdXNlZnVsIGRlZmF1bHQgd2hpY2ggaGVscHMgZmluZGluZyBtZW1vcnkgbGVha3MuXG5FdmVudEVtaXR0ZXIuZGVmYXVsdE1heExpc3RlbmVycyA9IDEwO1xuXG4vLyBPYnZpb3VzbHkgbm90IGFsbCBFbWl0dGVycyBzaG91bGQgYmUgbGltaXRlZCB0byAxMC4gVGhpcyBmdW5jdGlvbiBhbGxvd3Ncbi8vIHRoYXQgdG8gYmUgaW5jcmVhc2VkLiBTZXQgdG8gemVybyBmb3IgdW5saW1pdGVkLlxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5zZXRNYXhMaXN0ZW5lcnMgPSBmdW5jdGlvbihuKSB7XG4gIGlmICghaXNOdW1iZXIobikgfHwgbiA8IDAgfHwgaXNOYU4obikpXG4gICAgdGhyb3cgVHlwZUVycm9yKCduIG11c3QgYmUgYSBwb3NpdGl2ZSBudW1iZXInKTtcbiAgdGhpcy5fbWF4TGlzdGVuZXJzID0gbjtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbih0eXBlKSB7XG4gIHZhciBlciwgaGFuZGxlciwgbGVuLCBhcmdzLCBpLCBsaXN0ZW5lcnM7XG5cbiAgaWYgKCF0aGlzLl9ldmVudHMpXG4gICAgdGhpcy5fZXZlbnRzID0ge307XG5cbiAgLy8gSWYgdGhlcmUgaXMgbm8gJ2Vycm9yJyBldmVudCBsaXN0ZW5lciB0aGVuIHRocm93LlxuICBpZiAodHlwZSA9PT0gJ2Vycm9yJykge1xuICAgIGlmICghdGhpcy5fZXZlbnRzLmVycm9yIHx8XG4gICAgICAgIChpc09iamVjdCh0aGlzLl9ldmVudHMuZXJyb3IpICYmICF0aGlzLl9ldmVudHMuZXJyb3IubGVuZ3RoKSkge1xuICAgICAgZXIgPSBhcmd1bWVudHNbMV07XG4gICAgICBpZiAoZXIgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICB0aHJvdyBlcjsgLy8gVW5oYW5kbGVkICdlcnJvcicgZXZlbnRcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEF0IGxlYXN0IGdpdmUgc29tZSBraW5kIG9mIGNvbnRleHQgdG8gdGhlIHVzZXJcbiAgICAgICAgdmFyIGVyciA9IG5ldyBFcnJvcignVW5jYXVnaHQsIHVuc3BlY2lmaWVkIFwiZXJyb3JcIiBldmVudC4gKCcgKyBlciArICcpJyk7XG4gICAgICAgIGVyci5jb250ZXh0ID0gZXI7XG4gICAgICAgIHRocm93IGVycjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBoYW5kbGVyID0gdGhpcy5fZXZlbnRzW3R5cGVdO1xuXG4gIGlmIChpc1VuZGVmaW5lZChoYW5kbGVyKSlcbiAgICByZXR1cm4gZmFsc2U7XG5cbiAgaWYgKGlzRnVuY3Rpb24oaGFuZGxlcikpIHtcbiAgICBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgIC8vIGZhc3QgY2FzZXNcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgaGFuZGxlci5jYWxsKHRoaXMpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgMjpcbiAgICAgICAgaGFuZGxlci5jYWxsKHRoaXMsIGFyZ3VtZW50c1sxXSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAzOlxuICAgICAgICBoYW5kbGVyLmNhbGwodGhpcywgYXJndW1lbnRzWzFdLCBhcmd1bWVudHNbMl0pO1xuICAgICAgICBicmVhaztcbiAgICAgIC8vIHNsb3dlclxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG4gICAgICAgIGhhbmRsZXIuYXBwbHkodGhpcywgYXJncyk7XG4gICAgfVxuICB9IGVsc2UgaWYgKGlzT2JqZWN0KGhhbmRsZXIpKSB7XG4gICAgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG4gICAgbGlzdGVuZXJzID0gaGFuZGxlci5zbGljZSgpO1xuICAgIGxlbiA9IGxpc3RlbmVycy5sZW5ndGg7XG4gICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKVxuICAgICAgbGlzdGVuZXJzW2ldLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmFkZExpc3RlbmVyID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIpIHtcbiAgdmFyIG07XG5cbiAgaWYgKCFpc0Z1bmN0aW9uKGxpc3RlbmVyKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ2xpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvbicpO1xuXG4gIGlmICghdGhpcy5fZXZlbnRzKVxuICAgIHRoaXMuX2V2ZW50cyA9IHt9O1xuXG4gIC8vIFRvIGF2b2lkIHJlY3Vyc2lvbiBpbiB0aGUgY2FzZSB0aGF0IHR5cGUgPT09IFwibmV3TGlzdGVuZXJcIiEgQmVmb3JlXG4gIC8vIGFkZGluZyBpdCB0byB0aGUgbGlzdGVuZXJzLCBmaXJzdCBlbWl0IFwibmV3TGlzdGVuZXJcIi5cbiAgaWYgKHRoaXMuX2V2ZW50cy5uZXdMaXN0ZW5lcilcbiAgICB0aGlzLmVtaXQoJ25ld0xpc3RlbmVyJywgdHlwZSxcbiAgICAgICAgICAgICAgaXNGdW5jdGlvbihsaXN0ZW5lci5saXN0ZW5lcikgP1xuICAgICAgICAgICAgICBsaXN0ZW5lci5saXN0ZW5lciA6IGxpc3RlbmVyKTtcblxuICBpZiAoIXRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICAvLyBPcHRpbWl6ZSB0aGUgY2FzZSBvZiBvbmUgbGlzdGVuZXIuIERvbid0IG5lZWQgdGhlIGV4dHJhIGFycmF5IG9iamVjdC5cbiAgICB0aGlzLl9ldmVudHNbdHlwZV0gPSBsaXN0ZW5lcjtcbiAgZWxzZSBpZiAoaXNPYmplY3QodGhpcy5fZXZlbnRzW3R5cGVdKSlcbiAgICAvLyBJZiB3ZSd2ZSBhbHJlYWR5IGdvdCBhbiBhcnJheSwganVzdCBhcHBlbmQuXG4gICAgdGhpcy5fZXZlbnRzW3R5cGVdLnB1c2gobGlzdGVuZXIpO1xuICBlbHNlXG4gICAgLy8gQWRkaW5nIHRoZSBzZWNvbmQgZWxlbWVudCwgbmVlZCB0byBjaGFuZ2UgdG8gYXJyYXkuXG4gICAgdGhpcy5fZXZlbnRzW3R5cGVdID0gW3RoaXMuX2V2ZW50c1t0eXBlXSwgbGlzdGVuZXJdO1xuXG4gIC8vIENoZWNrIGZvciBsaXN0ZW5lciBsZWFrXG4gIGlmIChpc09iamVjdCh0aGlzLl9ldmVudHNbdHlwZV0pICYmICF0aGlzLl9ldmVudHNbdHlwZV0ud2FybmVkKSB7XG4gICAgaWYgKCFpc1VuZGVmaW5lZCh0aGlzLl9tYXhMaXN0ZW5lcnMpKSB7XG4gICAgICBtID0gdGhpcy5fbWF4TGlzdGVuZXJzO1xuICAgIH0gZWxzZSB7XG4gICAgICBtID0gRXZlbnRFbWl0dGVyLmRlZmF1bHRNYXhMaXN0ZW5lcnM7XG4gICAgfVxuXG4gICAgaWYgKG0gJiYgbSA+IDAgJiYgdGhpcy5fZXZlbnRzW3R5cGVdLmxlbmd0aCA+IG0pIHtcbiAgICAgIHRoaXMuX2V2ZW50c1t0eXBlXS53YXJuZWQgPSB0cnVlO1xuICAgICAgY29uc29sZS5lcnJvcignKG5vZGUpIHdhcm5pbmc6IHBvc3NpYmxlIEV2ZW50RW1pdHRlciBtZW1vcnkgJyArXG4gICAgICAgICAgICAgICAgICAgICdsZWFrIGRldGVjdGVkLiAlZCBsaXN0ZW5lcnMgYWRkZWQuICcgK1xuICAgICAgICAgICAgICAgICAgICAnVXNlIGVtaXR0ZXIuc2V0TWF4TGlzdGVuZXJzKCkgdG8gaW5jcmVhc2UgbGltaXQuJyxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZXZlbnRzW3R5cGVdLmxlbmd0aCk7XG4gICAgICBpZiAodHlwZW9mIGNvbnNvbGUudHJhY2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgLy8gbm90IHN1cHBvcnRlZCBpbiBJRSAxMFxuICAgICAgICBjb25zb2xlLnRyYWNlKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLm9uID0gRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lcjtcblxuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbmNlID0gZnVuY3Rpb24odHlwZSwgbGlzdGVuZXIpIHtcbiAgaWYgKCFpc0Z1bmN0aW9uKGxpc3RlbmVyKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ2xpc3RlbmVyIG11c3QgYmUgYSBmdW5jdGlvbicpO1xuXG4gIHZhciBmaXJlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGcoKSB7XG4gICAgdGhpcy5yZW1vdmVMaXN0ZW5lcih0eXBlLCBnKTtcblxuICAgIGlmICghZmlyZWQpIHtcbiAgICAgIGZpcmVkID0gdHJ1ZTtcbiAgICAgIGxpc3RlbmVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9XG5cbiAgZy5saXN0ZW5lciA9IGxpc3RlbmVyO1xuICB0aGlzLm9uKHR5cGUsIGcpO1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLy8gZW1pdHMgYSAncmVtb3ZlTGlzdGVuZXInIGV2ZW50IGlmZiB0aGUgbGlzdGVuZXIgd2FzIHJlbW92ZWRcbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXIgPSBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lcikge1xuICB2YXIgbGlzdCwgcG9zaXRpb24sIGxlbmd0aCwgaTtcblxuICBpZiAoIWlzRnVuY3Rpb24obGlzdGVuZXIpKVxuICAgIHRocm93IFR5cGVFcnJvcignbGlzdGVuZXIgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7XG5cbiAgaWYgKCF0aGlzLl9ldmVudHMgfHwgIXRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICByZXR1cm4gdGhpcztcblxuICBsaXN0ID0gdGhpcy5fZXZlbnRzW3R5cGVdO1xuICBsZW5ndGggPSBsaXN0Lmxlbmd0aDtcbiAgcG9zaXRpb24gPSAtMTtcblxuICBpZiAobGlzdCA9PT0gbGlzdGVuZXIgfHxcbiAgICAgIChpc0Z1bmN0aW9uKGxpc3QubGlzdGVuZXIpICYmIGxpc3QubGlzdGVuZXIgPT09IGxpc3RlbmVyKSkge1xuICAgIGRlbGV0ZSB0aGlzLl9ldmVudHNbdHlwZV07XG4gICAgaWYgKHRoaXMuX2V2ZW50cy5yZW1vdmVMaXN0ZW5lcilcbiAgICAgIHRoaXMuZW1pdCgncmVtb3ZlTGlzdGVuZXInLCB0eXBlLCBsaXN0ZW5lcik7XG5cbiAgfSBlbHNlIGlmIChpc09iamVjdChsaXN0KSkge1xuICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tID4gMDspIHtcbiAgICAgIGlmIChsaXN0W2ldID09PSBsaXN0ZW5lciB8fFxuICAgICAgICAgIChsaXN0W2ldLmxpc3RlbmVyICYmIGxpc3RbaV0ubGlzdGVuZXIgPT09IGxpc3RlbmVyKSkge1xuICAgICAgICBwb3NpdGlvbiA9IGk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChwb3NpdGlvbiA8IDApXG4gICAgICByZXR1cm4gdGhpcztcblxuICAgIGlmIChsaXN0Lmxlbmd0aCA9PT0gMSkge1xuICAgICAgbGlzdC5sZW5ndGggPSAwO1xuICAgICAgZGVsZXRlIHRoaXMuX2V2ZW50c1t0eXBlXTtcbiAgICB9IGVsc2Uge1xuICAgICAgbGlzdC5zcGxpY2UocG9zaXRpb24sIDEpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9ldmVudHMucmVtb3ZlTGlzdGVuZXIpXG4gICAgICB0aGlzLmVtaXQoJ3JlbW92ZUxpc3RlbmVyJywgdHlwZSwgbGlzdGVuZXIpO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycyA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgdmFyIGtleSwgbGlzdGVuZXJzO1xuXG4gIGlmICghdGhpcy5fZXZlbnRzKVxuICAgIHJldHVybiB0aGlzO1xuXG4gIC8vIG5vdCBsaXN0ZW5pbmcgZm9yIHJlbW92ZUxpc3RlbmVyLCBubyBuZWVkIHRvIGVtaXRcbiAgaWYgKCF0aGlzLl9ldmVudHMucmVtb3ZlTGlzdGVuZXIpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMClcbiAgICAgIHRoaXMuX2V2ZW50cyA9IHt9O1xuICAgIGVsc2UgaWYgKHRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICAgIGRlbGV0ZSB0aGlzLl9ldmVudHNbdHlwZV07XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvLyBlbWl0IHJlbW92ZUxpc3RlbmVyIGZvciBhbGwgbGlzdGVuZXJzIG9uIGFsbCBldmVudHNcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICBmb3IgKGtleSBpbiB0aGlzLl9ldmVudHMpIHtcbiAgICAgIGlmIChrZXkgPT09ICdyZW1vdmVMaXN0ZW5lcicpIGNvbnRpbnVlO1xuICAgICAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoa2V5KTtcbiAgICB9XG4gICAgdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMoJ3JlbW92ZUxpc3RlbmVyJyk7XG4gICAgdGhpcy5fZXZlbnRzID0ge307XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBsaXN0ZW5lcnMgPSB0aGlzLl9ldmVudHNbdHlwZV07XG5cbiAgaWYgKGlzRnVuY3Rpb24obGlzdGVuZXJzKSkge1xuICAgIHRoaXMucmVtb3ZlTGlzdGVuZXIodHlwZSwgbGlzdGVuZXJzKTtcbiAgfSBlbHNlIGlmIChsaXN0ZW5lcnMpIHtcbiAgICAvLyBMSUZPIG9yZGVyXG4gICAgd2hpbGUgKGxpc3RlbmVycy5sZW5ndGgpXG4gICAgICB0aGlzLnJlbW92ZUxpc3RlbmVyKHR5cGUsIGxpc3RlbmVyc1tsaXN0ZW5lcnMubGVuZ3RoIC0gMV0pO1xuICB9XG4gIGRlbGV0ZSB0aGlzLl9ldmVudHNbdHlwZV07XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVycyA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgdmFyIHJldDtcbiAgaWYgKCF0aGlzLl9ldmVudHMgfHwgIXRoaXMuX2V2ZW50c1t0eXBlXSlcbiAgICByZXQgPSBbXTtcbiAgZWxzZSBpZiAoaXNGdW5jdGlvbih0aGlzLl9ldmVudHNbdHlwZV0pKVxuICAgIHJldCA9IFt0aGlzLl9ldmVudHNbdHlwZV1dO1xuICBlbHNlXG4gICAgcmV0ID0gdGhpcy5fZXZlbnRzW3R5cGVdLnNsaWNlKCk7XG4gIHJldHVybiByZXQ7XG59O1xuXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVyQ291bnQgPSBmdW5jdGlvbih0eXBlKSB7XG4gIGlmICh0aGlzLl9ldmVudHMpIHtcbiAgICB2YXIgZXZsaXN0ZW5lciA9IHRoaXMuX2V2ZW50c1t0eXBlXTtcblxuICAgIGlmIChpc0Z1bmN0aW9uKGV2bGlzdGVuZXIpKVxuICAgICAgcmV0dXJuIDE7XG4gICAgZWxzZSBpZiAoZXZsaXN0ZW5lcilcbiAgICAgIHJldHVybiBldmxpc3RlbmVyLmxlbmd0aDtcbiAgfVxuICByZXR1cm4gMDtcbn07XG5cbkV2ZW50RW1pdHRlci5saXN0ZW5lckNvdW50ID0gZnVuY3Rpb24oZW1pdHRlciwgdHlwZSkge1xuICByZXR1cm4gZW1pdHRlci5saXN0ZW5lckNvdW50KHR5cGUpO1xufTtcblxuZnVuY3Rpb24gaXNGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdmdW5jdGlvbic7XG59XG5cbmZ1bmN0aW9uIGlzTnVtYmVyKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ251bWJlcic7XG59XG5cbmZ1bmN0aW9uIGlzT2JqZWN0KGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ29iamVjdCcgJiYgYXJnICE9PSBudWxsO1xufVxuXG5mdW5jdGlvbiBpc1VuZGVmaW5lZChhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PT0gdm9pZCAwO1xufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvZXZlbnRzL2V2ZW50cy5qc1xuLy8gbW9kdWxlIGlkID0gMTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiLCIvKiBlc2xpbnQgcmVhY3QvcHJvcC10eXBlczogMCAqL1xuLyogZXNsaW50IHJlYWN0L3JlcXVpcmUtZGVmYXVsdC1wcm9wczogMCAqL1xuLyogZXNsaW50IG5vLWxvbmVseS1pZjogMCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmltcG9ydCBDb25zdCBmcm9tICcuL2NvbnN0JztcbmltcG9ydCB7IEJvb3RzdHJhcENvbnRleHQgfSBmcm9tICcuL2Jvb3RzdHJhcCc7XG5pbXBvcnQgUGFnaW5hdGlvbiBmcm9tICcuL3BhZ2luYXRpb24nO1xuaW1wb3J0IHsgZ2V0QnlDdXJyUGFnZSwgYWxpZ25QYWdlIH0gZnJvbSAnLi9wYWdlJztcbmltcG9ydCBjcmVhdGVCYXNlQ29udGV4dCBmcm9tICcuL3N0YXRlLWNvbnRleHQnO1xuXG5jb25zdCB7IFByb3ZpZGVyIH0gPSBjcmVhdGVCYXNlQ29udGV4dCgpO1xuXG5jb25zdCBQYWdpbmF0aW9uRGF0YUNvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XG5cbmNsYXNzIFBhZ2luYXRpb25EYXRhUHJvdmlkZXIgZXh0ZW5kcyBQcm92aWRlciB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgZGF0YTogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG4gICAgcmVtb3RlRW1pdHRlcjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIGlzUmVtb3RlUGFnaW5hdGlvbjogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxuICB9XG5cbiAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICBzdXBlci5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcyk7XG4gICAgY29uc3QgeyBjdXJyU2l6ZVBlclBhZ2UgfSA9IHRoaXM7XG4gICAgY29uc3QgeyBjdXN0b20sIG9uUGFnZUNoYW5nZSB9ID0gbmV4dFByb3BzLnBhZ2luYXRpb24ub3B0aW9ucztcblxuICAgIGNvbnN0IHBhZ2VTdGFydEluZGV4ID0gdHlwZW9mIG5leHRQcm9wcy5wYWdpbmF0aW9uLm9wdGlvbnMucGFnZVN0YXJ0SW5kZXggIT09ICd1bmRlZmluZWQnID9cbiAgICAgIG5leHRQcm9wcy5wYWdpbmF0aW9uLm9wdGlvbnMucGFnZVN0YXJ0SW5kZXggOiBDb25zdC5QQUdFX1NUQVJUX0lOREVYO1xuXG4gICAgLy8gdXNlciBzaG91bGQgYWxpZ24gdGhlIHBhZ2Ugd2hlbiB0aGUgcGFnZSBpcyBub3QgZml0IHRvIHRoZSBkYXRhIHNpemUgd2hlbiByZW1vdGUgZW5hYmxlXG4gICAgaWYgKCF0aGlzLmlzUmVtb3RlUGFnaW5hdGlvbigpICYmICFjdXN0b20pIHtcbiAgICAgIGNvbnN0IG5ld1BhZ2UgPSBhbGlnblBhZ2UoXG4gICAgICAgIG5leHRQcm9wcy5kYXRhLmxlbmd0aCwgdGhpcy5jdXJyUGFnZSwgY3VyclNpemVQZXJQYWdlLCBwYWdlU3RhcnRJbmRleCk7XG5cbiAgICAgIGlmICh0aGlzLmN1cnJQYWdlICE9PSBuZXdQYWdlKSB7XG4gICAgICAgIGlmIChvblBhZ2VDaGFuZ2UpIHtcbiAgICAgICAgICBvblBhZ2VDaGFuZ2UobmV3UGFnZSwgY3VyclNpemVQZXJQYWdlKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmN1cnJQYWdlID0gbmV3UGFnZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpc1JlbW90ZVBhZ2luYXRpb24gPSAoKSA9PiB0aGlzLnByb3BzLmlzUmVtb3RlUGFnaW5hdGlvbigpO1xuXG4gIHJlbmRlckRlZmF1bHRQYWdpbmF0aW9uID0gKCkgPT4ge1xuICAgIGlmICghdGhpcy5wcm9wcy5wYWdpbmF0aW9uLm9wdGlvbnMuY3VzdG9tKSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGJvb3RzdHJhcDQsXG4gICAgICAgIHBhZ2U6IGN1cnJQYWdlLFxuICAgICAgICBzaXplUGVyUGFnZTogY3VyclNpemVQZXJQYWdlLFxuICAgICAgICBkYXRhU2l6ZSxcbiAgICAgICAgLi4ucmVzdFxuICAgICAgfSA9IHRoaXMuZ2V0UGFnaW5hdGlvblByb3BzKCk7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8Qm9vdHN0cmFwQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17IHsgYm9vdHN0cmFwNCB9IH0+XG4gICAgICAgICAgPFBhZ2luYXRpb25cbiAgICAgICAgICAgIHsgLi4ucmVzdCB9XG4gICAgICAgICAgICBrZXk9XCJwYWdpbmF0aW9uXCJcbiAgICAgICAgICAgIGRhdGFTaXplPXsgZGF0YVNpemUgfHwgdGhpcy5wcm9wcy5kYXRhLmxlbmd0aCB9XG4gICAgICAgICAgICBjdXJyUGFnZT17IGN1cnJQYWdlIH1cbiAgICAgICAgICAgIGN1cnJTaXplUGVyUGFnZT17IGN1cnJTaXplUGVyUGFnZSB9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9Cb290c3RyYXBDb250ZXh0LlByb3ZpZGVyPlxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgbGV0IHsgZGF0YSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IHBhZ2luYXRpb246IHsgb3B0aW9ucyB9IH0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHsgY3VyclBhZ2UsIGN1cnJTaXplUGVyUGFnZSB9ID0gdGhpcztcbiAgICBjb25zdCBwYWdlU3RhcnRJbmRleCA9IHR5cGVvZiBvcHRpb25zLnBhZ2VTdGFydEluZGV4ID09PSAndW5kZWZpbmVkJyA/XG4gICAgICBDb25zdC5QQUdFX1NUQVJUX0lOREVYIDogb3B0aW9ucy5wYWdlU3RhcnRJbmRleDtcblxuICAgIGRhdGEgPSB0aGlzLmlzUmVtb3RlUGFnaW5hdGlvbigpID9cbiAgICAgIGRhdGEgOlxuICAgICAgZ2V0QnlDdXJyUGFnZShcbiAgICAgICAgZGF0YSxcbiAgICAgICAgY3VyclBhZ2UsXG4gICAgICAgIGN1cnJTaXplUGVyUGFnZSxcbiAgICAgICAgcGFnZVN0YXJ0SW5kZXhcbiAgICAgICk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFBhZ2luYXRpb25EYXRhQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17IHsgZGF0YSwgc2V0UmVtb3RlRW1pdHRlcjogdGhpcy5zZXRSZW1vdGVFbWl0dGVyIH0gfT5cbiAgICAgICAgeyB0aGlzLnByb3BzLmNoaWxkcmVuIH1cbiAgICAgICAgeyB0aGlzLnJlbmRlckRlZmF1bHRQYWdpbmF0aW9uKCkgfVxuICAgICAgPC9QYWdpbmF0aW9uRGF0YUNvbnRleHQuUHJvdmlkZXI+XG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCAoKSA9PiAoe1xuICBQcm92aWRlcjogUGFnaW5hdGlvbkRhdGFQcm92aWRlcixcbiAgQ29uc3VtZXI6IFBhZ2luYXRpb25EYXRhQ29udGV4dC5Db25zdW1lclxufSk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvZGF0YS1jb250ZXh0LmpzIiwiLyogZXNsaW50IHJlYWN0L3JlcXVpcmUtZGVmYXVsdC1wcm9wczogMCAqL1xuLyogZXNsaW50IGFycm93LWJvZHktc3R5bGU6IDAgKi9cbmltcG9ydCBjcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHBhZ2VSZXNvbHZlciBmcm9tICcuL3BhZ2UtcmVzb2x2ZXInO1xuaW1wb3J0IHBhZ2luYXRpb25IYW5kbGVyIGZyb20gJy4vcGFnaW5hdGlvbi1oYW5kbGVyJztcbmltcG9ydCB7IFNpemVQZXJQYWdlRHJvcGRvd25BZGFwdGVyIH0gZnJvbSAnLi9zaXplLXBlci1wYWdlLWRyb3Bkb3duLWFkYXB0ZXInO1xuaW1wb3J0IHsgUGFnaW5hdGlvbkxpc3RXaXRoQWRhcHRlciB9IGZyb20gJy4vcGFnaW5hdGlvbi1saXN0LWFkYXB0ZXInO1xuaW1wb3J0IFBhZ2luYXRpb25Ub3RhbCBmcm9tICcuL3BhZ2luYXRpb24tdG90YWwnO1xuaW1wb3J0IENvbnN0IGZyb20gJy4vY29uc3QnO1xuXG5jbGFzcyBQYWdpbmF0aW9uIGV4dGVuZHMgcGFnZVJlc29sdmVyKENvbXBvbmVudCkge1xuICBkZWZhdWx0VG90YWwgPSAoZnJvbSwgdG8sIHNpemUpID0+IChcbiAgICA8UGFnaW5hdGlvblRvdGFsXG4gICAgICBmcm9tPXsgZnJvbSB9XG4gICAgICB0bz17IHRvIH1cbiAgICAgIGRhdGFTaXplPXsgc2l6ZSB9XG4gICAgLz5cbiAgKTtcblxuICBzZXRUb3RhbCA9IChmcm9tLCB0bywgc2l6ZSwgdG90YWwpID0+IHtcbiAgICBpZiAodG90YWwgJiYgKHR5cGVvZiB0b3RhbCA9PT0gJ2Z1bmN0aW9uJykpIHtcbiAgICAgIHJldHVybiB0b3RhbChmcm9tLCB0bywgc2l6ZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuZGVmYXVsdFRvdGFsKGZyb20sIHRvLCBzaXplKTtcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgc2hvd1RvdGFsLFxuICAgICAgZGF0YVNpemUsXG4gICAgICBwYWdlTGlzdFJlbmRlcmVyLFxuICAgICAgcGFnZUJ1dHRvblJlbmRlcmVyLFxuICAgICAgcGFnaW5hdGlvblRvdGFsUmVuZGVyZXIsXG4gICAgICBoaWRlUGFnZUxpc3RPbmx5T25lUGFnZSxcbiAgICAgIHRvdGFsUGFnZXMsXG4gICAgICBsYXN0UGFnZSxcbiAgICAgIG9uUGFnZUNoYW5nZSxcbiAgICAgIHNpemVQZXJQYWdlTGlzdCxcbiAgICAgIGN1cnJTaXplUGVyUGFnZSxcbiAgICAgIGhpZGVTaXplUGVyUGFnZSxcbiAgICAgIHNpemVQZXJQYWdlUmVuZGVyZXIsXG4gICAgICBzaXplUGVyUGFnZU9wdGlvblJlbmRlcmVyLFxuICAgICAgb25TaXplUGVyUGFnZUNoYW5nZSxcbiAgICAgIC4uLnJlc3RcbiAgICB9ID0gdGhpcy5wcm9wcztcblxuICAgIGNvbnN0IHBhZ2VzID0gdGhpcy5jYWxjdWxhdGVQYWdlU3RhdHVzKHRoaXMuY2FsY3VsYXRlUGFnZXModG90YWxQYWdlcywgbGFzdFBhZ2UpLCBsYXN0UGFnZSk7XG4gICAgY29uc3QgW2Zyb20sIHRvXSA9IHRoaXMuY2FsY3VsYXRlRnJvbVRvKCk7XG4gICAgY29uc3QgcGFnZUxpc3RDbGFzcyA9IGNzKFxuICAgICAgJ3JlYWN0LWJvb3RzdHJhcC10YWJsZS1wYWdpbmF0aW9uLWxpc3QnLFxuICAgICAgJ2NvbC1tZC02IGNvbC14cy02IGNvbC1zbS02IGNvbC1sZy02Jywge1xuICAgICAgICAncmVhY3QtYm9vdHN0cmFwLXRhYmxlLXBhZ2luYXRpb24tbGlzdC1oaWRkZW4nOiAoaGlkZVBhZ2VMaXN0T25seU9uZVBhZ2UgJiYgdG90YWxQYWdlcyA9PT0gMSlcbiAgICAgIH0pO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvdyByZWFjdC1ib290c3RyYXAtdGFibGUtcGFnaW5hdGlvblwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1tZC02IGNvbC14cy02IGNvbC1zbS02IGNvbC1sZy02XCI+XG4gICAgICAgICAgPFNpemVQZXJQYWdlRHJvcGRvd25BZGFwdGVyXG4gICAgICAgICAgICBzaXplUGVyUGFnZUxpc3Q9eyBzaXplUGVyUGFnZUxpc3QgfVxuICAgICAgICAgICAgY3VyclNpemVQZXJQYWdlPXsgY3VyclNpemVQZXJQYWdlIH1cbiAgICAgICAgICAgIGhpZGVTaXplUGVyUGFnZT17IGhpZGVTaXplUGVyUGFnZSB9XG4gICAgICAgICAgICBzaXplUGVyUGFnZVJlbmRlcmVyPXsgc2l6ZVBlclBhZ2VSZW5kZXJlciB9XG4gICAgICAgICAgICBzaXplUGVyUGFnZU9wdGlvblJlbmRlcmVyPXsgc2l6ZVBlclBhZ2VPcHRpb25SZW5kZXJlciB9XG4gICAgICAgICAgICBvblNpemVQZXJQYWdlQ2hhbmdlPXsgb25TaXplUGVyUGFnZUNoYW5nZSB9XG4gICAgICAgICAgLz5cbiAgICAgICAgICB7XG4gICAgICAgICAgICBzaG93VG90YWwgP1xuICAgICAgICAgICAgICB0aGlzLnNldFRvdGFsKFxuICAgICAgICAgICAgICAgIGZyb20sXG4gICAgICAgICAgICAgICAgdG8sXG4gICAgICAgICAgICAgICAgZGF0YVNpemUsXG4gICAgICAgICAgICAgICAgcGFnaW5hdGlvblRvdGFsUmVuZGVyZXJcbiAgICAgICAgICAgICAgKSA6IG51bGxcbiAgICAgICAgICB9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7XG4gICAgICAgICAgcGFnZUxpc3RSZW5kZXJlciA/IHBhZ2VMaXN0UmVuZGVyZXIoe1xuICAgICAgICAgICAgcGFnZXMsXG4gICAgICAgICAgICBvblBhZ2VDaGFuZ2VcbiAgICAgICAgICB9KSA6IChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXsgcGFnZUxpc3RDbGFzcyB9PlxuICAgICAgICAgICAgICA8UGFnaW5hdGlvbkxpc3RXaXRoQWRhcHRlclxuICAgICAgICAgICAgICAgIHsgLi4ucmVzdCB9XG4gICAgICAgICAgICAgICAgbGFzdFBhZ2U9eyBsYXN0UGFnZSB9XG4gICAgICAgICAgICAgICAgdG90YWxQYWdlcz17IHRvdGFsUGFnZXMgfVxuICAgICAgICAgICAgICAgIHBhZ2VCdXR0b25SZW5kZXJlcj17IHBhZ2VCdXR0b25SZW5kZXJlciB9XG4gICAgICAgICAgICAgICAgb25QYWdlQ2hhbmdlPXsgb25QYWdlQ2hhbmdlIH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIClcbiAgICAgICAgfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5QYWdpbmF0aW9uLnByb3BUeXBlcyA9IHtcbiAgZGF0YVNpemU6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgc2l6ZVBlclBhZ2VMaXN0OiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcbiAgY3VyclBhZ2U6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgY3VyclNpemVQZXJQYWdlOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIG9uUGFnZUNoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgb25TaXplUGVyUGFnZUNoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgcGFnZVN0YXJ0SW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXG4gIHBhZ2luYXRpb25TaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICBzaG93VG90YWw6IFByb3BUeXBlcy5ib29sLFxuICBwYWdlTGlzdFJlbmRlcmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgcGFnZUJ1dHRvblJlbmRlcmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgc2l6ZVBlclBhZ2VSZW5kZXJlcjogUHJvcFR5cGVzLmZ1bmMsXG4gIHBhZ2luYXRpb25Ub3RhbFJlbmRlcmVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgc2l6ZVBlclBhZ2VPcHRpb25SZW5kZXJlcjogUHJvcFR5cGVzLmZ1bmMsXG4gIGZpcnN0UGFnZVRleHQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHByZVBhZ2VUZXh0OiBQcm9wVHlwZXMuc3RyaW5nLFxuICBuZXh0UGFnZVRleHQ6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGxhc3RQYWdlVGV4dDogUHJvcFR5cGVzLnN0cmluZyxcbiAgbmV4dFBhZ2VUaXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgcHJlUGFnZVRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBmaXJzdFBhZ2VUaXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgbGFzdFBhZ2VUaXRsZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgd2l0aEZpcnN0QW5kTGFzdDogUHJvcFR5cGVzLmJvb2wsXG4gIGFsd2F5c1Nob3dBbGxCdG5zOiBQcm9wVHlwZXMuYm9vbCxcbiAgaGlkZVNpemVQZXJQYWdlOiBQcm9wVHlwZXMuYm9vbCxcbiAgaGlkZVBhZ2VMaXN0T25seU9uZVBhZ2U6IFByb3BUeXBlcy5ib29sXG59O1xuXG5QYWdpbmF0aW9uLmRlZmF1bHRQcm9wcyA9IHtcbiAgcGFnZVN0YXJ0SW5kZXg6IENvbnN0LlBBR0VfU1RBUlRfSU5ERVgsXG4gIHBhZ2luYXRpb25TaXplOiBDb25zdC5QQUdJTkFUSU9OX1NJWkUsXG4gIHdpdGhGaXJzdEFuZExhc3Q6IENvbnN0LldpdGhfRklSU1RfQU5EX0xBU1QsXG4gIGFsd2F5c1Nob3dBbGxCdG5zOiBDb25zdC5TSE9XX0FMTF9QQUdFX0JUTlMsXG4gIHNob3dUb3RhbDogQ29uc3QuU0hPV19UT1RBTCxcbiAgcGFnZUxpc3RSZW5kZXJlcjogbnVsbCxcbiAgcGFnZUJ1dHRvblJlbmRlcmVyOiBudWxsLFxuICBzaXplUGVyUGFnZVJlbmRlcmVyOiBudWxsLFxuICBwYWdpbmF0aW9uVG90YWxSZW5kZXJlcjogQ29uc3QuUEFHSU5BVElPTl9UT1RBTCxcbiAgc2l6ZVBlclBhZ2VPcHRpb25SZW5kZXJlcjogbnVsbCxcbiAgZmlyc3RQYWdlVGV4dDogQ29uc3QuRklSU1RfUEFHRV9URVhULFxuICBwcmVQYWdlVGV4dDogQ29uc3QuUFJFX1BBR0VfVEVYVCxcbiAgbmV4dFBhZ2VUZXh0OiBDb25zdC5ORVhUX1BBR0VfVEVYVCxcbiAgbGFzdFBhZ2VUZXh0OiBDb25zdC5MQVNUX1BBR0VfVEVYVCxcbiAgc2l6ZVBlclBhZ2VMaXN0OiBDb25zdC5TSVpFX1BFUl9QQUdFX0xJU1QsXG4gIG5leHRQYWdlVGl0bGU6IENvbnN0Lk5FWFRfUEFHRV9USVRMRSxcbiAgcHJlUGFnZVRpdGxlOiBDb25zdC5QUkVfUEFHRV9USVRMRSxcbiAgZmlyc3RQYWdlVGl0bGU6IENvbnN0LkZJUlNUX1BBR0VfVElUTEUsXG4gIGxhc3RQYWdlVGl0bGU6IENvbnN0LkxBU1RfUEFHRV9USVRMRSxcbiAgaGlkZVNpemVQZXJQYWdlOiBDb25zdC5ISURFX1NJWkVfUEVSX1BBR0UsXG4gIGhpZGVQYWdlTGlzdE9ubHlPbmVQYWdlOiBDb25zdC5ISURFX1BBR0VfTElTVF9PTkxZX09ORV9QQUdFXG59O1xuXG5leHBvcnQgZGVmYXVsdCBwYWdpbmF0aW9uSGFuZGxlcihQYWdpbmF0aW9uKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdpbmF0aW9uLmpzIiwiLyogZXNsaW50IGpzeC1hMTF5L2hyZWYtbm8taGFzaDogMCAqL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmNvbnN0IFNpemVQZXJQYWdlT3B0aW9uID0gKHtcbiAgdGV4dCxcbiAgcGFnZSxcbiAgb25TaXplUGVyUGFnZUNoYW5nZSxcbiAgYm9vdHN0cmFwNFxufSkgPT4gKGJvb3RzdHJhcDQgPyAoXG4gIDxhXG4gICAgaHJlZj1cIiNcIlxuICAgIHRhYkluZGV4PVwiLTFcIlxuICAgIHJvbGU9XCJtZW51aXRlbVwiXG4gICAgY2xhc3NOYW1lPVwiZHJvcGRvd24taXRlbVwiXG4gICAgZGF0YS1wYWdlPXsgcGFnZSB9XG4gICAgb25Nb3VzZURvd249eyAoZSkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgb25TaXplUGVyUGFnZUNoYW5nZShwYWdlKTtcbiAgICB9IH1cbiAgPlxuICAgIHsgdGV4dCB9XG4gIDwvYT5cbikgOiAoXG4gIDxsaVxuICAgIGtleT17IHRleHQgfVxuICAgIHJvbGU9XCJwcmVzZW50YXRpb25cIlxuICAgIGNsYXNzTmFtZT1cImRyb3Bkb3duLWl0ZW1cIlxuICA+XG4gICAgPGFcbiAgICAgIGhyZWY9XCIjXCJcbiAgICAgIHRhYkluZGV4PVwiLTFcIlxuICAgICAgcm9sZT1cIm1lbnVpdGVtXCJcbiAgICAgIGRhdGEtcGFnZT17IHBhZ2UgfVxuICAgICAgb25Nb3VzZURvd249eyAoZSkgPT4ge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIG9uU2l6ZVBlclBhZ2VDaGFuZ2UocGFnZSk7XG4gICAgICB9IH1cbiAgICA+XG4gICAgICB7IHRleHQgfVxuICAgIDwvYT5cbiAgPC9saT5cbikpO1xuXG5TaXplUGVyUGFnZU9wdGlvbi5wcm9wVHlwZXMgPSB7XG4gIHRleHQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgcGFnZTogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBvblNpemVQZXJQYWdlQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBib290c3RyYXA0OiBQcm9wVHlwZXMuYm9vbFxufTtcblxuU2l6ZVBlclBhZ2VPcHRpb24uZGVmYXVsdFByb3BzID0ge1xuICBib290c3RyYXA0OiBmYWxzZVxufTtcblxuZXhwb3J0IGRlZmF1bHQgU2l6ZVBlclBhZ2VPcHRpb247XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvc2l6ZS1wZXItcGFnZS1vcHRpb24uanMiLCIvKiBlc2xpbnQgcmVhY3QvcmVxdWlyZS1kZWZhdWx0LXByb3BzOiAwICovXG4vKiBlc2xpbnQganN4LWExMXkvaHJlZi1uby1oYXNoOiAwICovXG5pbXBvcnQgY3MgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuY2xhc3MgUGFnZUJ1dHRvbiBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuaGFuZGxlQ2xpY2sgPSB0aGlzLmhhbmRsZUNsaWNrLmJpbmQodGhpcyk7XG4gIH1cblxuICBoYW5kbGVDbGljayhlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMucHJvcHMub25QYWdlQ2hhbmdlKHRoaXMucHJvcHMucGFnZSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgcGFnZSxcbiAgICAgIHRpdGxlLFxuICAgICAgYWN0aXZlLFxuICAgICAgZGlzYWJsZWQsXG4gICAgICBjbGFzc05hbWVcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBjbGFzc2VzID0gY3Moe1xuICAgICAgYWN0aXZlLFxuICAgICAgZGlzYWJsZWQsXG4gICAgICAncGFnZS1pdGVtJzogdHJ1ZVxuICAgIH0sIGNsYXNzTmFtZSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGxpIGNsYXNzTmFtZT17IGNsYXNzZXMgfSB0aXRsZT17IHRpdGxlIH0+XG4gICAgICAgIDxhIGhyZWY9XCIjXCIgb25DbGljaz17IHRoaXMuaGFuZGxlQ2xpY2sgfSBjbGFzc05hbWU9XCJwYWdlLWxpbmtcIj57IHBhZ2UgfTwvYT5cbiAgICAgIDwvbGk+XG4gICAgKTtcbiAgfVxufVxuXG5QYWdlQnV0dG9uLnByb3BUeXBlcyA9IHtcbiAgb25QYWdlQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBwYWdlOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuc3RyaW5nXSkuaXNSZXF1aXJlZCxcbiAgYWN0aXZlOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkLFxuICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUGFnZUJ1dHRvbjtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdlLWJ1dHRvbi5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5jb25zdCBQYWdpbmF0aW9uVG90YWwgPSBwcm9wcyA9PiAoXG4gIDxzcGFuIGNsYXNzTmFtZT1cInJlYWN0LWJvb3RzdHJhcC10YWJsZS1wYWdpbmF0aW9uLXRvdGFsXCI+XG4gICAgJm5ic3A7U2hvd2luZyByb3dzIHsgcHJvcHMuZnJvbSB9IHRvJm5ic3A7eyBwcm9wcy50byB9IG9mJm5ic3A7eyBwcm9wcy5kYXRhU2l6ZSB9XG4gIDwvc3Bhbj5cbik7XG5cblBhZ2luYXRpb25Ub3RhbC5wcm9wVHlwZXMgPSB7XG4gIGZyb206IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgdG86IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgZGF0YVNpemU6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgUGFnaW5hdGlvblRvdGFsO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vcGFja2FnZXMvcmVhY3QtYm9vdHN0cmFwLXRhYmxlMi1wYWdpbmF0b3Ivc3JjL3BhZ2luYXRpb24tdG90YWwuanMiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFBhZ2luYXRpb25MaXN0IGZyb20gJy4vcGFnaW5hdGlvbi1saXN0JztcbmltcG9ydCBzdGFuZGFsb25lQWRhcHRlciBmcm9tICcuL3N0YW5kYWxvbmUtYWRhcHRlcic7XG5pbXBvcnQgUGFnaW5hdGlvbkhhbmRsZXIgZnJvbSAnLi9wYWdpbmF0aW9uLWhhbmRsZXInO1xuaW1wb3J0IHBhZ2luYXRpb25MaXN0QWRhcHRlciBmcm9tICcuL3BhZ2luYXRpb24tbGlzdC1hZGFwdGVyJztcblxuY29uc3QgUGFnaW5hdGlvbkxpc3RTdGFuZGFsb25lID0gcHJvcHMgPT4gKFxuICA8UGFnaW5hdGlvbkxpc3QgeyAuLi5wcm9wcyB9IC8+XG4pO1xuXG5leHBvcnQgZGVmYXVsdFxuc3RhbmRhbG9uZUFkYXB0ZXIoUGFnaW5hdGlvbkhhbmRsZXIocGFnaW5hdGlvbkxpc3RBZGFwdGVyKFBhZ2luYXRpb25MaXN0U3RhbmRhbG9uZSkpKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3BhY2thZ2VzL3JlYWN0LWJvb3RzdHJhcC10YWJsZTItcGFnaW5hdG9yL3NyYy9wYWdpbmF0aW9uLWxpc3Qtc3RhbmRhbG9uZS5qcyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgU2l6ZVBlclBhZ2VEcm9wZG93biBmcm9tICcuL3NpemUtcGVyLXBhZ2UtZHJvcGRvd24nO1xuaW1wb3J0IHN0YW5kYWxvbmVBZGFwdGVyIGZyb20gJy4vc3RhbmRhbG9uZS1hZGFwdGVyJztcbmltcG9ydCBwYWdpbmF0aW9uSGFuZGxlciBmcm9tICcuL3BhZ2luYXRpb24taGFuZGxlcic7XG5pbXBvcnQgc2l6ZVBlclBhZ2VEcm9wZG93bkFkYXB0ZXIgZnJvbSAnLi9zaXplLXBlci1wYWdlLWRyb3Bkb3duLWFkYXB0ZXInO1xuXG5jb25zdCBTaXplUGVyUGFnZURyb3Bkb3duU3RhbmRhbG9uZSA9IHByb3BzID0+IChcbiAgPFNpemVQZXJQYWdlRHJvcGRvd24geyAuLi5wcm9wcyB9IC8+XG4pO1xuXG5leHBvcnQgZGVmYXVsdFxuc3RhbmRhbG9uZUFkYXB0ZXIocGFnaW5hdGlvbkhhbmRsZXIoc2l6ZVBlclBhZ2VEcm9wZG93bkFkYXB0ZXIoU2l6ZVBlclBhZ2VEcm9wZG93blN0YW5kYWxvbmUpKSk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wYWNrYWdlcy9yZWFjdC1ib290c3RyYXAtdGFibGUyLXBhZ2luYXRvci9zcmMvc2l6ZS1wZXItcGFnZS1kcm9wZG93bi1zdGFuZGFsb25lLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==
//# sourceMappingURL=react-bootstrap-table2-paginator.js.map